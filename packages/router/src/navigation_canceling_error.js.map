{"version":3,"file":"navigation_canceling_error.js","sourceRoot":"","sources":["navigation_canceling_error.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAC,0BAA0B,EAAC,MAAM,UAAU,CAAC;AAEpD,OAAO,EAAC,SAAS,EAAyB,MAAM,YAAY,CAAC;AAE7D,MAAM,CAAC,MAAM,0BAA0B,GAAG,4BAA4B,CAAC;AAYvE,MAAM,UAAU,0BAA0B,CACxC,aAA4B,EAC5B,QAAmC;IAEnC,MAAM,EAAC,UAAU,EAAE,yBAAyB,EAAC,GAAG,SAAS,CAAC,QAAQ,CAAC;QACjE,CAAC,CAAC,EAAC,UAAU,EAAE,QAAQ,EAAE,yBAAyB,EAAE,SAAS,EAAC;QAC9D,CAAC,CAAC,QAAQ,CAAC;IACb,MAAM,KAAK,GAAG,wBAAwB,CACpC,SAAS,IAAI,mBAAmB,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,EACtE,0BAA0B,CAAC,QAAQ,CACG,CAAC;IACzC,KAAK,CAAC,GAAG,GAAG,UAAU,CAAC;IACvB,KAAK,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;IAC5D,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,UAAU,wBAAwB,CACtC,OAA8B,EAC9B,IAAgC;IAEhC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,6BAA6B,OAAO,IAAI,EAAE,EAAE,CAA6B,CAAC;IAClG,KAAK,CAAC,0BAA0B,CAAC,GAAG,IAAI,CAAC;IACzC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC9B,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,UAAU,qCAAqC,CACnD,KAAoD;IAEpD,OAAO,CACL,0BAA0B,CAAC,KAAK,CAAC;QACjC,SAAS,CAAE,KAA6C,CAAC,GAAG,CAAC,CAC9D,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,0BAA0B,CAAC,KAAc;IACvD,OAAO,CAAC,CAAC,KAAK,IAAK,KAAkC,CAAC,0BAA0B,CAAC,CAAC;AACpF,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {NavigationCancellationCode} from './events';\nimport {NavigationBehaviorOptions, RedirectCommand} from './models';\nimport {isUrlTree, UrlSerializer, UrlTree} from './url_tree';\n\nexport const NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n\nexport type NavigationCancelingError = Error & {\n  [NAVIGATION_CANCELING_ERROR]: true;\n  cancellationCode: NavigationCancellationCode;\n};\nexport type RedirectingNavigationCancelingError = NavigationCancelingError & {\n  url: UrlTree;\n  navigationBehaviorOptions?: NavigationBehaviorOptions;\n  cancellationCode: NavigationCancellationCode.Redirect;\n};\n\nexport function redirectingNavigationError(\n  urlSerializer: UrlSerializer,\n  redirect: UrlTree | RedirectCommand,\n): RedirectingNavigationCancelingError {\n  const {redirectTo, navigationBehaviorOptions} = isUrlTree(redirect)\n    ? {redirectTo: redirect, navigationBehaviorOptions: undefined}\n    : redirect;\n  const error = navigationCancelingError(\n    ngDevMode && `Redirecting to \"${urlSerializer.serialize(redirectTo)}\"`,\n    NavigationCancellationCode.Redirect,\n  ) as RedirectingNavigationCancelingError;\n  error.url = redirectTo;\n  error.navigationBehaviorOptions = navigationBehaviorOptions;\n  return error;\n}\n\nexport function navigationCancelingError(\n  message: string | null | false,\n  code: NavigationCancellationCode,\n) {\n  const error = new Error(`NavigationCancelingError: ${message || ''}`) as NavigationCancelingError;\n  error[NAVIGATION_CANCELING_ERROR] = true;\n  error.cancellationCode = code;\n  return error;\n}\n\nexport function isRedirectingNavigationCancelingError(\n  error: unknown | RedirectingNavigationCancelingError,\n): error is RedirectingNavigationCancelingError {\n  return (\n    isNavigationCancelingError(error) &&\n    isUrlTree((error as RedirectingNavigationCancelingError).url)\n  );\n}\n\nexport function isNavigationCancelingError(error: unknown): error is NavigationCancelingError {\n  return !!error && (error as NavigationCancelingError)[NAVIGATION_CANCELING_ERROR];\n}\n"]}