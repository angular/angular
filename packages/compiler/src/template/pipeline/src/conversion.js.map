{"version":3,"file":"conversion.js","sourceRoot":"","sources":["conversion.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport * as o from '../../../output/output_ast';\nimport * as ir from '../ir';\n\nexport const BINARY_OPERATORS = new Map([\n  ['&&', o.BinaryOperator.And],\n  ['>', o.BinaryOperator.Bigger],\n  ['>=', o.BinaryOperator.BiggerEquals],\n  ['|', o.BinaryOperator.BitwiseOr],\n  ['&', o.BinaryOperator.BitwiseAnd],\n  ['/', o.BinaryOperator.Divide],\n  ['=', o.BinaryOperator.Assign],\n  ['==', o.BinaryOperator.Equals],\n  ['===', o.BinaryOperator.Identical],\n  ['<', o.BinaryOperator.Lower],\n  ['<=', o.BinaryOperator.LowerEquals],\n  ['-', o.BinaryOperator.Minus],\n  ['%', o.BinaryOperator.Modulo],\n  ['**', o.BinaryOperator.Exponentiation],\n  ['*', o.BinaryOperator.Multiply],\n  ['!=', o.BinaryOperator.NotEquals],\n  ['!==', o.BinaryOperator.NotIdentical],\n  ['??', o.BinaryOperator.NullishCoalesce],\n  ['||', o.BinaryOperator.Or],\n  ['+', o.BinaryOperator.Plus],\n  ['in', o.BinaryOperator.In],\n  ['+=', o.BinaryOperator.AdditionAssignment],\n  ['-=', o.BinaryOperator.SubtractionAssignment],\n  ['*=', o.BinaryOperator.MultiplicationAssignment],\n  ['/=', o.BinaryOperator.DivisionAssignment],\n  ['%=', o.BinaryOperator.RemainderAssignment],\n  ['**=', o.BinaryOperator.ExponentiationAssignment],\n  ['&&=', o.BinaryOperator.AndAssignment],\n  ['||=', o.BinaryOperator.OrAssignment],\n  ['??=', o.BinaryOperator.NullishCoalesceAssignment],\n]);\n\nexport function namespaceForKey(namespacePrefixKey: string | null): ir.Namespace {\n  const NAMESPACES = new Map([\n    ['svg', ir.Namespace.SVG],\n    ['math', ir.Namespace.Math],\n  ]);\n  if (namespacePrefixKey === null) {\n    return ir.Namespace.HTML;\n  }\n  return NAMESPACES.get(namespacePrefixKey) ?? ir.Namespace.HTML;\n}\n\nexport function keyForNamespace(namespace: ir.Namespace): string | null {\n  const NAMESPACES = new Map([\n    ['svg', ir.Namespace.SVG],\n    ['math', ir.Namespace.Math],\n  ]);\n  for (const [k, n] of NAMESPACES.entries()) {\n    if (n === namespace) {\n      return k;\n    }\n  }\n  return null; // No namespace prefix for HTML\n}\n\nexport function prefixWithNamespace(strippedTag: string, namespace: ir.Namespace): string {\n  if (namespace === ir.Namespace.HTML) {\n    return strippedTag;\n  }\n  return `:${keyForNamespace(namespace)}:${strippedTag}`;\n}\n\nexport type LiteralType = string | number | boolean | null | Array<LiteralType>;\n\nexport function literalOrArrayLiteral(value: LiteralType): o.Expression {\n  if (Array.isArray(value)) {\n    return o.literalArr(value.map(literalOrArrayLiteral));\n  }\n  return o.literal(value);\n}\n"]}