{"version":3,"file":"generate_local_let_references.js","sourceRoot":"","sources":["generate_local_let_references.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,KAAK,EAAE,MAAM,UAAU,CAAC;AAI/B;;;GAGG;AACH,MAAM,UAAU,0BAA0B,CAAC,GAA4B;IACrE,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;QAC7B,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAC7B,IAAI,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACnC,SAAS;YACX,CAAC;YAED,MAAM,QAAQ,GAA0B;gBACtC,IAAI,EAAE,EAAE,CAAC,oBAAoB,CAAC,UAAU;gBACxC,IAAI,EAAE,IAAI;gBACV,UAAU,EAAE,EAAE,CAAC,YAAY;gBAC3B,KAAK,EAAE,IAAI;aACZ,CAAC;YAEF,EAAE,CAAC,MAAM,CAAC,OAAO,CACf,EAAE,EACF,EAAE,CAAC,gBAAgB,CACjB,GAAG,CAAC,cAAc,EAAE,EACpB,QAAQ,EACR,IAAI,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,UAAU,CAAC,EACvD,EAAE,CAAC,aAAa,CAAC,IAAI,CACtB,CACF,CAAC;QACJ,CAAC;IACH,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport * as ir from '../../ir';\n\nimport type {ComponentCompilationJob} from '../compilation';\n\n/**\n * Replaces the `storeLet` ops with variables that can be\n * used to reference the value within the same view.\n */\nexport function generateLocalLetReferences(job: ComponentCompilationJob): void {\n  for (const unit of job.units) {\n    for (const op of unit.update) {\n      if (op.kind !== ir.OpKind.StoreLet) {\n        continue;\n      }\n\n      const variable: ir.IdentifierVariable = {\n        kind: ir.SemanticVariableKind.Identifier,\n        name: null,\n        identifier: op.declaredName,\n        local: true,\n      };\n\n      ir.OpList.replace<ir.UpdateOp>(\n        op,\n        ir.createVariableOp<ir.UpdateOp>(\n          job.allocateXrefId(),\n          variable,\n          new ir.StoreLetExpr(op.target, op.value, op.sourceSpan),\n          ir.VariableFlags.None,\n        ),\n      );\n    }\n  }\n}\n"]}