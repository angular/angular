{"version":3,"file":"convert_animations.js","sourceRoot":"","sources":["convert_animations.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,KAAK,EAAE,MAAM,UAAU,CAAC;AAC/B,OAAO,KAAK,CAAC,MAAM,+BAA+B,CAAC;AACnD,OAAO,EAAiB,kBAAkB,EAAC,MAAM,gBAAgB,CAAC;AAElE;;GAEG;AACH,SAAS,aAAa,CACpB,QAAkD,EAClD,IAAe;IAEf,MAAM,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9B,IAAI,EAAE,KAAK,SAAS,EAAE,CAAC;QACrB,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;IACxE,CAAC;IACD,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,GAAmB;IACnD,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAuC,CAAC;IAChE,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;QAC7B,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAC7B,IAAI,CAAC,EAAE,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAE,CAAC;gBACnC,SAAS;YACX,CAAC;YACD,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;QAC7B,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;YAC5B,IAAI,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC;gBAC3C,MAAM,iBAAiB,GAAG,cAAc,CAAC,EAAE,CAAC,CAAC;gBAC7C,IAAI,GAAG,CAAC,IAAI,KAAK,kBAAkB,CAAC,IAAI,EAAE,CAAC;oBACzC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACtC,CAAC;qBAAM,CAAC;oBACN,EAAE,CAAC,MAAM,CAAC,WAAW,CAAc,iBAAiB,EAAE,aAAa,CAAC,QAAQ,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC5F,CAAC;gBACD,EAAE,CAAC,MAAM,CAAC,MAAM,CAAc,EAAE,CAAC,CAAC;YACpC,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC;AAED,SAAS,cAAc,CAAC,EAAyB;IAC/C,IAAI,EAAE,CAAC,oBAAoB,2CAAmC,EAAE,CAAC;QAC/D,+BAA+B;QAC/B,OAAO,EAAE,CAAC,uBAAuB,CAC/B,EAAE,CAAC,IAAI,EACP,EAAE,CAAC,MAAM,EACT,EAAE,CAAC,IAAI,KAAK,eAAe,CAAC,CAAC,sCAAwB,CAAC,qCAAuB,EAC7E,EAAE,CAAC,UAAU,EACb,EAAE,CAAC,eAAe,EAClB,EAAE,CAAC,UAAU,CACd,CAAC;IACJ,CAAC;SAAM,CAAC;QACN,MAAM,UAAU,GAAG,EAAE,CAAC,UAA2B,CAAC;QAClD,OAAO,EAAE,CAAC,iBAAiB,CACzB,EAAE,CAAC,IAAI,EACP,EAAE,CAAC,MAAM,EACT,EAAE,CAAC,IAAI,KAAK,eAAe,CAAC,CAAC,sCAAwB,CAAC,qCAAuB,EAC7E,CAAC,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,UAAU,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,EAChF,EAAE,CAAC,eAAe,EAClB,EAAE,CAAC,UAAU,CACd,CAAC;IACJ,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport * as ir from '../../ir';\nimport * as o from '../../../../output/output_ast';\nimport {CompilationJob, CompilationJobKind} from '../compilation';\n\n/**\n * Looks up an element in the given map by xref ID.\n */\nfunction lookupElement(\n  elements: Map<ir.XrefId, ir.ElementOrContainerOps>,\n  xref: ir.XrefId,\n): ir.ElementOrContainerOps {\n  const el = elements.get(xref);\n  if (el === undefined) {\n    throw new Error('All attributes should have an element-like target.');\n  }\n  return el;\n}\n\nexport function convertAnimations(job: CompilationJob): void {\n  const elements = new Map<ir.XrefId, ir.ElementOrContainerOps>();\n  for (const unit of job.units) {\n    for (const op of unit.create) {\n      if (!ir.isElementOrContainerOp(op)) {\n        continue;\n      }\n      elements.set(op.xref, op);\n    }\n  }\n\n  for (const unit of job.units) {\n    for (const op of unit.ops()) {\n      if (op.kind === ir.OpKind.AnimationBinding) {\n        const createAnimationOp = getAnimationOp(op);\n        if (job.kind === CompilationJobKind.Host) {\n          unit.create.push(createAnimationOp);\n        } else {\n          ir.OpList.insertAfter<ir.CreateOp>(createAnimationOp, lookupElement(elements, op.target));\n        }\n        ir.OpList.remove<ir.UpdateOp>(op);\n      }\n    }\n  }\n}\n\nfunction getAnimationOp(op: ir.AnimationBindingOp): ir.AnimationOp | ir.AnimationStringOp {\n  if (op.animationBindingKind === ir.AnimationBindingKind.STRING) {\n    // this is a simple string case\n    return ir.createAnimationStringOp(\n      op.name,\n      op.target,\n      op.name === 'animate.enter' ? ir.AnimationKind.ENTER : ir.AnimationKind.LEAVE,\n      op.expression,\n      op.securityContext,\n      op.sourceSpan,\n    );\n  } else {\n    const expression = op.expression as ir.Expression;\n    return ir.createAnimationOp(\n      op.name,\n      op.target,\n      op.name === 'animate.enter' ? ir.AnimationKind.ENTER : ir.AnimationKind.LEAVE,\n      [ir.createStatementOp(new o.ReturnStatement(expression, expression.sourceSpan))],\n      op.securityContext,\n      op.sourceSpan,\n    );\n  }\n}\n"]}