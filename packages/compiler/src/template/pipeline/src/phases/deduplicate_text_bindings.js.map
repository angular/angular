{"version":3,"file":"deduplicate_text_bindings.js","sourceRoot":"","sources":["deduplicate_text_bindings.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,KAAK,EAAE,MAAM,UAAU,CAAC;AAG/B;;GAEG;AACH,MAAM,UAAU,uBAAuB,CAAC,GAAmB;IACzD,MAAM,IAAI,GAAG,IAAI,GAAG,EAA0B,CAAC;IAC/C,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;QAC7B,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC;YACxC,IAAI,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC,eAAe,EAAE,CAAC;gBACxD,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,IAAI,GAAG,EAAE,CAAC;gBACxD,IAAI,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;oBAChC,IAAI,GAAG,CAAC,aAAa,KAAK,EAAE,CAAC,iBAAiB,CAAC,yBAAyB,EAAE,CAAC;wBACzE,uFAAuF;wBACvF,wFAAwF;wBACxF,iFAAiF;wBACjF,kCAAkC;wBAClC,IAAI,EAAE,CAAC,IAAI,KAAK,OAAO,IAAI,EAAE,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;4BAC/C,EAAE,CAAC,MAAM,CAAC,MAAM,CAAc,EAAE,CAAC,CAAC;wBACpC,CAAC;oBACH,CAAC;yBAAM,CAAC;wBACN,uFAAuF;wBACvF,kFAAkF;wBAClF,uCAAuC;oBACzC,CAAC;gBACH,CAAC;gBACD,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC5B,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;YACtC,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport * as ir from '../../ir';\nimport type {CompilationJob} from '../compilation';\n\n/**\n * Deduplicate text bindings, e.g. <div class=\"cls1\" class=\"cls2\">\n */\nexport function deduplicateTextBindings(job: CompilationJob): void {\n  const seen = new Map<ir.XrefId, Set<string>>();\n  for (const unit of job.units) {\n    for (const op of unit.update.reversed()) {\n      if (op.kind === ir.OpKind.Binding && op.isTextAttribute) {\n        const seenForElement = seen.get(op.target) || new Set();\n        if (seenForElement.has(op.name)) {\n          if (job.compatibility === ir.CompatibilityMode.TemplateDefinitionBuilder) {\n            // For most duplicated attributes, TemplateDefinitionBuilder lists all of the values in\n            // the consts array. However, for style and class attributes it only keeps the last one.\n            // We replicate that behavior here since it has actual consequences for apps with\n            // duplicate class or style attrs.\n            if (op.name === 'style' || op.name === 'class') {\n              ir.OpList.remove<ir.UpdateOp>(op);\n            }\n          } else {\n            // TODO: Determine the correct behavior. It would probably make sense to merge multiple\n            // style and class attributes. Alternatively we could just throw an error, as HTML\n            // doesn't permit duplicate attributes.\n          }\n        }\n        seenForElement.add(op.name);\n        seen.set(op.target, seenForElement);\n      }\n    }\n  }\n}\n"]}