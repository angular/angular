{"version":3,"file":"convert_i18n_bindings.js","sourceRoot":"","sources":["convert_i18n_bindings.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,KAAK,EAAE,MAAM,UAAU,CAAC;AAG/B;;;GAGG;AACH,MAAM,UAAU,mBAAmB,CAAC,GAAmB;IACrD,MAAM,oBAAoB,GAAwC,IAAI,GAAG,EAAE,CAAC;IAC5E,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;QAC7B,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAC7B,IAAI,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;gBACzC,oBAAoB,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YAC1C,CAAC;QACH,CAAC;QAED,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAC7B,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC;gBAChB,KAAK,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACxB,KAAK,EAAE,CAAC,MAAM,CAAC,SAAS;oBACtB,IAAI,EAAE,CAAC,WAAW,KAAK,IAAI,EAAE,CAAC;wBAC5B,SAAS;oBACX,CAAC;oBAED,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,YAAY,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC;wBACjD,SAAS;oBACX,CAAC;oBAED,MAAM,qBAAqB,GAAG,oBAAoB,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;oBAClE,IAAI,qBAAqB,KAAK,SAAS,EAAE,CAAC;wBACxC,MAAM,IAAI,KAAK,CACb,gIAAgI,CACjI,CAAC;oBACJ,CAAC;oBAED,IAAI,qBAAqB,CAAC,MAAM,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC;wBAC/C,MAAM,IAAI,KAAK,CACb,wFAAwF,CACzF,CAAC;oBACJ,CAAC;oBAED,MAAM,GAAG,GAAkB,EAAE,CAAC;oBAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC1D,MAAM,IAAI,GAAG,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;wBAE1C,IAAI,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,MAAM,KAAK,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC/E,MAAM,IAAI,KAAK,CACb,6HAA6H,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,MAAM,qBAAqB,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,cAAc,CACtO,CAAC;wBACJ,CAAC;wBAED,GAAG,CAAC,IAAI,CACN,EAAE,CAAC,sBAAsB,CACvB,EAAE,CAAC,WAAW,EACd,qBAAqB,CAAC,MAAM,EAC5B,qBAAqB,CAAC,IAAI,EAC1B,qBAAqB,CAAC,MAAM,EAC5B,IAAI,EACJ,IAAI,EACJ,EAAE,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,CAAC,EACjC,EAAE,CAAC,uBAAuB,CAAC,QAAQ,EACnC,EAAE,CAAC,iBAAiB,CAAC,aAAa,EAClC,EAAE,CAAC,IAAI,EACP,EAAE,CAAC,UAAU,CACd,CACF,CAAC;oBACJ,CAAC;oBACD,EAAE,CAAC,MAAM,CAAC,eAAe,CAAC,EAAiB,EAAE,GAAG,CAAC,CAAC;oBAClD,MAAM;YACV,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport * as ir from '../../ir';\nimport {CompilationJob} from '../compilation';\n\n/**\n * Some binding instructions in the update block may actually correspond to i18n bindings. In that\n * case, they should be replaced with i18nExp instructions for the dynamic portions.\n */\nexport function convertI18nBindings(job: CompilationJob): void {\n  const i18nAttributesByElem: Map<ir.XrefId, ir.I18nAttributesOp> = new Map();\n  for (const unit of job.units) {\n    for (const op of unit.create) {\n      if (op.kind === ir.OpKind.I18nAttributes) {\n        i18nAttributesByElem.set(op.target, op);\n      }\n    }\n\n    for (const op of unit.update) {\n      switch (op.kind) {\n        case ir.OpKind.Property:\n        case ir.OpKind.Attribute:\n          if (op.i18nContext === null) {\n            continue;\n          }\n\n          if (!(op.expression instanceof ir.Interpolation)) {\n            continue;\n          }\n\n          const i18nAttributesForElem = i18nAttributesByElem.get(op.target);\n          if (i18nAttributesForElem === undefined) {\n            throw new Error(\n              'AssertionError: An i18n attribute binding instruction requires the owning element to have an I18nAttributes create instruction',\n            );\n          }\n\n          if (i18nAttributesForElem.target !== op.target) {\n            throw new Error(\n              'AssertionError: Expected i18nAttributes target element to match binding target element',\n            );\n          }\n\n          const ops: ir.UpdateOp[] = [];\n          for (let i = 0; i < op.expression.expressions.length; i++) {\n            const expr = op.expression.expressions[i];\n\n            if (op.expression.i18nPlaceholders.length !== op.expression.expressions.length) {\n              throw new Error(\n                `AssertionError: An i18n attribute binding instruction requires the same number of expressions and placeholders, but found ${op.expression.i18nPlaceholders.length} placeholders and ${op.expression.expressions.length} expressions`,\n              );\n            }\n\n            ops.push(\n              ir.createI18nExpressionOp(\n                op.i18nContext,\n                i18nAttributesForElem.target,\n                i18nAttributesForElem.xref,\n                i18nAttributesForElem.handle,\n                expr,\n                null,\n                op.expression.i18nPlaceholders[i],\n                ir.I18nParamResolutionTime.Creation,\n                ir.I18nExpressionFor.I18nAttribute,\n                op.name,\n                op.sourceSpan,\n              ),\n            );\n          }\n          ir.OpList.replaceWithMany(op as ir.UpdateOp, ops);\n          break;\n      }\n    }\n  }\n}\n"]}