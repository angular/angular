{"version":3,"file":"ng_container.js","sourceRoot":"","sources":["ng_container.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,KAAK,EAAE,MAAM,UAAU,CAAC;AAG/B,MAAM,aAAa,GAAG,cAAc,CAAC;AAErC;;GAEG;AACH,MAAM,UAAU,sBAAsB,CAAC,GAAmB;IACxD,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;QAC7B,MAAM,mBAAmB,GAAG,IAAI,GAAG,EAAa,CAAC;QACjD,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAC7B,IAAI,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,MAAM,CAAC,YAAY,IAAI,EAAE,CAAC,GAAG,KAAK,aAAa,EAAE,CAAC;gBACnE,gEAAgE;gBAC/D,EAAyB,CAAC,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC;gBAC3D,mBAAmB,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YACnC,CAAC;YAED,IAAI,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,MAAM,CAAC,UAAU,IAAI,mBAAmB,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;gBACzE,gFAAgF;gBAC/E,EAAyB,CAAC,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC;YAC3D,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport * as ir from '../../ir';\nimport type {CompilationJob} from '../compilation';\n\nconst CONTAINER_TAG = 'ng-container';\n\n/**\n * Replace an `Element` or `ElementStart` whose tag is `ng-container` with a specific op.\n */\nexport function generateNgContainerOps(job: CompilationJob): void {\n  for (const unit of job.units) {\n    const updatedElementXrefs = new Set<ir.XrefId>();\n    for (const op of unit.create) {\n      if (op.kind === ir.OpKind.ElementStart && op.tag === CONTAINER_TAG) {\n        // Transmute the `ElementStart` instruction to `ContainerStart`.\n        (op as ir.Op<ir.CreateOp>).kind = ir.OpKind.ContainerStart;\n        updatedElementXrefs.add(op.xref);\n      }\n\n      if (op.kind === ir.OpKind.ElementEnd && updatedElementXrefs.has(op.xref)) {\n        // This `ElementEnd` is associated with an `ElementStart` we already transmuted.\n        (op as ir.Op<ir.CreateOp>).kind = ir.OpKind.ContainerEnd;\n      }\n    }\n  }\n}\n"]}