{"version":3,"file":"apply_i18n_expressions.js","sourceRoot":"","sources":["apply_i18n_expressions.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,KAAK,EAAE,MAAM,UAAU,CAAC;AAG/B;;GAEG;AACH,MAAM,UAAU,oBAAoB,CAAC,GAAmB;IACtD,MAAM,YAAY,GAAG,IAAI,GAAG,EAA+B,CAAC;IAC5D,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;QAC7B,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAC7B,IAAI,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;gBACtC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAChC,CAAC;QACH,CAAC;IACH,CAAC;IAED,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;QAC7B,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAC7B,8EAA8E;YAC9E,IAAI,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,MAAM,CAAC,cAAc,IAAI,gBAAgB,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,CAAC;gBAC/E,yDAAyD;gBACzD,EAAE,CAAC,MAAM,CAAC,WAAW,CACnB,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC,MAAM,EAAE,IAAK,CAAC,EACpD,EAAE,CACH,CAAC;YACJ,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC;AAED;;GAEG;AACH,SAAS,gBAAgB,CAAC,YAA8C,EAAE,EAAuB;IAC/F,8DAA8D;IAC9D,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,KAAK,EAAE,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;QAC/C,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;IAC7C,MAAM,WAAW,GAAG,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAEtD,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;QAC1B,MAAM,IAAI,KAAK,CACb,uFAAuF,CACxF,CAAC;IACJ,CAAC;IAED,IAAI,WAAW,KAAK,SAAS,EAAE,CAAC;QAC9B,MAAM,IAAI,KAAK,CACb,4FAA4F,CAC7F,CAAC;IACJ,CAAC;IAED,iGAAiG;IACjG,8CAA8C;IAE9C,yCAAyC;IACzC,IAAI,OAAO,CAAC,SAAS,KAAK,IAAI,EAAE,CAAC;QAC/B,+CAA+C;QAC/C,IAAI,OAAO,CAAC,SAAS,KAAK,WAAW,CAAC,SAAS,EAAE,CAAC;YAChD,OAAO,IAAI,CAAC;QACd,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,8CAA8C;IAC9C,IAAI,EAAE,CAAC,SAAS,KAAK,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QACvC,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport * as ir from '../../ir';\nimport {CompilationJob} from '../compilation';\n\n/**\n * Adds apply operations after i18n expressions.\n */\nexport function applyI18nExpressions(job: CompilationJob): void {\n  const i18nContexts = new Map<ir.XrefId, ir.I18nContextOp>();\n  for (const unit of job.units) {\n    for (const op of unit.create) {\n      if (op.kind === ir.OpKind.I18nContext) {\n        i18nContexts.set(op.xref, op);\n      }\n    }\n  }\n\n  for (const unit of job.units) {\n    for (const op of unit.update) {\n      // Only add apply after expressions that are not followed by more expressions.\n      if (op.kind === ir.OpKind.I18nExpression && needsApplication(i18nContexts, op)) {\n        // TODO: what should be the source span for the apply op?\n        ir.OpList.insertAfter<ir.UpdateOp>(\n          ir.createI18nApplyOp(op.i18nOwner, op.handle, null!),\n          op,\n        );\n      }\n    }\n  }\n}\n\n/**\n * Checks whether the given expression op needs to be followed with an apply op.\n */\nfunction needsApplication(i18nContexts: Map<ir.XrefId, ir.I18nContextOp>, op: ir.I18nExpressionOp) {\n  // If the next op is not another expression, we need to apply.\n  if (op.next?.kind !== ir.OpKind.I18nExpression) {\n    return true;\n  }\n\n  const context = i18nContexts.get(op.context);\n  const nextContext = i18nContexts.get(op.next.context);\n\n  if (context === undefined) {\n    throw new Error(\n      \"AssertionError: expected an I18nContextOp to exist for the I18nExpressionOp's context\",\n    );\n  }\n\n  if (nextContext === undefined) {\n    throw new Error(\n      \"AssertionError: expected an I18nContextOp to exist for the next I18nExpressionOp's context\",\n    );\n  }\n\n  // If the next op is an expression targeting a different i18n block (or different element, in the\n  // case of i18n attributes), we need to apply.\n\n  // First, handle the case of i18n blocks.\n  if (context.i18nBlock !== null) {\n    // This is a block context. Compare the blocks.\n    if (context.i18nBlock !== nextContext.i18nBlock) {\n      return true;\n    }\n    return false;\n  }\n\n  // Second, handle the case of i18n attributes.\n  if (op.i18nOwner !== op.next.i18nOwner) {\n    return true;\n  }\n  return false;\n}\n"]}