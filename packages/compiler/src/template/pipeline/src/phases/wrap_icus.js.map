{"version":3,"file":"wrap_icus.js","sourceRoot":"","sources":["wrap_icus.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,KAAK,EAAE,MAAM,UAAU,CAAC;AAG/B;;GAEG;AACH,MAAM,UAAU,YAAY,CAAC,GAAmB;IAC9C,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,aAAa,GAA0B,IAAI,CAAC;QAChD,IAAI,WAAW,GAAqB,IAAI,CAAC;QACzC,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAC7B,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC;gBAChB,KAAK,EAAE,CAAC,MAAM,CAAC,SAAS;oBACtB,aAAa,GAAG,EAAE,CAAC;oBACnB,MAAM;gBACR,KAAK,EAAE,CAAC,MAAM,CAAC,OAAO;oBACpB,aAAa,GAAG,IAAI,CAAC;oBACrB,MAAM;gBACR,KAAK,EAAE,CAAC,MAAM,CAAC,QAAQ;oBACrB,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;wBAC3B,WAAW,GAAG,GAAG,CAAC,cAAc,EAAE,CAAC;wBACnC,0DAA0D;wBAC1D,EAAE,CAAC,MAAM,CAAC,YAAY,CACpB,EAAE,CAAC,iBAAiB,CAAC,WAAW,EAAE,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,EAC9D,EAAE,CACH,CAAC;oBACJ,CAAC;oBACD,MAAM;gBACR,KAAK,EAAE,CAAC,MAAM,CAAC,MAAM;oBACnB,IAAI,WAAW,KAAK,IAAI,EAAE,CAAC;wBACzB,EAAE,CAAC,MAAM,CAAC,WAAW,CAAc,EAAE,CAAC,eAAe,CAAC,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;wBAC9E,WAAW,GAAG,IAAI,CAAC;oBACrB,CAAC;oBACD,MAAM;YACV,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport * as ir from '../../ir';\nimport {CompilationJob} from '../compilation';\n\n/**\n * Wraps ICUs that do not already belong to an i18n block in a new i18n block.\n */\nexport function wrapI18nIcus(job: CompilationJob): void {\n  for (const unit of job.units) {\n    let currentI18nOp: ir.I18nStartOp | null = null;\n    let addedI18nId: ir.XrefId | null = null;\n    for (const op of unit.create) {\n      switch (op.kind) {\n        case ir.OpKind.I18nStart:\n          currentI18nOp = op;\n          break;\n        case ir.OpKind.I18nEnd:\n          currentI18nOp = null;\n          break;\n        case ir.OpKind.IcuStart:\n          if (currentI18nOp === null) {\n            addedI18nId = job.allocateXrefId();\n            // ICU i18n start/end ops should not receive source spans.\n            ir.OpList.insertBefore<ir.CreateOp>(\n              ir.createI18nStartOp(addedI18nId, op.message, undefined, null),\n              op,\n            );\n          }\n          break;\n        case ir.OpKind.IcuEnd:\n          if (addedI18nId !== null) {\n            ir.OpList.insertAfter<ir.CreateOp>(ir.createI18nEndOp(addedI18nId, null), op);\n            addedI18nId = null;\n          }\n          break;\n      }\n    }\n  }\n}\n"]}