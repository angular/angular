{"version":3,"file":"pure_literal_structures.js","sourceRoot":"","sources":["pure_literal_structures.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,KAAK,CAAC,MAAM,+BAA+B,CAAC;AACnD,OAAO,KAAK,EAAE,MAAM,UAAU,CAAC;AAG/B,MAAM,UAAU,6BAA6B,CAAC,GAAmB;IAC/D,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;QAC7B,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAC7B,EAAE,CAAC,wBAAwB,CACzB,EAAE,EACF,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;gBACd,IAAI,KAAK,GAAG,EAAE,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC;oBACnD,OAAO,IAAI,CAAC;gBACd,CAAC;gBAED,IAAI,IAAI,YAAY,CAAC,CAAC,gBAAgB,EAAE,CAAC;oBACvC,OAAO,qBAAqB,CAAC,IAAI,CAAC,CAAC;gBACrC,CAAC;qBAAM,IAAI,IAAI,YAAY,CAAC,CAAC,cAAc,EAAE,CAAC;oBAC5C,OAAO,mBAAmB,CAAC,IAAI,CAAC,CAAC;gBACnC,CAAC;gBAED,OAAO,IAAI,CAAC;YACd,CAAC,EACD,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAC3B,CAAC;QACJ,CAAC;IACH,CAAC;AACH,CAAC;AAED,SAAS,qBAAqB,CAAC,IAAwB;IACrD,MAAM,cAAc,GAAmB,EAAE,CAAC;IAC1C,MAAM,eAAe,GAAmB,EAAE,CAAC;IAC3C,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;QACjC,IAAI,KAAK,CAAC,UAAU,EAAE,EAAE,CAAC;YACvB,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC;aAAM,CAAC;YACN,MAAM,GAAG,GAAG,eAAe,CAAC,MAAM,CAAC;YACnC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7D,CAAC;IACH,CAAC;IACD,OAAO,IAAI,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,eAAe,CAAC,CAAC;AAChF,CAAC;AAED,SAAS,mBAAmB,CAAC,IAAsB;IACjD,IAAI,cAAc,GAAwB,EAAE,CAAC;IAC7C,MAAM,eAAe,GAAmB,EAAE,CAAC;IAC3C,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;QACjC,IAAI,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,CAAC;YAC7B,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC;aAAM,CAAC;YACN,MAAM,GAAG,GAAG,eAAe,CAAC,MAAM,CAAC;YACnC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAClC,cAAc,CAAC,IAAI,CACjB,IAAI,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,yBAAyB,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CACtF,CAAC;QACJ,CAAC;IACH,CAAC;IACD,OAAO,IAAI,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,eAAe,CAAC,CAAC;AAChF,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport * as o from '../../../../output/output_ast';\nimport * as ir from '../../ir';\nimport type {CompilationJob} from '../compilation';\n\nexport function generatePureLiteralStructures(job: CompilationJob): void {\n  for (const unit of job.units) {\n    for (const op of unit.update) {\n      ir.transformExpressionsInOp(\n        op,\n        (expr, flags) => {\n          if (flags & ir.VisitorContextFlag.InChildOperation) {\n            return expr;\n          }\n\n          if (expr instanceof o.LiteralArrayExpr) {\n            return transformLiteralArray(expr);\n          } else if (expr instanceof o.LiteralMapExpr) {\n            return transformLiteralMap(expr);\n          }\n\n          return expr;\n        },\n        ir.VisitorContextFlag.None,\n      );\n    }\n  }\n}\n\nfunction transformLiteralArray(expr: o.LiteralArrayExpr): o.Expression {\n  const derivedEntries: o.Expression[] = [];\n  const nonConstantArgs: o.Expression[] = [];\n  for (const entry of expr.entries) {\n    if (entry.isConstant()) {\n      derivedEntries.push(entry);\n    } else {\n      const idx = nonConstantArgs.length;\n      nonConstantArgs.push(entry);\n      derivedEntries.push(new ir.PureFunctionParameterExpr(idx));\n    }\n  }\n  return new ir.PureFunctionExpr(o.literalArr(derivedEntries), nonConstantArgs);\n}\n\nfunction transformLiteralMap(expr: o.LiteralMapExpr): o.Expression {\n  let derivedEntries: o.LiteralMapEntry[] = [];\n  const nonConstantArgs: o.Expression[] = [];\n  for (const entry of expr.entries) {\n    if (entry.value.isConstant()) {\n      derivedEntries.push(entry);\n    } else {\n      const idx = nonConstantArgs.length;\n      nonConstantArgs.push(entry.value);\n      derivedEntries.push(\n        new o.LiteralMapEntry(entry.key, new ir.PureFunctionParameterExpr(idx), entry.quoted),\n      );\n    }\n  }\n  return new ir.PureFunctionExpr(o.literalMap(derivedEntries), nonConstantArgs);\n}\n"]}