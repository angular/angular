{"version":3,"file":"resolve_i18n_expression_placeholders.js","sourceRoot":"","sources":["resolve_i18n_expression_placeholders.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport * as ir from '../../ir';\nimport {ComponentCompilationJob} from '../compilation';\n\n/**\n * Resolve the i18n expression placeholders in i18n messages.\n */\nexport function resolveI18nExpressionPlaceholders(job: ComponentCompilationJob) {\n  // Record all of the i18n context ops, and the sub-template index for each i18n op.\n  const subTemplateIndices = new Map<ir.XrefId, number | null>();\n  const i18nContexts = new Map<ir.XrefId, ir.I18nContextOp>();\n  const icuPlaceholders = new Map<ir.XrefId, ir.IcuPlaceholderOp>();\n  for (const unit of job.units) {\n    for (const op of unit.create) {\n      switch (op.kind) {\n        case ir.OpKind.I18nStart:\n          subTemplateIndices.set(op.xref, op.subTemplateIndex);\n          break;\n        case ir.OpKind.I18nContext:\n          i18nContexts.set(op.xref, op);\n          break;\n        case ir.OpKind.IcuPlaceholder:\n          icuPlaceholders.set(op.xref, op);\n          break;\n      }\n    }\n  }\n\n  // Keep track of the next available expression index for each i18n message.\n  const expressionIndices = new Map<ir.XrefId, number>();\n\n  // Keep track of a reference index for each expression.\n  // We use different references for normal i18n expressio and attribute i18n expressions. This is\n  // because child i18n blocks in templates don't get their own context, since they're rolled into\n  // the translated message of the parent, but they may target a different slot.\n  const referenceIndex = (op: ir.I18nExpressionOp): ir.XrefId =>\n    op.usage === ir.I18nExpressionFor.I18nText ? op.i18nOwner : op.context;\n\n  for (const unit of job.units) {\n    for (const op of unit.update) {\n      if (op.kind === ir.OpKind.I18nExpression) {\n        const index = expressionIndices.get(referenceIndex(op)) || 0;\n        const subTemplateIndex = subTemplateIndices.get(op.i18nOwner) ?? null;\n        const value: ir.I18nParamValue = {\n          value: index,\n          subTemplateIndex: subTemplateIndex,\n          flags: ir.I18nParamValueFlags.ExpressionIndex,\n        };\n        updatePlaceholder(op, value, i18nContexts, icuPlaceholders);\n        expressionIndices.set(referenceIndex(op), index + 1);\n      }\n    }\n  }\n}\n\nfunction updatePlaceholder(\n  op: ir.I18nExpressionOp,\n  value: ir.I18nParamValue,\n  i18nContexts: Map<ir.XrefId, ir.I18nContextOp>,\n  icuPlaceholders: Map<ir.XrefId, ir.IcuPlaceholderOp>,\n) {\n  if (op.i18nPlaceholder !== null) {\n    const i18nContext = i18nContexts.get(op.context)!;\n    const params =\n      op.resolutionTime === ir.I18nParamResolutionTime.Creation\n        ? i18nContext.params\n        : i18nContext.postprocessingParams;\n    const values = params.get(op.i18nPlaceholder) || [];\n    values.push(value);\n    params.set(op.i18nPlaceholder, values);\n  }\n  if (op.icuPlaceholder !== null) {\n    const icuPlaceholderOp = icuPlaceholders.get(op.icuPlaceholder);\n    icuPlaceholderOp?.expressionPlaceholders.push(value);\n  }\n}\n"]}