{"version":3,"file":"propagate_i18n_blocks.js","sourceRoot":"","sources":["propagate_i18n_blocks.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,KAAK,EAAE,MAAM,UAAU,CAAC;AAG/B;;;;;GAKG;AACH,MAAM,UAAU,mBAAmB,CAAC,GAA4B;IAC9D,8BAA8B,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAC9C,CAAC;AAED;;GAEG;AACH,SAAS,8BAA8B,CACrC,IAAyB,EACzB,gBAAwB;IAExB,IAAI,SAAS,GAA0B,IAAI,CAAC;IAC5C,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;QAC7B,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC;YAChB,KAAK,EAAE,CAAC,MAAM,CAAC,SAAS;gBACtB,EAAE,CAAC,gBAAgB,GAAG,gBAAgB,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC;gBACvE,SAAS,GAAG,EAAE,CAAC;gBACf,MAAM;YACR,KAAK,EAAE,CAAC,MAAM,CAAC,OAAO;gBACpB,8EAA8E;gBAC9E,IAAI,SAAU,CAAC,gBAAgB,KAAK,IAAI,EAAE,CAAC;oBACzC,gBAAgB,GAAG,CAAC,CAAC;gBACvB,CAAC;gBACD,SAAS,GAAG,IAAI,CAAC;gBACjB,MAAM;YACR,KAAK,EAAE,CAAC,MAAM,CAAC,iBAAiB,CAAC;YACjC,KAAK,EAAE,CAAC,MAAM,CAAC,uBAAuB,CAAC;YACvC,KAAK,EAAE,CAAC,MAAM,CAAC,QAAQ;gBACrB,gBAAgB,GAAG,0BAA0B,CAC3C,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAE,EAC5B,SAAS,EACT,EAAE,CAAC,eAAe,EAClB,gBAAgB,CACjB,CAAC;gBACF,MAAM;YACR,KAAK,EAAE,CAAC,MAAM,CAAC,cAAc;gBAC3B,8CAA8C;gBAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAE,CAAC;gBAC7C,gBAAgB,GAAG,0BAA0B,CAC3C,OAAO,EACP,SAAS,EACT,EAAE,CAAC,eAAe,EAClB,gBAAgB,CACjB,CAAC;gBACF,gFAAgF;gBAChF,IAAI,EAAE,CAAC,SAAS,KAAK,IAAI,EAAE,CAAC;oBAC1B,gBAAgB,GAAG,0BAA0B,CAC3C,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAE,EACjC,SAAS,EACT,EAAE,CAAC,oBAAoB,EACvB,gBAAgB,CACjB,CAAC;gBACJ,CAAC;gBACD,MAAM;YACR,KAAK,EAAE,CAAC,MAAM,CAAC,UAAU;gBACvB,IAAI,EAAE,CAAC,YAAY,KAAK,IAAI,EAAE,CAAC;oBAC7B,gBAAgB,GAAG,0BAA0B,CAC3C,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,YAAY,CAAE,EACpC,SAAS,EACT,EAAE,CAAC,2BAA2B,EAC9B,gBAAgB,CACjB,CAAC;gBACJ,CAAC;gBACD,MAAM;QACV,CAAC;IACH,CAAC;IACD,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AAED;;GAEG;AACH,SAAS,0BAA0B,CACjC,IAAyB,EACzB,SAAgC,EAChC,eAAwE,EACxE,gBAAwB;IAExB,yFAAyF;IACzF,kDAAkD;IAClD,IAAI,eAAe,KAAK,SAAS,EAAE,CAAC;QAClC,IAAI,SAAS,KAAK,IAAI,EAAE,CAAC;YACvB,MAAM,KAAK,CAAC,iEAAiE,CAAC,CAAC;QACjF,CAAC;QACD,gBAAgB,EAAE,CAAC;QACnB,oBAAoB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACxC,CAAC;IAED,kDAAkD;IAClD,OAAO,8BAA8B,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;AAChE,CAAC;AAED;;GAEG;AACH,SAAS,oBAAoB,CAAC,IAAyB,EAAE,UAA0B;IACjF,+EAA+E;IAC/E,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,KAAK,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;QACxD,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;QACrC,EAAE,CAAC,MAAM,CAAC,WAAW;QACnB,yEAAyE;QACzE,EAAE,CAAC,iBAAiB,CAAC,EAAE,EAAE,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,EACnE,IAAI,CAAC,MAAM,CAAC,IAAI,CACjB,CAAC;QACF,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACzE,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport * as i18n from '../../../../i18n/i18n_ast';\nimport * as ir from '../../ir';\nimport {ComponentCompilationJob, ViewCompilationUnit} from '../compilation';\n\n/**\n * Propagate i18n blocks down through child templates that act as placeholders in the root i18n\n * message. Specifically, perform an in-order traversal of all the views, and add i18nStart/i18nEnd\n * op pairs into descending views. Also, assign an increasing sub-template index to each\n * descending view.\n */\nexport function propagateI18nBlocks(job: ComponentCompilationJob): void {\n  propagateI18nBlocksToTemplates(job.root, 0);\n}\n\n/**\n * Propagates i18n ops in the given view through to any child views recursively.\n */\nfunction propagateI18nBlocksToTemplates(\n  unit: ViewCompilationUnit,\n  subTemplateIndex: number,\n): number {\n  let i18nBlock: ir.I18nStartOp | null = null;\n  for (const op of unit.create) {\n    switch (op.kind) {\n      case ir.OpKind.I18nStart:\n        op.subTemplateIndex = subTemplateIndex === 0 ? null : subTemplateIndex;\n        i18nBlock = op;\n        break;\n      case ir.OpKind.I18nEnd:\n        // When we exit a root-level i18n block, reset the sub-template index counter.\n        if (i18nBlock!.subTemplateIndex === null) {\n          subTemplateIndex = 0;\n        }\n        i18nBlock = null;\n        break;\n      case ir.OpKind.ConditionalCreate:\n      case ir.OpKind.ConditionalBranchCreate:\n      case ir.OpKind.Template:\n        subTemplateIndex = propagateI18nBlocksForView(\n          unit.job.views.get(op.xref)!,\n          i18nBlock,\n          op.i18nPlaceholder,\n          subTemplateIndex,\n        );\n        break;\n      case ir.OpKind.RepeaterCreate:\n        // Propagate i18n blocks to the @for template.\n        const forView = unit.job.views.get(op.xref)!;\n        subTemplateIndex = propagateI18nBlocksForView(\n          forView,\n          i18nBlock,\n          op.i18nPlaceholder,\n          subTemplateIndex,\n        );\n        // Then if there's an @empty template, propagate the i18n blocks for it as well.\n        if (op.emptyView !== null) {\n          subTemplateIndex = propagateI18nBlocksForView(\n            unit.job.views.get(op.emptyView)!,\n            i18nBlock,\n            op.emptyI18nPlaceholder,\n            subTemplateIndex,\n          );\n        }\n        break;\n      case ir.OpKind.Projection:\n        if (op.fallbackView !== null) {\n          subTemplateIndex = propagateI18nBlocksForView(\n            unit.job.views.get(op.fallbackView)!,\n            i18nBlock,\n            op.fallbackViewI18nPlaceholder,\n            subTemplateIndex,\n          );\n        }\n        break;\n    }\n  }\n  return subTemplateIndex;\n}\n\n/**\n * Propagate i18n blocks for a view.\n */\nfunction propagateI18nBlocksForView(\n  view: ViewCompilationUnit,\n  i18nBlock: ir.I18nStartOp | null,\n  i18nPlaceholder: i18n.TagPlaceholder | i18n.BlockPlaceholder | undefined,\n  subTemplateIndex: number,\n) {\n  // We found an <ng-template> inside an i18n block; increment the sub-template counter and\n  // wrap the template's view in a child i18n block.\n  if (i18nPlaceholder !== undefined) {\n    if (i18nBlock === null) {\n      throw Error('Expected template with i18n placeholder to be in an i18n block.');\n    }\n    subTemplateIndex++;\n    wrapTemplateWithI18n(view, i18nBlock);\n  }\n\n  // Continue traversing inside the template's view.\n  return propagateI18nBlocksToTemplates(view, subTemplateIndex);\n}\n\n/**\n * Wraps a template view with i18n start and end ops.\n */\nfunction wrapTemplateWithI18n(unit: ViewCompilationUnit, parentI18n: ir.I18nStartOp) {\n  // Only add i18n ops if they have not already been propagated to this template.\n  if (unit.create.head.next?.kind !== ir.OpKind.I18nStart) {\n    const id = unit.job.allocateXrefId();\n    ir.OpList.insertAfter(\n      // Nested ng-template i18n start/end ops should not receive source spans.\n      ir.createI18nStartOp(id, parentI18n.message, parentI18n.root, null),\n      unit.create.head,\n    );\n    ir.OpList.insertBefore(ir.createI18nEndOp(id, null), unit.create.tail);\n  }\n}\n"]}