{"version":3,"file":"any_cast.js","sourceRoot":"","sources":["any_cast.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,KAAK,CAAC,MAAM,+BAA+B,CAAC;AACnD,OAAO,KAAK,EAAE,MAAM,UAAU,CAAC;AAG/B;;;GAGG;AACH,MAAM,UAAU,cAAc,CAAC,GAAmB;IAChD,KAAK,MAAM,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;QAC7B,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;YAC5B,EAAE,CAAC,wBAAwB,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC1E,CAAC;IACH,CAAC;AACH,CAAC;AAED,SAAS,UAAU,CAAC,CAAe;IACjC,IACE,CAAC,YAAY,CAAC,CAAC,kBAAkB;QACjC,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,eAAe;QAClC,CAAC,CAAC,EAAE,CAAC,IAAI,KAAK,MAAM,EACpB,CAAC;QACD,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACxB,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;QAC7E,CAAC;QACD,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IACD,OAAO,CAAC,CAAC;AACX,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport * as o from '../../../../output/output_ast';\nimport * as ir from '../../ir';\nimport {CompilationJob} from '../compilation';\n\n/**\n * Find any function calls to `$any`, excluding `this.$any`, and delete them, since they have no\n * runtime effects.\n */\nexport function deleteAnyCasts(job: CompilationJob): void {\n  for (const unit of job.units) {\n    for (const op of unit.ops()) {\n      ir.transformExpressionsInOp(op, removeAnys, ir.VisitorContextFlag.None);\n    }\n  }\n}\n\nfunction removeAnys(e: o.Expression): o.Expression {\n  if (\n    e instanceof o.InvokeFunctionExpr &&\n    e.fn instanceof ir.LexicalReadExpr &&\n    e.fn.name === '$any'\n  ) {\n    if (e.args.length !== 1) {\n      throw new Error('The $any builtin function expects exactly one argument.');\n    }\n    return e.args[0];\n  }\n  return e;\n}\n"]}