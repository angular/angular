{"version":3,"file":"naming.js","sourceRoot":"","sources":["naming.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {sanitizeIdentifier} from '../../../../parse_util';\nimport * as ir from '../../ir';\n\nimport {hyphenate} from './parse_extracted_styles';\n\nimport {type CompilationJob, type CompilationUnit, ViewCompilationUnit} from '../compilation';\n\n/**\n * Generate names for functions and variables across all views.\n *\n * This includes propagating those names into any `ir.ReadVariableExpr`s of those variables, so that\n * the reads can be emitted correctly.\n */\nexport function nameFunctionsAndVariables(job: CompilationJob): void {\n  addNamesToView(\n    job.root,\n    job.componentName,\n    {index: 0},\n    job.compatibility === ir.CompatibilityMode.TemplateDefinitionBuilder,\n  );\n}\n\nfunction addNamesToView(\n  unit: CompilationUnit,\n  baseName: string,\n  state: {index: number},\n  compatibility: boolean,\n): void {\n  if (unit.fnName === null) {\n    // Ensure unique names for view units. This is necessary because there might be multiple\n    // components with same names in the context of the same pool. Only add the suffix\n    // if really needed.\n    unit.fnName = unit.job.pool.uniqueName(\n      sanitizeIdentifier(`${baseName}_${unit.job.fnSuffix}`),\n      /* alwaysIncludeSuffix */ false,\n    );\n  }\n\n  // Keep track of the names we assign to variables in the view. We'll need to propagate these\n  // into reads of those variables afterwards.\n  const varNames = new Map<ir.XrefId, string>();\n\n  for (const op of unit.ops()) {\n    switch (op.kind) {\n      case ir.OpKind.Property:\n      case ir.OpKind.DomProperty:\n        if (op.bindingKind === ir.BindingKind.LegacyAnimation) {\n          op.name = '@' + op.name;\n        }\n        break;\n      case ir.OpKind.Animation:\n        if (op.handlerFnName === null) {\n          const animationKind = op.name.replace('.', '');\n          op.handlerFnName = `${unit.fnName}_${animationKind}_cb`;\n          op.handlerFnName = sanitizeIdentifier(op.handlerFnName);\n        }\n        break;\n      case ir.OpKind.AnimationListener:\n        if (op.handlerFnName !== null) {\n          break;\n        }\n        if (!op.hostListener && op.targetSlot.slot === null) {\n          throw new Error(`Expected a slot to be assigned`);\n        }\n        const animationKind = op.name.replace('.', '');\n        if (op.hostListener) {\n          op.handlerFnName = `${baseName}_${animationKind}_HostBindingHandler`;\n        } else {\n          op.handlerFnName = `${unit.fnName}_${op.tag!.replace('-', '_')}_${animationKind}_${\n            op.targetSlot.slot\n          }_listener`;\n        }\n        op.handlerFnName = sanitizeIdentifier(op.handlerFnName);\n        break;\n      case ir.OpKind.Listener:\n        if (op.handlerFnName !== null) {\n          break;\n        }\n        if (!op.hostListener && op.targetSlot.slot === null) {\n          throw new Error(`Expected a slot to be assigned`);\n        }\n        let animation = '';\n        if (op.isLegacyAnimationListener) {\n          op.name = `@${op.name}.${op.legacyAnimationPhase}`;\n          animation = 'animation';\n        }\n        if (op.hostListener) {\n          op.handlerFnName = `${baseName}_${animation}${op.name}_HostBindingHandler`;\n        } else {\n          op.handlerFnName = `${unit.fnName}_${op.tag!.replace('-', '_')}_${animation}${op.name}_${\n            op.targetSlot.slot\n          }_listener`;\n        }\n        op.handlerFnName = sanitizeIdentifier(op.handlerFnName);\n        break;\n      case ir.OpKind.TwoWayListener:\n        if (op.handlerFnName !== null) {\n          break;\n        }\n        if (op.targetSlot.slot === null) {\n          throw new Error(`Expected a slot to be assigned`);\n        }\n        op.handlerFnName = sanitizeIdentifier(\n          `${unit.fnName}_${op.tag!.replace('-', '_')}_${op.name}_${op.targetSlot.slot}_listener`,\n        );\n        break;\n      case ir.OpKind.Variable:\n        varNames.set(op.xref, getVariableName(unit, op.variable, state));\n        break;\n      case ir.OpKind.RepeaterCreate:\n        if (!(unit instanceof ViewCompilationUnit)) {\n          throw new Error(`AssertionError: must be compiling a component`);\n        }\n        if (op.handle.slot === null) {\n          throw new Error(`Expected slot to be assigned`);\n        }\n        if (op.emptyView !== null) {\n          const emptyView = unit.job.views.get(op.emptyView)!;\n          // Repeater empty view function is at slot +2 (metadata is in the first slot).\n          addNamesToView(\n            emptyView,\n            `${baseName}_${op.functionNameSuffix}Empty_${op.handle.slot + 2}`,\n            state,\n            compatibility,\n          );\n        }\n        // Repeater primary view function is at slot +1 (metadata is in the first slot).\n        addNamesToView(\n          unit.job.views.get(op.xref)!,\n          `${baseName}_${op.functionNameSuffix}_${op.handle.slot + 1}`,\n          state,\n          compatibility,\n        );\n        break;\n      case ir.OpKind.Projection:\n        if (!(unit instanceof ViewCompilationUnit)) {\n          throw new Error(`AssertionError: must be compiling a component`);\n        }\n        if (op.handle.slot === null) {\n          throw new Error(`Expected slot to be assigned`);\n        }\n        if (op.fallbackView !== null) {\n          const fallbackView = unit.job.views.get(op.fallbackView)!;\n          addNamesToView(\n            fallbackView,\n            `${baseName}_ProjectionFallback_${op.handle.slot}`,\n            state,\n            compatibility,\n          );\n        }\n        break;\n      case ir.OpKind.ConditionalCreate:\n      case ir.OpKind.ConditionalBranchCreate:\n      case ir.OpKind.Template:\n        if (!(unit instanceof ViewCompilationUnit)) {\n          throw new Error(`AssertionError: must be compiling a component`);\n        }\n        const childView = unit.job.views.get(op.xref)!;\n        if (op.handle.slot === null) {\n          throw new Error(`Expected slot to be assigned`);\n        }\n        const suffix = op.functionNameSuffix.length === 0 ? '' : `_${op.functionNameSuffix}`;\n        addNamesToView(childView, `${baseName}${suffix}_${op.handle.slot}`, state, compatibility);\n        break;\n      case ir.OpKind.StyleProp:\n        op.name = normalizeStylePropName(op.name);\n        if (compatibility) {\n          op.name = stripImportant(op.name);\n        }\n        break;\n      case ir.OpKind.ClassProp:\n        if (compatibility) {\n          op.name = stripImportant(op.name);\n        }\n        break;\n    }\n  }\n\n  // Having named all variables declared in the view, now we can push those names into the\n  // `ir.ReadVariableExpr` expressions which represent reads of those variables.\n  for (const op of unit.ops()) {\n    ir.visitExpressionsInOp(op, (expr) => {\n      if (!(expr instanceof ir.ReadVariableExpr) || expr.name !== null) {\n        return;\n      }\n      if (!varNames.has(expr.xref)) {\n        throw new Error(`Variable ${expr.xref} not yet named`);\n      }\n      expr.name = varNames.get(expr.xref)!;\n    });\n  }\n}\n\nfunction getVariableName(\n  unit: CompilationUnit,\n  variable: ir.SemanticVariable,\n  state: {index: number},\n): string {\n  if (variable.name === null) {\n    switch (variable.kind) {\n      case ir.SemanticVariableKind.Context:\n        variable.name = `ctx_r${state.index++}`;\n        break;\n      case ir.SemanticVariableKind.Identifier:\n        if (unit.job.compatibility === ir.CompatibilityMode.TemplateDefinitionBuilder) {\n          // TODO: Prefix increment and `_r` are for compatibility with the old naming scheme.\n          // This has the potential to cause collisions when `ctx` is the identifier, so we need a\n          // special check for that as well.\n          const compatPrefix = variable.identifier === 'ctx' ? 'i' : '';\n          variable.name = `${variable.identifier}_${compatPrefix}r${++state.index}`;\n        } else {\n          variable.name = `${variable.identifier}_i${state.index++}`;\n        }\n\n        break;\n      default:\n        // TODO: Prefix increment for compatibility only.\n        variable.name = `_r${++state.index}`;\n        break;\n    }\n  }\n  return variable.name;\n}\n\n/**\n * Normalizes a style prop name by hyphenating it (unless its a CSS variable).\n */\nfunction normalizeStylePropName(name: string) {\n  return name.startsWith('--') ? name : hyphenate(name);\n}\n\n/**\n * Strips `!important` out of the given style or class name.\n */\nfunction stripImportant(name: string) {\n  const importantIndex = name.indexOf('!important');\n  if (importantIndex > -1) {\n    return name.substring(0, importantIndex);\n  }\n  return name;\n}\n"]}