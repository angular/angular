{"version":3,"file":"r3_hmr_compiler.js","sourceRoot":"","sources":["r3_hmr_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport * as o from '../output/output_ast';\nimport {Identifiers as R3} from './r3_identifiers';\nimport {devOnlyGuardedExpression} from './util';\n\n/** Metadata necessary to compile HMR-related code call. */\nexport interface R3HmrMetadata {\n  /** Component class for which HMR is being enabled. */\n  type: o.Expression;\n\n  /** Name of the component class. */\n  className: string;\n\n  /** File path of the component class. */\n  filePath: string;\n\n  /**\n   * When the compiler generates new imports, they get produced as namespace imports\n   * (e.g. import * as i0 from '@angular/core'). These namespaces have to be captured and passed\n   * along to the update callback.\n   */\n  namespaceDependencies: R3HmrNamespaceDependency[];\n\n  /**\n   * HMR update functions cannot contain imports so any locals the generated code depends on\n   * (e.g. references to imports within the same file or imported symbols) have to be passed in\n   * as function parameters. This array contains the names and runtime representation of the locals.\n   */\n  localDependencies: {name: string; runtimeRepresentation: o.Expression}[];\n}\n\n/** HMR dependency on a namespace import. */\nexport interface R3HmrNamespaceDependency {\n  /** Module name of the import. */\n  moduleName: string;\n\n  /**\n   * Name under which to refer to the namespace inside\n   * HMR-related code. Must be a valid JS identifier.\n   */\n  assignedName: string;\n}\n\n/**\n * Compiles the expression that initializes HMR for a class.\n * @param meta HMR metadata extracted from the class.\n */\nexport function compileHmrInitializer(meta: R3HmrMetadata): o.Expression {\n  const moduleName = 'm';\n  const dataName = 'd';\n  const timestampName = 't';\n  const idName = 'id';\n  const importCallbackName = `${meta.className}_HmrLoad`;\n  const namespaces = meta.namespaceDependencies.map((dep) => {\n    return new o.ExternalExpr({moduleName: dep.moduleName, name: null});\n  });\n\n  // m.default\n  const defaultRead = o.variable(moduleName).prop('default');\n\n  // ɵɵreplaceMetadata(Comp, m.default, [...namespaces], [...locals], import.meta, id);\n  const replaceCall = o\n    .importExpr(R3.replaceMetadata)\n    .callFn([\n      meta.type,\n      defaultRead,\n      o.literalArr(namespaces),\n      o.literalArr(meta.localDependencies.map((l) => l.runtimeRepresentation)),\n      o.variable('import').prop('meta'),\n      o.variable(idName),\n    ]);\n\n  // (m) => m.default && ɵɵreplaceMetadata(...)\n  const replaceCallback = o.arrowFn([new o.FnParam(moduleName)], defaultRead.and(replaceCall));\n\n  // getReplaceMetadataURL(id, timestamp, import.meta.url)\n  const url = o\n    .importExpr(R3.getReplaceMetadataURL)\n    .callFn([\n      o.variable(idName),\n      o.variable(timestampName),\n      o.variable('import').prop('meta').prop('url'),\n    ]);\n\n  // function Cmp_HmrLoad(t) {\n  //   import(/* @vite-ignore */ url).then((m) => m.default && replaceMetadata(...));\n  // }\n  const importCallback = new o.DeclareFunctionStmt(\n    importCallbackName,\n    [new o.FnParam(timestampName)],\n    [\n      // The vite-ignore special comment is required to prevent Vite from generating a superfluous\n      // warning for each usage within the development code. If Vite provides a method to\n      // programmatically avoid this warning in the future, this added comment can be removed here.\n      new o.DynamicImportExpr(url, null, '@vite-ignore')\n        .prop('then')\n        .callFn([replaceCallback])\n        .toStmt(),\n    ],\n    null,\n    o.StmtModifier.Final,\n  );\n\n  // (d) => d.id === id && Cmp_HmrLoad(d.timestamp)\n  const updateCallback = o.arrowFn(\n    [new o.FnParam(dataName)],\n    o\n      .variable(dataName)\n      .prop('id')\n      .identical(o.variable(idName))\n      .and(o.variable(importCallbackName).callFn([o.variable(dataName).prop('timestamp')])),\n  );\n\n  // Cmp_HmrLoad(Date.now());\n  // Initial call to kick off the loading in order to avoid edge cases with components\n  // coming from lazy chunks that change before the chunk has loaded.\n  const initialCall = o\n    .variable(importCallbackName)\n    .callFn([o.variable('Date').prop('now').callFn([])]);\n\n  // import.meta.hot\n  const hotRead = o.variable('import').prop('meta').prop('hot');\n\n  // import.meta.hot.on('angular:component-update', () => ...);\n  const hotListener = hotRead\n    .clone()\n    .prop('on')\n    .callFn([o.literal('angular:component-update'), updateCallback]);\n\n  return o\n    .arrowFn(\n      [],\n      [\n        // const id = <id>;\n        new o.DeclareVarStmt(\n          idName,\n          o.literal(encodeURIComponent(`${meta.filePath}@${meta.className}`)),\n          null,\n          o.StmtModifier.Final,\n        ),\n        // function Cmp_HmrLoad() {...}.\n        importCallback,\n        // ngDevMode && Cmp_HmrLoad(Date.now());\n        devOnlyGuardedExpression(initialCall).toStmt(),\n        // ngDevMode && import.meta.hot && import.meta.hot.on(...)\n        devOnlyGuardedExpression(hotRead.and(hotListener)).toStmt(),\n      ],\n    )\n    .callFn([]);\n}\n\n/**\n * Compiles the HMR update callback for a class.\n * @param definitions Compiled definitions for the class (e.g. `defineComponent` calls).\n * @param constantStatements Supporting constants statements that were generated alongside\n *  the definition.\n * @param meta HMR metadata extracted from the class.\n */\nexport function compileHmrUpdateCallback(\n  definitions: {name: string; initializer: o.Expression | null; statements: o.Statement[]}[],\n  constantStatements: o.Statement[],\n  meta: R3HmrMetadata,\n): o.DeclareFunctionStmt {\n  const namespaces = 'ɵɵnamespaces';\n  const params = [meta.className, namespaces].map((name) => new o.FnParam(name, o.DYNAMIC_TYPE));\n  const body: o.Statement[] = [];\n\n  for (const local of meta.localDependencies) {\n    params.push(new o.FnParam(local.name));\n  }\n\n  // Declare variables that read out the individual namespaces.\n  for (let i = 0; i < meta.namespaceDependencies.length; i++) {\n    body.push(\n      new o.DeclareVarStmt(\n        meta.namespaceDependencies[i].assignedName,\n        o.variable(namespaces).key(o.literal(i)),\n        o.DYNAMIC_TYPE,\n        o.StmtModifier.Final,\n      ),\n    );\n  }\n\n  body.push(...constantStatements);\n\n  for (const field of definitions) {\n    if (field.initializer !== null) {\n      body.push(o.variable(meta.className).prop(field.name).set(field.initializer).toStmt());\n\n      for (const stmt of field.statements) {\n        body.push(stmt);\n      }\n    }\n  }\n\n  return new o.DeclareFunctionStmt(\n    `${meta.className}_UpdateMetadata`,\n    params,\n    body,\n    null,\n    o.StmtModifier.Final,\n  );\n}\n"]}