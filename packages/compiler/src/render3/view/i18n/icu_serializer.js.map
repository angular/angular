{"version":3,"file":"icu_serializer.js","sourceRoot":"","sources":["icu_serializer.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAIH,OAAO,EAAC,yBAAyB,EAAC,MAAM,QAAQ,CAAC;AAEjD,MAAM,oBAAoB;IACxB,SAAS,CAAC,IAAe;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,cAAc,CAAC,SAAyB;QACtC,OAAO,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvE,CAAC;IAED,QAAQ,CAAC,GAAa;QACpB,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CACzC,CAAC,CAAS,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CACpD,CAAC;QACF,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,qBAAqB,KAAK,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;QACpF,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,mBAAmB,CAAC,EAAuB;QACzC,OAAO,EAAE,CAAC,MAAM;YACd,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;YAC7B,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,QAAQ;iBACzC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;iBACjC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC;IAClD,CAAC;IAED,gBAAgB,CAAC,EAAoB;QACnC,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,qBAAqB,CAAC,EAAyB;QAC7C,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,QAAQ;aAChD,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACjC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC;IAC9C,CAAC;IAED,mBAAmB,CAAC,EAAuB,EAAE,OAAa;QACxD,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAEO,QAAQ,CAAC,KAAa;QAC5B,OAAO,IAAI,yBAAyB,CAAC,KAAK,EAAE,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC;IAC3E,CAAC;CACF;AAED,MAAM,UAAU,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAC9C,MAAM,UAAU,gBAAgB,CAAC,GAAa;IAC5C,OAAO,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC/B,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport * as i18n from '../../../i18n/i18n_ast';\n\nimport {formatI18nPlaceholderName} from './util';\n\nclass IcuSerializerVisitor implements i18n.Visitor {\n  visitText(text: i18n.Text): any {\n    return text.value;\n  }\n\n  visitContainer(container: i18n.Container): any {\n    return container.children.map((child) => child.visit(this)).join('');\n  }\n\n  visitIcu(icu: i18n.Icu): any {\n    const strCases = Object.keys(icu.cases).map(\n      (k: string) => `${k} {${icu.cases[k].visit(this)}}`,\n    );\n    const result = `{${icu.expressionPlaceholder}, ${icu.type}, ${strCases.join(' ')}}`;\n    return result;\n  }\n\n  visitTagPlaceholder(ph: i18n.TagPlaceholder): any {\n    return ph.isVoid\n      ? this.formatPh(ph.startName)\n      : `${this.formatPh(ph.startName)}${ph.children\n          .map((child) => child.visit(this))\n          .join('')}${this.formatPh(ph.closeName)}`;\n  }\n\n  visitPlaceholder(ph: i18n.Placeholder): any {\n    return this.formatPh(ph.name);\n  }\n\n  visitBlockPlaceholder(ph: i18n.BlockPlaceholder): any {\n    return `${this.formatPh(ph.startName)}${ph.children\n      .map((child) => child.visit(this))\n      .join('')}${this.formatPh(ph.closeName)}`;\n  }\n\n  visitIcuPlaceholder(ph: i18n.IcuPlaceholder, context?: any): any {\n    return this.formatPh(ph.name);\n  }\n\n  private formatPh(value: string): string {\n    return `{${formatI18nPlaceholderName(value, /* useCamelCase */ false)}}`;\n  }\n}\n\nconst serializer = new IcuSerializerVisitor();\nexport function serializeIcuNode(icu: i18n.Icu): string {\n  return icu.visit(serializer);\n}\n"]}