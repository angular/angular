{"version":3,"file":"query_generation.js","sourceRoot":"","sources":["query_generation.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ConstantPool} from '../../constant_pool';\nimport * as core from '../../core';\nimport * as o from '../../output/output_ast';\nimport {Identifiers as R3} from '../r3_identifiers';\nimport {ForwardRefHandling} from '../util';\n\nimport {R3QueryMetadata} from './api';\nimport {CONTEXT_NAME, RENDER_FLAGS, TEMPORARY_NAME, temporaryAllocator} from './util';\n\n//  if (rf & flags) { .. }\nfunction renderFlagCheckIfStmt(flags: core.RenderFlags, statements: o.Statement[]): o.IfStmt {\n  return o.ifStmt(o.variable(RENDER_FLAGS).bitwiseAnd(o.literal(flags), null), statements);\n}\n\n/**\n * A set of flags to be used with Queries.\n *\n * NOTE: Ensure changes here are in sync with `packages/core/src/render3/interfaces/query.ts`\n */\nexport const enum QueryFlags {\n  /**\n   * No flags\n   */\n  none = 0b0000,\n\n  /**\n   * Whether or not the query should descend into children.\n   */\n  descendants = 0b0001,\n\n  /**\n   * The query can be computed statically and hence can be assigned eagerly.\n   *\n   * NOTE: Backwards compatibility with ViewEngine.\n   */\n  isStatic = 0b0010,\n\n  /**\n   * If the `QueryList` should fire change event only if actual change to query was computed (vs old\n   * behavior where the change was fired whenever the query was recomputed, even if the recomputed\n   * query resulted in the same list.)\n   */\n  emitDistinctChangesOnly = 0b0100,\n}\n\n/**\n * Translates query flags into `TQueryFlags` type in\n * packages/core/src/render3/interfaces/query.ts\n * @param query\n */\nfunction toQueryFlags(query: R3QueryMetadata): number {\n  return (\n    (query.descendants ? QueryFlags.descendants : QueryFlags.none) |\n    (query.static ? QueryFlags.isStatic : QueryFlags.none) |\n    (query.emitDistinctChangesOnly ? QueryFlags.emitDistinctChangesOnly : QueryFlags.none)\n  );\n}\n\nexport function getQueryPredicate(\n  query: R3QueryMetadata,\n  constantPool: ConstantPool,\n): o.Expression {\n  if (Array.isArray(query.predicate)) {\n    let predicate: o.Expression[] = [];\n    query.predicate.forEach((selector: string): void => {\n      // Each item in predicates array may contain strings with comma-separated refs\n      // (for ex. 'ref, ref1, ..., refN'), thus we extract individual refs and store them\n      // as separate array entities\n      const selectors = selector.split(',').map((token) => o.literal(token.trim()));\n      predicate.push(...selectors);\n    });\n    return constantPool.getConstLiteral(o.literalArr(predicate), true);\n  } else {\n    // The original predicate may have been wrapped in a `forwardRef()` call.\n    switch (query.predicate.forwardRef) {\n      case ForwardRefHandling.None:\n      case ForwardRefHandling.Unwrapped:\n        return query.predicate.expression;\n      case ForwardRefHandling.Wrapped:\n        return o.importExpr(R3.resolveForwardRef).callFn([query.predicate.expression]);\n    }\n  }\n}\n\nexport function createQueryCreateCall(\n  query: R3QueryMetadata,\n  constantPool: ConstantPool,\n  queryTypeFns: {signalBased: o.ExternalReference; nonSignal: o.ExternalReference},\n  prependParams?: o.Expression[],\n): o.InvokeFunctionExpr {\n  const parameters: o.Expression[] = [];\n  if (prependParams !== undefined) {\n    parameters.push(...prependParams);\n  }\n  if (query.isSignal) {\n    parameters.push(new o.ReadPropExpr(o.variable(CONTEXT_NAME), query.propertyName));\n  }\n  parameters.push(getQueryPredicate(query, constantPool), o.literal(toQueryFlags(query)));\n  if (query.read) {\n    parameters.push(query.read);\n  }\n\n  const queryCreateFn = query.isSignal ? queryTypeFns.signalBased : queryTypeFns.nonSignal;\n  return o.importExpr(queryCreateFn).callFn(parameters);\n}\n\nconst queryAdvancePlaceholder = Symbol('queryAdvancePlaceholder');\n\n/**\n * Collapses query advance placeholders in a list of statements.\n *\n * This allows for less generated code because multiple sibling query advance\n * statements can be collapsed into a single call with the count as argument.\n *\n * e.g.\n *\n * ```ts\n *   bla();\n *   queryAdvance();\n *   queryAdvance();\n *   bla();\n * ```\n *\n *   --> will turn into\n *\n * ```ts\n *   bla();\n *   queryAdvance(2);\n *   bla();\n * ```\n */\nfunction collapseAdvanceStatements(\n  statements: (o.Statement | typeof queryAdvancePlaceholder)[],\n): o.Statement[] {\n  const result: o.Statement[] = [];\n  let advanceCollapseCount = 0;\n  const flushAdvanceCount = () => {\n    if (advanceCollapseCount > 0) {\n      result.unshift(\n        o\n          .importExpr(R3.queryAdvance)\n          .callFn(advanceCollapseCount === 1 ? [] : [o.literal(advanceCollapseCount)])\n          .toStmt(),\n      );\n      advanceCollapseCount = 0;\n    }\n  };\n\n  // Iterate through statements in reverse and collapse advance placeholders.\n  for (let i = statements.length - 1; i >= 0; i--) {\n    const st = statements[i];\n    if (st === queryAdvancePlaceholder) {\n      advanceCollapseCount++;\n    } else {\n      flushAdvanceCount();\n      result.unshift(st);\n    }\n  }\n  flushAdvanceCount();\n  return result;\n}\n\n// Define and update any view queries\nexport function createViewQueriesFunction(\n  viewQueries: R3QueryMetadata[],\n  constantPool: ConstantPool,\n  name?: string,\n): o.Expression {\n  const createStatements: o.Statement[] = [];\n  const updateStatements: (o.Statement | typeof queryAdvancePlaceholder)[] = [];\n  const tempAllocator = temporaryAllocator((st) => updateStatements.push(st), TEMPORARY_NAME);\n\n  viewQueries.forEach((query: R3QueryMetadata) => {\n    // creation call, e.g. r3.viewQuery(somePredicate, true) or\n    //                r3.viewQuerySignal(ctx.prop, somePredicate, true);\n    const queryDefinitionCall = createQueryCreateCall(query, constantPool, {\n      signalBased: R3.viewQuerySignal,\n      nonSignal: R3.viewQuery,\n    });\n    createStatements.push(queryDefinitionCall.toStmt());\n\n    // Signal queries update lazily and we just advance the index.\n    if (query.isSignal) {\n      updateStatements.push(queryAdvancePlaceholder);\n      return;\n    }\n\n    // update, e.g. (r3.queryRefresh(tmp = r3.loadQuery()) && (ctx.someDir = tmp));\n    const temporary = tempAllocator();\n    const getQueryList = o.importExpr(R3.loadQuery).callFn([]);\n    const refresh = o.importExpr(R3.queryRefresh).callFn([temporary.set(getQueryList)]);\n    const updateDirective = o\n      .variable(CONTEXT_NAME)\n      .prop(query.propertyName)\n      .set(query.first ? temporary.prop('first') : temporary);\n    updateStatements.push(refresh.and(updateDirective).toStmt());\n  });\n\n  const viewQueryFnName = name ? `${name}_Query` : null;\n  return o.fn(\n    [new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE), new o.FnParam(CONTEXT_NAME, null)],\n    [\n      renderFlagCheckIfStmt(core.RenderFlags.Create, createStatements),\n      renderFlagCheckIfStmt(core.RenderFlags.Update, collapseAdvanceStatements(updateStatements)),\n    ],\n    o.INFERRED_TYPE,\n    null,\n    viewQueryFnName,\n  );\n}\n\n// Define and update any content queries\nexport function createContentQueriesFunction(\n  queries: R3QueryMetadata[],\n  constantPool: ConstantPool,\n  name?: string,\n): o.Expression {\n  const createStatements: o.Statement[] = [];\n  const updateStatements: (o.Statement | typeof queryAdvancePlaceholder)[] = [];\n  const tempAllocator = temporaryAllocator((st) => updateStatements.push(st), TEMPORARY_NAME);\n\n  for (const query of queries) {\n    // creation, e.g. r3.contentQuery(dirIndex, somePredicate, true, null) or\n    //                r3.contentQuerySignal(dirIndex, propName, somePredicate, <flags>, <read>).\n    createStatements.push(\n      createQueryCreateCall(\n        query,\n        constantPool,\n        {nonSignal: R3.contentQuery, signalBased: R3.contentQuerySignal},\n        /* prependParams */ [o.variable('dirIndex')],\n      ).toStmt(),\n    );\n\n    // Signal queries update lazily and we just advance the index.\n    if (query.isSignal) {\n      updateStatements.push(queryAdvancePlaceholder);\n      continue;\n    }\n\n    // update, e.g. (r3.queryRefresh(tmp = r3.loadQuery()) && (ctx.someDir = tmp));\n    const temporary = tempAllocator();\n    const getQueryList = o.importExpr(R3.loadQuery).callFn([]);\n    const refresh = o.importExpr(R3.queryRefresh).callFn([temporary.set(getQueryList)]);\n    const updateDirective = o\n      .variable(CONTEXT_NAME)\n      .prop(query.propertyName)\n      .set(query.first ? temporary.prop('first') : temporary);\n    updateStatements.push(refresh.and(updateDirective).toStmt());\n  }\n\n  const contentQueriesFnName = name ? `${name}_ContentQueries` : null;\n  return o.fn(\n    [\n      new o.FnParam(RENDER_FLAGS, o.NUMBER_TYPE),\n      new o.FnParam(CONTEXT_NAME, null),\n      new o.FnParam('dirIndex', null),\n    ],\n    [\n      renderFlagCheckIfStmt(core.RenderFlags.Create, createStatements),\n      renderFlagCheckIfStmt(core.RenderFlags.Update, collapseAdvanceStatements(updateStatements)),\n    ],\n    o.INFERRED_TYPE,\n    null,\n    contentQueriesFnName,\n  );\n}\n"]}