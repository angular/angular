{"version":3,"file":"compiler.js","sourceRoot":"","sources":["compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ConstantPool} from '../../constant_pool';\nimport * as core from '../../core';\nimport * as o from '../../output/output_ast';\nimport {ParseError, ParseSourceSpan} from '../../parse_util';\nimport {CssSelector} from '../../directive_matching';\nimport {ShadowCss} from '../../shadow_css';\nimport {CompilationJobKind, TemplateCompilationMode} from '../../template/pipeline/src/compilation';\nimport {emitHostBindingFunction, emitTemplateFn, transform} from '../../template/pipeline/src/emit';\nimport {ingestComponent, ingestHostBinding} from '../../template/pipeline/src/ingest';\nimport {BindingParser} from '../../template_parser/binding_parser';\nimport {Identifiers as R3} from '../r3_identifiers';\nimport {R3CompiledExpression, typeWithParameters} from '../util';\n\nimport {\n  DeclarationListEmitMode,\n  DeferBlockDepsEmitMode,\n  R3ComponentMetadata,\n  R3DeferResolverFunctionMetadata,\n  R3DirectiveMetadata,\n  R3HostMetadata,\n  R3TemplateDependency,\n} from './api';\nimport {getTemplateSourceLocationsEnabled} from './config';\nimport {createContentQueriesFunction, createViewQueriesFunction} from './query_generation';\nimport {makeBindingParser} from './template';\nimport {asLiteral, conditionallyCreateDirectiveBindingLiteral, DefinitionMap} from './util';\n\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nconst ANIMATE_LEAVE = `animate.leave`;\n\nfunction baseDirectiveFields(\n  meta: R3DirectiveMetadata,\n  constantPool: ConstantPool,\n  bindingParser: BindingParser,\n): DefinitionMap {\n  const definitionMap = new DefinitionMap();\n  const selectors = core.parseSelectorToR3Selector(meta.selector);\n\n  // e.g. `type: MyDirective`\n  definitionMap.set('type', meta.type.value);\n\n  // e.g. `selectors: [['', 'someDir', '']]`\n  if (selectors.length > 0) {\n    definitionMap.set('selectors', asLiteral(selectors));\n  }\n\n  if (meta.queries.length > 0) {\n    // e.g. `contentQueries: (rf, ctx, dirIndex) => { ... }\n    definitionMap.set(\n      'contentQueries',\n      createContentQueriesFunction(meta.queries, constantPool, meta.name),\n    );\n  }\n\n  if (meta.viewQueries.length) {\n    definitionMap.set(\n      'viewQuery',\n      createViewQueriesFunction(meta.viewQueries, constantPool, meta.name),\n    );\n  }\n\n  // e.g. `hostBindings: (rf, ctx) => { ... }\n  definitionMap.set(\n    'hostBindings',\n    createHostBindingsFunction(\n      meta.host,\n      meta.typeSourceSpan,\n      bindingParser,\n      constantPool,\n      meta.selector || '',\n      meta.name,\n      definitionMap,\n    ),\n  );\n\n  // e.g 'inputs: {a: 'a'}`\n  definitionMap.set('inputs', conditionallyCreateDirectiveBindingLiteral(meta.inputs, true));\n\n  // e.g 'outputs: {a: 'a'}`\n  definitionMap.set('outputs', conditionallyCreateDirectiveBindingLiteral(meta.outputs));\n\n  if (meta.exportAs !== null) {\n    definitionMap.set('exportAs', o.literalArr(meta.exportAs.map((e) => o.literal(e))));\n  }\n\n  if (meta.isStandalone === false) {\n    definitionMap.set('standalone', o.literal(false));\n  }\n  if (meta.isSignal) {\n    definitionMap.set('signals', o.literal(true));\n  }\n\n  return definitionMap;\n}\n\nfunction hasAnimationHostBinding(\n  meta: R3DirectiveMetadata | R3ComponentMetadata<R3TemplateDependency>,\n): boolean {\n  return (\n    meta.host.attributes[ANIMATE_LEAVE] !== undefined ||\n    meta.host.properties[ANIMATE_LEAVE] !== undefined ||\n    meta.host.listeners[ANIMATE_LEAVE] !== undefined\n  );\n}\n\n/**\n * Add features to the definition map.\n */\nfunction addFeatures(\n  definitionMap: DefinitionMap,\n  meta: R3DirectiveMetadata | R3ComponentMetadata<R3TemplateDependency>,\n) {\n  // e.g. `features: [NgOnChangesFeature]`\n  const features: o.Expression[] = [];\n\n  const providers = meta.providers;\n  const viewProviders = (meta as R3ComponentMetadata<R3TemplateDependency>).viewProviders;\n\n  if (providers || viewProviders) {\n    const args = [providers || new o.LiteralArrayExpr([])];\n    if (viewProviders) {\n      args.push(viewProviders);\n    }\n    features.push(o.importExpr(R3.ProvidersFeature).callFn(args));\n  }\n  // Note: host directives feature needs to be inserted before the\n  // inheritance feature to ensure the correct execution order.\n  if (meta.hostDirectives?.length) {\n    features.push(\n      o\n        .importExpr(R3.HostDirectivesFeature)\n        .callFn([createHostDirectivesFeatureArg(meta.hostDirectives)]),\n    );\n  }\n  if (meta.usesInheritance) {\n    features.push(o.importExpr(R3.InheritDefinitionFeature));\n  }\n  if (meta.fullInheritance) {\n    features.push(o.importExpr(R3.CopyDefinitionFeature));\n  }\n  if (meta.lifecycle.usesOnChanges) {\n    features.push(o.importExpr(R3.NgOnChangesFeature));\n  }\n  if ('externalStyles' in meta && meta.externalStyles?.length) {\n    const externalStyleNodes = meta.externalStyles.map((externalStyle) => o.literal(externalStyle));\n    features.push(\n      o.importExpr(R3.ExternalStylesFeature).callFn([o.literalArr(externalStyleNodes)]),\n    );\n  }\n\n  if (features.length) {\n    definitionMap.set('features', o.literalArr(features));\n  }\n}\n\n/**\n * Compile a directive for the render3 runtime as defined by the `R3DirectiveMetadata`.\n */\nexport function compileDirectiveFromMetadata(\n  meta: R3DirectiveMetadata,\n  constantPool: ConstantPool,\n  bindingParser: BindingParser,\n): R3CompiledExpression {\n  const definitionMap = baseDirectiveFields(meta, constantPool, bindingParser);\n  addFeatures(definitionMap, meta);\n  const expression = o\n    .importExpr(R3.defineDirective)\n    .callFn([definitionMap.toLiteralMap()], undefined, true);\n  const type = createDirectiveType(meta);\n\n  return {expression, type, statements: []};\n}\n\n/**\n * Compile a component for the render3 runtime as defined by the `R3ComponentMetadata`.\n */\nexport function compileComponentFromMetadata(\n  meta: R3ComponentMetadata<R3TemplateDependency>,\n  constantPool: ConstantPool,\n  bindingParser: BindingParser,\n): R3CompiledExpression {\n  const definitionMap = baseDirectiveFields(meta, constantPool, bindingParser);\n  addFeatures(definitionMap, meta);\n\n  const selector = meta.selector && CssSelector.parse(meta.selector);\n  const firstSelector = selector && selector[0];\n\n  // e.g. `attr: [\"class\", \".my.app\"]`\n  // This is optional an only included if the first selector of a component specifies attributes.\n  if (firstSelector) {\n    const selectorAttributes = firstSelector.getAttrs();\n    if (selectorAttributes.length) {\n      definitionMap.set(\n        'attrs',\n        constantPool.getConstLiteral(\n          o.literalArr(\n            selectorAttributes.map((value) =>\n              value != null ? o.literal(value) : o.literal(undefined),\n            ),\n          ),\n          /* forceShared */ true,\n        ),\n      );\n    }\n  }\n\n  // e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`\n  const templateTypeName = meta.name;\n\n  let allDeferrableDepsFn: o.ReadVarExpr | null = null;\n  if (\n    meta.defer.mode === DeferBlockDepsEmitMode.PerComponent &&\n    meta.defer.dependenciesFn !== null\n  ) {\n    const fnName = `${templateTypeName}_DeferFn`;\n    constantPool.statements.push(\n      new o.DeclareVarStmt(fnName, meta.defer.dependenciesFn, undefined, o.StmtModifier.Final),\n    );\n    allDeferrableDepsFn = o.variable(fnName);\n  }\n\n  const compilationMode =\n    meta.isStandalone && !meta.hasDirectiveDependencies\n      ? TemplateCompilationMode.DomOnly\n      : TemplateCompilationMode.Full;\n\n  // First the template is ingested into IR:\n  const tpl = ingestComponent(\n    meta.name,\n    meta.template.nodes,\n    constantPool,\n    compilationMode,\n    meta.relativeContextFilePath,\n    meta.i18nUseExternalIds,\n    meta.defer,\n    allDeferrableDepsFn,\n    meta.relativeTemplatePath,\n    getTemplateSourceLocationsEnabled(),\n  );\n\n  // Then the IR is transformed to prepare it for cod egeneration.\n  transform(tpl, CompilationJobKind.Tmpl);\n\n  // Finally we emit the template function:\n  const templateFn = emitTemplateFn(tpl, constantPool);\n\n  if (tpl.contentSelectors !== null) {\n    definitionMap.set('ngContentSelectors', tpl.contentSelectors);\n  }\n\n  definitionMap.set('decls', o.literal(tpl.root.decls as number));\n  definitionMap.set('vars', o.literal(tpl.root.vars as number));\n  if (tpl.consts.length > 0) {\n    if (tpl.constsInitializers.length > 0) {\n      definitionMap.set(\n        'consts',\n        o.arrowFn([], [...tpl.constsInitializers, new o.ReturnStatement(o.literalArr(tpl.consts))]),\n      );\n    } else {\n      definitionMap.set('consts', o.literalArr(tpl.consts));\n    }\n  }\n  definitionMap.set('template', templateFn);\n\n  if (\n    meta.declarationListEmitMode !== DeclarationListEmitMode.RuntimeResolved &&\n    meta.declarations.length > 0\n  ) {\n    definitionMap.set(\n      'dependencies',\n      compileDeclarationList(\n        o.literalArr(meta.declarations.map((decl) => decl.type)),\n        meta.declarationListEmitMode,\n      ),\n    );\n  } else if (meta.declarationListEmitMode === DeclarationListEmitMode.RuntimeResolved) {\n    const args = [meta.type.value];\n    if (meta.rawImports) {\n      args.push(meta.rawImports);\n    }\n    definitionMap.set('dependencies', o.importExpr(R3.getComponentDepsFactory).callFn(args));\n  }\n\n  if (meta.encapsulation === null) {\n    meta.encapsulation = core.ViewEncapsulation.Emulated;\n  }\n\n  let hasStyles = !!meta.externalStyles?.length;\n  // e.g. `styles: [str1, str2]`\n  if (meta.styles && meta.styles.length) {\n    const styleValues =\n      meta.encapsulation == core.ViewEncapsulation.Emulated\n        ? compileStyles(meta.styles, CONTENT_ATTR, HOST_ATTR)\n        : meta.styles;\n    const styleNodes = styleValues.reduce((result, style) => {\n      if (style.trim().length > 0) {\n        result.push(constantPool.getConstLiteral(o.literal(style)));\n      }\n      return result;\n    }, [] as o.Expression[]);\n\n    if (styleNodes.length > 0) {\n      hasStyles = true;\n      definitionMap.set('styles', o.literalArr(styleNodes));\n    }\n  }\n\n  if (!hasStyles && meta.encapsulation === core.ViewEncapsulation.Emulated) {\n    // If there is no style, don't generate css selectors on elements\n    meta.encapsulation = core.ViewEncapsulation.None;\n  }\n\n  // Only set view encapsulation if it's not the default value\n  if (meta.encapsulation !== core.ViewEncapsulation.Emulated) {\n    definitionMap.set('encapsulation', o.literal(meta.encapsulation));\n  }\n\n  // e.g. `animation: [trigger('123', [])]`\n  if (meta.animations !== null) {\n    definitionMap.set(\n      'data',\n      o.literalMap([{key: 'animation', value: meta.animations, quoted: false}]),\n    );\n  }\n\n  // Setting change detection flag\n  if (meta.changeDetection !== null) {\n    if (\n      typeof meta.changeDetection === 'number' &&\n      meta.changeDetection !== core.ChangeDetectionStrategy.Default\n    ) {\n      // changeDetection is resolved during analysis. Only set it if not the default.\n      definitionMap.set('changeDetection', o.literal(meta.changeDetection));\n    } else if (typeof meta.changeDetection === 'object') {\n      // changeDetection is not resolved during analysis (e.g., we are in local compilation mode).\n      // So place it as is.\n      definitionMap.set('changeDetection', meta.changeDetection);\n    }\n  }\n\n  const expression = o\n    .importExpr(R3.defineComponent)\n    .callFn([definitionMap.toLiteralMap()], undefined, true);\n  const type = createComponentType(meta);\n\n  return {expression, type, statements: []};\n}\n\n/**\n * Creates the type specification from the component meta. This type is inserted into .d.ts files\n * to be consumed by upstream compilations.\n */\nexport function createComponentType(meta: R3ComponentMetadata<R3TemplateDependency>): o.Type {\n  const typeParams = createBaseDirectiveTypeParams(meta);\n  typeParams.push(stringArrayAsType(meta.template.ngContentSelectors));\n  typeParams.push(o.expressionType(o.literal(meta.isStandalone)));\n  typeParams.push(createHostDirectivesType(meta));\n  // TODO(signals): Always include this metadata starting with v17. Right\n  // now Angular v16.0.x does not support this field and library distributions\n  // would then be incompatible with v16.0.x framework users.\n  if (meta.isSignal) {\n    typeParams.push(o.expressionType(o.literal(meta.isSignal)));\n  }\n  return o.expressionType(o.importExpr(R3.ComponentDeclaration, typeParams));\n}\n\n/**\n * Compiles the array literal of declarations into an expression according to the provided emit\n * mode.\n */\nfunction compileDeclarationList(\n  list: o.LiteralArrayExpr,\n  mode: DeclarationListEmitMode,\n): o.Expression {\n  switch (mode) {\n    case DeclarationListEmitMode.Direct:\n      // directives: [MyDir],\n      return list;\n    case DeclarationListEmitMode.Closure:\n      // directives: function () { return [MyDir]; }\n      return o.arrowFn([], list);\n    case DeclarationListEmitMode.ClosureResolved:\n      // directives: function () { return [MyDir].map(ng.resolveForwardRef); }\n      const resolvedList = list.prop('map').callFn([o.importExpr(R3.resolveForwardRef)]);\n      return o.arrowFn([], resolvedList);\n    case DeclarationListEmitMode.RuntimeResolved:\n      throw new Error(`Unsupported with an array of pre-resolved dependencies`);\n  }\n}\n\nfunction stringAsType(str: string): o.Type {\n  return o.expressionType(o.literal(str));\n}\n\nfunction stringMapAsLiteralExpression(map: {[key: string]: string | string[]}): o.LiteralMapExpr {\n  const mapValues = Object.keys(map).map((key) => {\n    const value = Array.isArray(map[key]) ? map[key][0] : map[key];\n    return {\n      key,\n      value: o.literal(value),\n      quoted: true,\n    };\n  });\n\n  return o.literalMap(mapValues);\n}\n\nfunction stringArrayAsType(arr: ReadonlyArray<string | null>): o.Type {\n  return arr.length > 0\n    ? o.expressionType(o.literalArr(arr.map((value) => o.literal(value))))\n    : o.NONE_TYPE;\n}\n\nfunction createBaseDirectiveTypeParams(meta: R3DirectiveMetadata): o.Type[] {\n  // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n  // string literal, which must be on one line.\n  const selectorForType = meta.selector !== null ? meta.selector.replace(/\\n/g, '') : null;\n\n  return [\n    typeWithParameters(meta.type.type, meta.typeArgumentCount),\n    selectorForType !== null ? stringAsType(selectorForType) : o.NONE_TYPE,\n    meta.exportAs !== null ? stringArrayAsType(meta.exportAs) : o.NONE_TYPE,\n    o.expressionType(getInputsTypeExpression(meta)),\n    o.expressionType(stringMapAsLiteralExpression(meta.outputs)),\n    stringArrayAsType(meta.queries.map((q) => q.propertyName)),\n  ];\n}\n\nfunction getInputsTypeExpression(meta: R3DirectiveMetadata): o.Expression {\n  return o.literalMap(\n    Object.keys(meta.inputs).map((key) => {\n      const value = meta.inputs[key];\n      const values = [\n        {key: 'alias', value: o.literal(value.bindingPropertyName), quoted: true},\n        {key: 'required', value: o.literal(value.required), quoted: true},\n      ];\n\n      // TODO(legacy-partial-output-inputs): Consider always emitting this information,\n      // or leaving it as is.\n      if (value.isSignal) {\n        values.push({key: 'isSignal', value: o.literal(value.isSignal), quoted: true});\n      }\n\n      return {key, value: o.literalMap(values), quoted: true};\n    }),\n  );\n}\n\n/**\n * Creates the type specification from the directive meta. This type is inserted into .d.ts files\n * to be consumed by upstream compilations.\n */\nexport function createDirectiveType(meta: R3DirectiveMetadata): o.Type {\n  const typeParams = createBaseDirectiveTypeParams(meta);\n  // Directives have no NgContentSelectors slot, but instead express a `never` type\n  // so that future fields align.\n  typeParams.push(o.NONE_TYPE);\n  typeParams.push(o.expressionType(o.literal(meta.isStandalone)));\n  typeParams.push(createHostDirectivesType(meta));\n  // TODO(signals): Always include this metadata starting with v17. Right\n  // now Angular v16.0.x does not support this field and library distributions\n  // would then be incompatible with v16.0.x framework users.\n  if (meta.isSignal) {\n    typeParams.push(o.expressionType(o.literal(meta.isSignal)));\n  }\n  return o.expressionType(o.importExpr(R3.DirectiveDeclaration, typeParams));\n}\n\n// Return a host binding function or null if one is not necessary.\nfunction createHostBindingsFunction(\n  hostBindingsMetadata: R3HostMetadata,\n  typeSourceSpan: ParseSourceSpan,\n  bindingParser: BindingParser,\n  constantPool: ConstantPool,\n  selector: string,\n  name: string,\n  definitionMap: DefinitionMap,\n): o.Expression | null {\n  const bindings = bindingParser.createBoundHostProperties(\n    hostBindingsMetadata.properties,\n    typeSourceSpan,\n  );\n\n  // Calculate host event bindings\n  const eventBindings = bindingParser.createDirectiveHostEventAsts(\n    hostBindingsMetadata.listeners,\n    typeSourceSpan,\n  );\n\n  // The parser for host bindings treats class and style attributes specially -- they are\n  // extracted into these separate fields. This is not the case for templates, so the compiler can\n  // actually already handle these special attributes internally. Therefore, we just drop them\n  // into the attributes map.\n  if (hostBindingsMetadata.specialAttributes.styleAttr) {\n    hostBindingsMetadata.attributes['style'] = o.literal(\n      hostBindingsMetadata.specialAttributes.styleAttr,\n    );\n  }\n  if (hostBindingsMetadata.specialAttributes.classAttr) {\n    hostBindingsMetadata.attributes['class'] = o.literal(\n      hostBindingsMetadata.specialAttributes.classAttr,\n    );\n  }\n\n  const hostJob = ingestHostBinding(\n    {\n      componentName: name,\n      componentSelector: selector,\n      properties: bindings,\n      events: eventBindings,\n      attributes: hostBindingsMetadata.attributes,\n    },\n    bindingParser,\n    constantPool,\n  );\n  transform(hostJob, CompilationJobKind.Host);\n\n  definitionMap.set('hostAttrs', hostJob.root.attributes);\n\n  const varCount = hostJob.root.vars;\n  if (varCount !== null && varCount > 0) {\n    definitionMap.set('hostVars', o.literal(varCount));\n  }\n\n  return emitHostBindingFunction(hostJob);\n}\n\nconst HOST_REG_EXP = /^(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\))$/;\n// Represents the groups in the above regex.\nconst enum HostBindingGroup {\n  // group 1: \"prop\" from \"[prop]\", or \"attr.role\" from \"[attr.role]\", or @anim from [@anim]\n  Binding = 1,\n\n  // group 2: \"event\" from \"(event)\"\n  Event = 2,\n}\n\n// Defines Host Bindings structure that contains attributes, listeners, and properties,\n// parsed from the `host` object defined for a Type.\nexport interface ParsedHostBindings {\n  attributes: {[key: string]: o.Expression};\n  listeners: {[key: string]: string};\n  properties: {[key: string]: string};\n  specialAttributes: {styleAttr?: string; classAttr?: string};\n}\n\nexport function parseHostBindings(host: {\n  [key: string]: string | o.Expression;\n}): ParsedHostBindings {\n  const attributes: {[key: string]: o.Expression} = {};\n  const listeners: {[key: string]: string} = {};\n  const properties: {[key: string]: string} = {};\n  const specialAttributes: {styleAttr?: string; classAttr?: string} = {};\n\n  for (const key of Object.keys(host)) {\n    const value = host[key];\n    const matches = key.match(HOST_REG_EXP);\n\n    if (matches === null) {\n      switch (key) {\n        case 'class':\n          if (typeof value !== 'string') {\n            // TODO(alxhub): make this a diagnostic.\n            throw new Error(`Class binding must be string`);\n          }\n          specialAttributes.classAttr = value;\n          break;\n        case 'style':\n          if (typeof value !== 'string') {\n            // TODO(alxhub): make this a diagnostic.\n            throw new Error(`Style binding must be string`);\n          }\n          specialAttributes.styleAttr = value;\n          break;\n        default:\n          if (typeof value === 'string') {\n            attributes[key] = o.literal(value);\n          } else {\n            attributes[key] = value;\n          }\n      }\n    } else if (matches[HostBindingGroup.Binding] != null) {\n      if (typeof value !== 'string') {\n        // TODO(alxhub): make this a diagnostic.\n        throw new Error(`Property binding must be string`);\n      }\n      // synthetic properties (the ones that have a `@` as a prefix)\n      // are still treated the same as regular properties. Therefore\n      // there is no point in storing them in a separate map.\n      properties[matches[HostBindingGroup.Binding]] = value;\n    } else if (matches[HostBindingGroup.Event] != null) {\n      if (typeof value !== 'string') {\n        // TODO(alxhub): make this a diagnostic.\n        throw new Error(`Event binding must be string`);\n      }\n      listeners[matches[HostBindingGroup.Event]] = value;\n    }\n  }\n\n  return {attributes, listeners, properties, specialAttributes};\n}\n\n/**\n * Verifies host bindings and returns the list of errors (if any). Empty array indicates that a\n * given set of host bindings has no errors.\n *\n * @param bindings set of host bindings to verify.\n * @param sourceSpan source span where host bindings were defined.\n * @returns array of errors associated with a given set of host bindings.\n */\nexport function verifyHostBindings(\n  bindings: ParsedHostBindings,\n  sourceSpan: ParseSourceSpan,\n): ParseError[] {\n  // TODO: abstract out host bindings verification logic and use it instead of\n  // creating events and properties ASTs to detect errors (FW-996)\n  const bindingParser = makeBindingParser();\n  bindingParser.createDirectiveHostEventAsts(bindings.listeners, sourceSpan);\n  bindingParser.createBoundHostProperties(bindings.properties, sourceSpan);\n  return bindingParser.errors;\n}\n\nfunction compileStyles(styles: string[], selector: string, hostSelector: string): string[] {\n  const shadowCss = new ShadowCss();\n  return styles.map((style) => {\n    return shadowCss!.shimCssText(style, selector, hostSelector);\n  });\n}\n\n/**\n * Encapsulates a CSS stylesheet with emulated view encapsulation.\n * This allows a stylesheet to be used with an Angular component that\n * is using the `ViewEncapsulation.Emulated` mode.\n *\n * @param style The content of a CSS stylesheet.\n * @param componentIdentifier The identifier to use within the CSS rules.\n * @returns The encapsulated content for the style.\n */\nexport function encapsulateStyle(style: string, componentIdentifier?: string): string {\n  const shadowCss = new ShadowCss();\n  const selector = componentIdentifier\n    ? CONTENT_ATTR.replace(COMPONENT_VARIABLE, componentIdentifier)\n    : CONTENT_ATTR;\n  const hostSelector = componentIdentifier\n    ? HOST_ATTR.replace(COMPONENT_VARIABLE, componentIdentifier)\n    : HOST_ATTR;\n  return shadowCss.shimCssText(style, selector, hostSelector);\n}\n\nfunction createHostDirectivesType(meta: R3DirectiveMetadata): o.Type {\n  if (!meta.hostDirectives?.length) {\n    return o.NONE_TYPE;\n  }\n\n  return o.expressionType(\n    o.literalArr(\n      meta.hostDirectives.map((hostMeta) =>\n        o.literalMap([\n          {key: 'directive', value: o.typeofExpr(hostMeta.directive.type), quoted: false},\n          {\n            key: 'inputs',\n            value: stringMapAsLiteralExpression(hostMeta.inputs || {}),\n            quoted: false,\n          },\n          {\n            key: 'outputs',\n            value: stringMapAsLiteralExpression(hostMeta.outputs || {}),\n            quoted: false,\n          },\n        ]),\n      ),\n    ),\n  );\n}\n\nfunction createHostDirectivesFeatureArg(\n  hostDirectives: NonNullable<R3DirectiveMetadata['hostDirectives']>,\n): o.Expression {\n  const expressions: o.Expression[] = [];\n  let hasForwardRef = false;\n\n  for (const current of hostDirectives) {\n    // Use a shorthand if there are no inputs or outputs.\n    if (!current.inputs && !current.outputs) {\n      expressions.push(current.directive.type);\n    } else {\n      const keys = [{key: 'directive', value: current.directive.type, quoted: false}];\n\n      if (current.inputs) {\n        const inputsLiteral = createHostDirectivesMappingArray(current.inputs);\n        if (inputsLiteral) {\n          keys.push({key: 'inputs', value: inputsLiteral, quoted: false});\n        }\n      }\n\n      if (current.outputs) {\n        const outputsLiteral = createHostDirectivesMappingArray(current.outputs);\n        if (outputsLiteral) {\n          keys.push({key: 'outputs', value: outputsLiteral, quoted: false});\n        }\n      }\n\n      expressions.push(o.literalMap(keys));\n    }\n\n    if (current.isForwardReference) {\n      hasForwardRef = true;\n    }\n  }\n\n  // If there's a forward reference, we generate a `function() { return [HostDir] }`,\n  // otherwise we can save some bytes by using a plain array, e.g. `[HostDir]`.\n  return hasForwardRef\n    ? new o.FunctionExpr([], [new o.ReturnStatement(o.literalArr(expressions))])\n    : o.literalArr(expressions);\n}\n\n/**\n * Converts an input/output mapping object literal into an array where the even keys are the\n * public name of the binding and the odd ones are the name it was aliased to. E.g.\n * `{inputOne: 'aliasOne', inputTwo: 'aliasTwo'}` will become\n * `['inputOne', 'aliasOne', 'inputTwo', 'aliasTwo']`.\n *\n * This conversion is necessary, because hosts bind to the public name of the host directive and\n * keeping the mapping in an object literal will break for apps using property renaming.\n */\nexport function createHostDirectivesMappingArray(\n  mapping: Record<string, string>,\n): o.LiteralArrayExpr | null {\n  const elements: o.LiteralExpr[] = [];\n\n  for (const publicName in mapping) {\n    if (mapping.hasOwnProperty(publicName)) {\n      elements.push(o.literal(publicName), o.literal(mapping[publicName]));\n    }\n  }\n\n  return elements.length > 0 ? o.literalArr(elements) : null;\n}\n\n/**\n * Compiles the dependency resolver function for a defer block.\n */\nexport function compileDeferResolverFunction(\n  meta: R3DeferResolverFunctionMetadata,\n): o.ArrowFunctionExpr {\n  const depExpressions: o.Expression[] = [];\n\n  if (meta.mode === DeferBlockDepsEmitMode.PerBlock) {\n    for (const dep of meta.dependencies) {\n      if (dep.isDeferrable) {\n        // Callback function, e.g. `m () => m.MyCmp;`.\n        const innerFn = o.arrowFn(\n          // Default imports are always accessed through the `default` property.\n          [new o.FnParam('m', o.DYNAMIC_TYPE)],\n          o.variable('m').prop(dep.isDefaultImport ? 'default' : dep.symbolName),\n        );\n\n        // Dynamic import, e.g. `import('./a').then(...)`.\n        const importExpr = new o.DynamicImportExpr(dep.importPath!).prop('then').callFn([innerFn]);\n        depExpressions.push(importExpr);\n      } else {\n        // Non-deferrable symbol, just use a reference to the type. Note that it's important to\n        // go through `typeReference`, rather than `symbolName` in order to preserve the\n        // original reference within the source file.\n        depExpressions.push(dep.typeReference);\n      }\n    }\n  } else {\n    for (const {symbolName, importPath, isDefaultImport} of meta.dependencies) {\n      // Callback function, e.g. `m () => m.MyCmp;`.\n      const innerFn = o.arrowFn(\n        [new o.FnParam('m', o.DYNAMIC_TYPE)],\n        o.variable('m').prop(isDefaultImport ? 'default' : symbolName),\n      );\n\n      // Dynamic import, e.g. `import('./a').then(...)`.\n      const importExpr = new o.DynamicImportExpr(importPath).prop('then').callFn([innerFn]);\n      depExpressions.push(importExpr);\n    }\n  }\n\n  return o.arrowFn([], o.literalArr(depExpressions));\n}\n"]}