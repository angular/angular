{"version":3,"file":"r3_ast.js","sourceRoot":"","sources":["r3_ast.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {SecurityContext} from '../core';\nimport {\n  AST,\n  ASTWithSource,\n  BindingType,\n  BoundElementProperty,\n  ParsedEvent,\n  ParsedEventType,\n} from '../expression_parser/ast';\nimport {I18nMeta} from '../i18n/i18n_ast';\nimport {ParseSourceSpan} from '../parse_util';\n\nexport interface Node {\n  sourceSpan: ParseSourceSpan;\n  visit<Result>(visitor: Visitor<Result>): Result;\n}\n\n/**\n * This is an R3 `Node`-like wrapper for a raw `html.Comment` node. We do not currently\n * require the implementation of a visitor for Comments as they are only collected at\n * the top-level of the R3 AST, and only if `Render3ParseOptions['collectCommentNodes']`\n * is true.\n */\nexport class Comment implements Node {\n  constructor(\n    public value: string,\n    public sourceSpan: ParseSourceSpan,\n  ) {}\n  visit<Result>(_visitor: Visitor<Result>): Result {\n    throw new Error('visit() not implemented for Comment');\n  }\n}\n\nexport class Text implements Node {\n  constructor(\n    public value: string,\n    public sourceSpan: ParseSourceSpan,\n  ) {}\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitText(this);\n  }\n}\n\nexport class BoundText implements Node {\n  constructor(\n    public value: AST,\n    public sourceSpan: ParseSourceSpan,\n    public i18n?: I18nMeta,\n  ) {}\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitBoundText(this);\n  }\n}\n\n/**\n * Represents a text attribute in the template.\n *\n * `valueSpan` may not be present in cases where there is no value `<div a></div>`.\n * `keySpan` may also not be present for synthetic attributes from ICU expansions.\n */\nexport class TextAttribute implements Node {\n  constructor(\n    public name: string,\n    public value: string,\n    public sourceSpan: ParseSourceSpan,\n    readonly keySpan: ParseSourceSpan | undefined,\n    public valueSpan?: ParseSourceSpan,\n    public i18n?: I18nMeta,\n  ) {}\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitTextAttribute(this);\n  }\n}\n\nexport class BoundAttribute implements Node {\n  constructor(\n    public name: string,\n    public type: BindingType,\n    public securityContext: SecurityContext,\n    public value: AST,\n    public unit: string | null,\n    public sourceSpan: ParseSourceSpan,\n    readonly keySpan: ParseSourceSpan,\n    public valueSpan: ParseSourceSpan | undefined,\n    public i18n: I18nMeta | undefined,\n  ) {}\n\n  static fromBoundElementProperty(prop: BoundElementProperty, i18n?: I18nMeta): BoundAttribute {\n    if (prop.keySpan === undefined) {\n      throw new Error(\n        `Unexpected state: keySpan must be defined for bound attributes but was not for ${prop.name}: ${prop.sourceSpan}`,\n      );\n    }\n    return new BoundAttribute(\n      prop.name,\n      prop.type,\n      prop.securityContext,\n      prop.value,\n      prop.unit,\n      prop.sourceSpan,\n      prop.keySpan,\n      prop.valueSpan,\n      i18n,\n    );\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitBoundAttribute(this);\n  }\n}\n\nexport class BoundEvent implements Node {\n  constructor(\n    public name: string,\n    public type: ParsedEventType,\n    public handler: AST,\n    public target: string | null,\n    public phase: string | null,\n    public sourceSpan: ParseSourceSpan,\n    public handlerSpan: ParseSourceSpan,\n    readonly keySpan: ParseSourceSpan,\n  ) {}\n\n  static fromParsedEvent(event: ParsedEvent) {\n    const target: string | null =\n      event.type === ParsedEventType.Regular ? event.targetOrPhase : null;\n    const phase: string | null =\n      event.type === ParsedEventType.LegacyAnimation ? event.targetOrPhase : null;\n    if (event.keySpan === undefined) {\n      throw new Error(\n        `Unexpected state: keySpan must be defined for bound event but was not for ${event.name}: ${event.sourceSpan}`,\n      );\n    }\n    return new BoundEvent(\n      event.name,\n      event.type,\n      event.handler,\n      target,\n      phase,\n      event.sourceSpan,\n      event.handlerSpan,\n      event.keySpan,\n    );\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitBoundEvent(this);\n  }\n}\n\nexport class Element implements Node {\n  constructor(\n    public name: string,\n    public attributes: TextAttribute[],\n    public inputs: BoundAttribute[],\n    public outputs: BoundEvent[],\n    public directives: Directive[],\n    public children: Node[],\n    public references: Reference[],\n    public isSelfClosing: boolean,\n    public sourceSpan: ParseSourceSpan,\n    public startSourceSpan: ParseSourceSpan,\n    public endSourceSpan: ParseSourceSpan | null,\n    readonly isVoid: boolean,\n    public i18n?: I18nMeta,\n  ) {}\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitElement(this);\n  }\n}\n\nexport abstract class DeferredTrigger implements Node {\n  constructor(\n    public nameSpan: ParseSourceSpan | null,\n    public sourceSpan: ParseSourceSpan,\n    public prefetchSpan: ParseSourceSpan | null,\n    public whenOrOnSourceSpan: ParseSourceSpan | null,\n    public hydrateSpan: ParseSourceSpan | null,\n  ) {}\n\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitDeferredTrigger(this);\n  }\n}\n\nexport class BoundDeferredTrigger extends DeferredTrigger {\n  constructor(\n    public value: AST,\n    sourceSpan: ParseSourceSpan,\n    prefetchSpan: ParseSourceSpan | null,\n    whenSourceSpan: ParseSourceSpan,\n    hydrateSpan: ParseSourceSpan | null,\n  ) {\n    // BoundDeferredTrigger is for 'when' triggers. These aren't really \"triggers\" and don't have a\n    // nameSpan. Trigger names are the built in event triggers like hover, interaction, etc.\n    super(/** nameSpan */ null, sourceSpan, prefetchSpan, whenSourceSpan, hydrateSpan);\n  }\n}\n\nexport class NeverDeferredTrigger extends DeferredTrigger {}\n\nexport class IdleDeferredTrigger extends DeferredTrigger {}\n\nexport class ImmediateDeferredTrigger extends DeferredTrigger {}\n\nexport class HoverDeferredTrigger extends DeferredTrigger {\n  constructor(\n    public reference: string | null,\n    nameSpan: ParseSourceSpan,\n    sourceSpan: ParseSourceSpan,\n    prefetchSpan: ParseSourceSpan | null,\n    onSourceSpan: ParseSourceSpan | null,\n    hydrateSpan: ParseSourceSpan | null,\n  ) {\n    super(nameSpan, sourceSpan, prefetchSpan, onSourceSpan, hydrateSpan);\n  }\n}\n\nexport class TimerDeferredTrigger extends DeferredTrigger {\n  constructor(\n    public delay: number,\n    nameSpan: ParseSourceSpan,\n    sourceSpan: ParseSourceSpan,\n    prefetchSpan: ParseSourceSpan | null,\n    onSourceSpan: ParseSourceSpan | null,\n    hydrateSpan: ParseSourceSpan | null,\n  ) {\n    super(nameSpan, sourceSpan, prefetchSpan, onSourceSpan, hydrateSpan);\n  }\n}\n\nexport class InteractionDeferredTrigger extends DeferredTrigger {\n  constructor(\n    public reference: string | null,\n    nameSpan: ParseSourceSpan,\n    sourceSpan: ParseSourceSpan,\n    prefetchSpan: ParseSourceSpan | null,\n    onSourceSpan: ParseSourceSpan | null,\n    hydrateSpan: ParseSourceSpan | null,\n  ) {\n    super(nameSpan, sourceSpan, prefetchSpan, onSourceSpan, hydrateSpan);\n  }\n}\n\nexport class ViewportDeferredTrigger extends DeferredTrigger {\n  constructor(\n    public reference: string | null,\n    nameSpan: ParseSourceSpan,\n    sourceSpan: ParseSourceSpan,\n    prefetchSpan: ParseSourceSpan | null,\n    onSourceSpan: ParseSourceSpan | null,\n    hydrateSpan: ParseSourceSpan | null,\n  ) {\n    super(nameSpan, sourceSpan, prefetchSpan, onSourceSpan, hydrateSpan);\n  }\n}\n\nexport class BlockNode {\n  constructor(\n    public nameSpan: ParseSourceSpan,\n    public sourceSpan: ParseSourceSpan,\n    public startSourceSpan: ParseSourceSpan,\n    public endSourceSpan: ParseSourceSpan | null,\n  ) {}\n}\n\nexport class DeferredBlockPlaceholder extends BlockNode implements Node {\n  constructor(\n    public children: Node[],\n    public minimumTime: number | null,\n    nameSpan: ParseSourceSpan,\n    sourceSpan: ParseSourceSpan,\n    startSourceSpan: ParseSourceSpan,\n    endSourceSpan: ParseSourceSpan | null,\n    public i18n?: I18nMeta,\n  ) {\n    super(nameSpan, sourceSpan, startSourceSpan, endSourceSpan);\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitDeferredBlockPlaceholder(this);\n  }\n}\n\nexport class DeferredBlockLoading extends BlockNode implements Node {\n  constructor(\n    public children: Node[],\n    public afterTime: number | null,\n    public minimumTime: number | null,\n    nameSpan: ParseSourceSpan,\n    sourceSpan: ParseSourceSpan,\n    startSourceSpan: ParseSourceSpan,\n    endSourceSpan: ParseSourceSpan | null,\n    public i18n?: I18nMeta,\n  ) {\n    super(nameSpan, sourceSpan, startSourceSpan, endSourceSpan);\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitDeferredBlockLoading(this);\n  }\n}\n\nexport class DeferredBlockError extends BlockNode implements Node {\n  constructor(\n    public children: Node[],\n    nameSpan: ParseSourceSpan,\n    sourceSpan: ParseSourceSpan,\n    startSourceSpan: ParseSourceSpan,\n    endSourceSpan: ParseSourceSpan | null,\n    public i18n?: I18nMeta,\n  ) {\n    super(nameSpan, sourceSpan, startSourceSpan, endSourceSpan);\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitDeferredBlockError(this);\n  }\n}\n\nexport interface DeferredBlockTriggers {\n  when?: BoundDeferredTrigger;\n  idle?: IdleDeferredTrigger;\n  immediate?: ImmediateDeferredTrigger;\n  hover?: HoverDeferredTrigger;\n  timer?: TimerDeferredTrigger;\n  interaction?: InteractionDeferredTrigger;\n  viewport?: ViewportDeferredTrigger;\n  never?: NeverDeferredTrigger;\n}\n\nexport class DeferredBlock extends BlockNode implements Node {\n  readonly triggers: Readonly<DeferredBlockTriggers>;\n  readonly prefetchTriggers: Readonly<DeferredBlockTriggers>;\n  readonly hydrateTriggers: Readonly<DeferredBlockTriggers>;\n  private readonly definedTriggers: (keyof DeferredBlockTriggers)[];\n  private readonly definedPrefetchTriggers: (keyof DeferredBlockTriggers)[];\n  private readonly definedHydrateTriggers: (keyof DeferredBlockTriggers)[];\n\n  constructor(\n    public children: Node[],\n    triggers: DeferredBlockTriggers,\n    prefetchTriggers: DeferredBlockTriggers,\n    hydrateTriggers: DeferredBlockTriggers,\n    public placeholder: DeferredBlockPlaceholder | null,\n    public loading: DeferredBlockLoading | null,\n    public error: DeferredBlockError | null,\n    nameSpan: ParseSourceSpan,\n    sourceSpan: ParseSourceSpan,\n    public mainBlockSpan: ParseSourceSpan,\n    startSourceSpan: ParseSourceSpan,\n    endSourceSpan: ParseSourceSpan | null,\n    public i18n?: I18nMeta,\n  ) {\n    super(nameSpan, sourceSpan, startSourceSpan, endSourceSpan);\n    this.triggers = triggers;\n    this.prefetchTriggers = prefetchTriggers;\n    this.hydrateTriggers = hydrateTriggers;\n    // We cache the keys since we know that they won't change and we\n    // don't want to enumarate them every time we're traversing the AST.\n    this.definedTriggers = Object.keys(triggers) as (keyof DeferredBlockTriggers)[];\n    this.definedPrefetchTriggers = Object.keys(prefetchTriggers) as (keyof DeferredBlockTriggers)[];\n    this.definedHydrateTriggers = Object.keys(hydrateTriggers) as (keyof DeferredBlockTriggers)[];\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitDeferredBlock(this);\n  }\n\n  visitAll(visitor: Visitor<unknown>): void {\n    // Visit the hydrate triggers first to match their insertion order.\n    this.visitTriggers(this.definedHydrateTriggers, this.hydrateTriggers, visitor);\n    this.visitTriggers(this.definedTriggers, this.triggers, visitor);\n    this.visitTriggers(this.definedPrefetchTriggers, this.prefetchTriggers, visitor);\n    visitAll(visitor, this.children);\n    const remainingBlocks = [this.placeholder, this.loading, this.error].filter(\n      (x) => x !== null,\n    ) as Array<Node>;\n    visitAll(visitor, remainingBlocks);\n  }\n\n  private visitTriggers(\n    keys: (keyof DeferredBlockTriggers)[],\n    triggers: DeferredBlockTriggers,\n    visitor: Visitor,\n  ) {\n    visitAll(\n      visitor,\n      keys.map((k) => triggers[k]!),\n    );\n  }\n}\n\nexport class SwitchBlock extends BlockNode implements Node {\n  constructor(\n    public expression: AST,\n    public cases: SwitchBlockCase[],\n    /**\n     * These blocks are only captured to allow for autocompletion in the language service. They\n     * aren't meant to be processed in any other way.\n     */\n    public unknownBlocks: UnknownBlock[],\n    sourceSpan: ParseSourceSpan,\n    startSourceSpan: ParseSourceSpan,\n    endSourceSpan: ParseSourceSpan | null,\n    nameSpan: ParseSourceSpan,\n  ) {\n    super(nameSpan, sourceSpan, startSourceSpan, endSourceSpan);\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitSwitchBlock(this);\n  }\n}\n\nexport class SwitchBlockCase extends BlockNode implements Node {\n  constructor(\n    public expression: AST | null,\n    public children: Node[],\n    sourceSpan: ParseSourceSpan,\n    startSourceSpan: ParseSourceSpan,\n    endSourceSpan: ParseSourceSpan | null,\n    nameSpan: ParseSourceSpan,\n    public i18n?: I18nMeta,\n  ) {\n    super(nameSpan, sourceSpan, startSourceSpan, endSourceSpan);\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitSwitchBlockCase(this);\n  }\n}\n\nexport class ForLoopBlock extends BlockNode implements Node {\n  constructor(\n    public item: Variable,\n    public expression: ASTWithSource,\n    public trackBy: ASTWithSource,\n    public trackKeywordSpan: ParseSourceSpan,\n    public contextVariables: Variable[],\n    public children: Node[],\n    public empty: ForLoopBlockEmpty | null,\n    sourceSpan: ParseSourceSpan,\n    public mainBlockSpan: ParseSourceSpan,\n    startSourceSpan: ParseSourceSpan,\n    endSourceSpan: ParseSourceSpan | null,\n    nameSpan: ParseSourceSpan,\n    public i18n?: I18nMeta,\n  ) {\n    super(nameSpan, sourceSpan, startSourceSpan, endSourceSpan);\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitForLoopBlock(this);\n  }\n}\n\nexport class ForLoopBlockEmpty extends BlockNode implements Node {\n  constructor(\n    public children: Node[],\n    sourceSpan: ParseSourceSpan,\n    startSourceSpan: ParseSourceSpan,\n    endSourceSpan: ParseSourceSpan | null,\n    nameSpan: ParseSourceSpan,\n    public i18n?: I18nMeta,\n  ) {\n    super(nameSpan, sourceSpan, startSourceSpan, endSourceSpan);\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitForLoopBlockEmpty(this);\n  }\n}\n\nexport class IfBlock extends BlockNode implements Node {\n  constructor(\n    public branches: IfBlockBranch[],\n    sourceSpan: ParseSourceSpan,\n    startSourceSpan: ParseSourceSpan,\n    endSourceSpan: ParseSourceSpan | null,\n    nameSpan: ParseSourceSpan,\n  ) {\n    super(nameSpan, sourceSpan, startSourceSpan, endSourceSpan);\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitIfBlock(this);\n  }\n}\n\nexport class IfBlockBranch extends BlockNode implements Node {\n  constructor(\n    public expression: AST | null,\n    public children: Node[],\n    public expressionAlias: Variable | null,\n    sourceSpan: ParseSourceSpan,\n    startSourceSpan: ParseSourceSpan,\n    endSourceSpan: ParseSourceSpan | null,\n    nameSpan: ParseSourceSpan,\n    public i18n?: I18nMeta,\n  ) {\n    super(nameSpan, sourceSpan, startSourceSpan, endSourceSpan);\n  }\n\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitIfBlockBranch(this);\n  }\n}\n\nexport class UnknownBlock implements Node {\n  constructor(\n    public name: string,\n    public sourceSpan: ParseSourceSpan,\n    public nameSpan: ParseSourceSpan,\n  ) {}\n\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitUnknownBlock(this);\n  }\n}\n\nexport class LetDeclaration implements Node {\n  constructor(\n    public name: string,\n    public value: AST,\n    public sourceSpan: ParseSourceSpan,\n    public nameSpan: ParseSourceSpan,\n    public valueSpan: ParseSourceSpan,\n  ) {}\n\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitLetDeclaration(this);\n  }\n}\n\nexport class Component implements Node {\n  constructor(\n    public componentName: string,\n    public tagName: string | null,\n    public fullName: string,\n    public attributes: TextAttribute[],\n    public inputs: BoundAttribute[],\n    public outputs: BoundEvent[],\n    public directives: Directive[],\n    public children: Node[],\n    public references: Reference[],\n    public isSelfClosing: boolean,\n    public sourceSpan: ParseSourceSpan,\n    public startSourceSpan: ParseSourceSpan,\n    public endSourceSpan: ParseSourceSpan | null,\n    public i18n?: I18nMeta,\n  ) {}\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitComponent(this);\n  }\n}\n\nexport class Directive implements Node {\n  constructor(\n    public name: string,\n    public attributes: TextAttribute[],\n    public inputs: BoundAttribute[],\n    public outputs: BoundEvent[],\n    public references: Reference[],\n    public sourceSpan: ParseSourceSpan,\n    public startSourceSpan: ParseSourceSpan,\n    public endSourceSpan: ParseSourceSpan | null,\n    public i18n?: I18nMeta,\n  ) {}\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitDirective(this);\n  }\n}\n\nexport class Template implements Node {\n  constructor(\n    // tagName is the name of the container element, if applicable.\n    // `null` is a special case for when there is a structural directive on an `ng-template` so\n    // the renderer can differentiate between the synthetic template and the one written in the\n    // file.\n    public tagName: string | null,\n    public attributes: TextAttribute[],\n    public inputs: BoundAttribute[],\n    public outputs: BoundEvent[],\n    public directives: Directive[],\n    public templateAttrs: (BoundAttribute | TextAttribute)[],\n    public children: Node[],\n    public references: Reference[],\n    public variables: Variable[],\n    public isSelfClosing: boolean,\n    public sourceSpan: ParseSourceSpan,\n    public startSourceSpan: ParseSourceSpan,\n    public endSourceSpan: ParseSourceSpan | null,\n    public i18n?: I18nMeta,\n  ) {}\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitTemplate(this);\n  }\n}\n\nexport class Content implements Node {\n  readonly name = 'ng-content';\n\n  constructor(\n    public selector: string,\n    public attributes: TextAttribute[],\n    public children: Node[],\n    public isSelfClosing: boolean,\n    public sourceSpan: ParseSourceSpan,\n    public startSourceSpan: ParseSourceSpan,\n    public endSourceSpan: ParseSourceSpan | null,\n    public i18n?: I18nMeta,\n  ) {}\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitContent(this);\n  }\n}\n\nexport class Variable implements Node {\n  constructor(\n    public name: string,\n    public value: string,\n    public sourceSpan: ParseSourceSpan,\n    readonly keySpan: ParseSourceSpan,\n    public valueSpan?: ParseSourceSpan,\n  ) {}\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitVariable(this);\n  }\n}\n\nexport class Reference implements Node {\n  constructor(\n    public name: string,\n    public value: string,\n    public sourceSpan: ParseSourceSpan,\n    readonly keySpan: ParseSourceSpan,\n    public valueSpan?: ParseSourceSpan,\n  ) {}\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitReference(this);\n  }\n}\n\nexport class Icu implements Node {\n  constructor(\n    public vars: {[name: string]: BoundText},\n    public placeholders: {[name: string]: Text | BoundText},\n    public sourceSpan: ParseSourceSpan,\n    public i18n?: I18nMeta,\n  ) {}\n  visit<Result>(visitor: Visitor<Result>): Result {\n    return visitor.visitIcu(this);\n  }\n}\n\n/**\n * AST node that represents the host element of a directive.\n * This node is used only for type checking purposes and cannot be produced from a user's template.\n */\nexport class HostElement implements Node {\n  constructor(\n    readonly tagNames: string[],\n    readonly bindings: BoundAttribute[],\n    readonly listeners: BoundEvent[],\n    readonly sourceSpan: ParseSourceSpan,\n  ) {\n    if (tagNames.length === 0) {\n      throw new Error('HostElement must have at least one tag name.');\n    }\n  }\n\n  visit<Result>(): Result {\n    throw new Error(`HostElement cannot be visited`);\n  }\n}\n\nexport interface Visitor<Result = any> {\n  // Returning a truthy value from `visit()` will prevent `visitAll()` from the call to the typed\n  // method and result returned will become the result included in `visitAll()`s result array.\n  visit?(node: Node): Result;\n\n  visitElement(element: Element): Result;\n  visitTemplate(template: Template): Result;\n  visitContent(content: Content): Result;\n  visitVariable(variable: Variable): Result;\n  visitReference(reference: Reference): Result;\n  visitTextAttribute(attribute: TextAttribute): Result;\n  visitBoundAttribute(attribute: BoundAttribute): Result;\n  visitBoundEvent(attribute: BoundEvent): Result;\n  visitText(text: Text): Result;\n  visitBoundText(text: BoundText): Result;\n  visitIcu(icu: Icu): Result;\n  visitDeferredBlock(deferred: DeferredBlock): Result;\n  visitDeferredBlockPlaceholder(block: DeferredBlockPlaceholder): Result;\n  visitDeferredBlockError(block: DeferredBlockError): Result;\n  visitDeferredBlockLoading(block: DeferredBlockLoading): Result;\n  visitDeferredTrigger(trigger: DeferredTrigger): Result;\n  visitSwitchBlock(block: SwitchBlock): Result;\n  visitSwitchBlockCase(block: SwitchBlockCase): Result;\n  visitForLoopBlock(block: ForLoopBlock): Result;\n  visitForLoopBlockEmpty(block: ForLoopBlockEmpty): Result;\n  visitIfBlock(block: IfBlock): Result;\n  visitIfBlockBranch(block: IfBlockBranch): Result;\n  visitUnknownBlock(block: UnknownBlock): Result;\n  visitLetDeclaration(decl: LetDeclaration): Result;\n  visitComponent(component: Component): Result;\n  visitDirective(directive: Directive): Result;\n}\n\nexport class RecursiveVisitor implements Visitor<void> {\n  visitElement(element: Element): void {\n    visitAll(this, element.attributes);\n    visitAll(this, element.inputs);\n    visitAll(this, element.outputs);\n    visitAll(this, element.directives);\n    visitAll(this, element.children);\n    visitAll(this, element.references);\n  }\n  visitTemplate(template: Template): void {\n    visitAll(this, template.attributes);\n    visitAll(this, template.inputs);\n    visitAll(this, template.outputs);\n    visitAll(this, template.directives);\n    visitAll(this, template.children);\n    visitAll(this, template.references);\n    visitAll(this, template.variables);\n  }\n  visitDeferredBlock(deferred: DeferredBlock): void {\n    deferred.visitAll(this);\n  }\n  visitDeferredBlockPlaceholder(block: DeferredBlockPlaceholder): void {\n    visitAll(this, block.children);\n  }\n  visitDeferredBlockError(block: DeferredBlockError): void {\n    visitAll(this, block.children);\n  }\n  visitDeferredBlockLoading(block: DeferredBlockLoading): void {\n    visitAll(this, block.children);\n  }\n  visitSwitchBlock(block: SwitchBlock): void {\n    visitAll(this, block.cases);\n  }\n  visitSwitchBlockCase(block: SwitchBlockCase): void {\n    visitAll(this, block.children);\n  }\n  visitForLoopBlock(block: ForLoopBlock): void {\n    const blockItems = [block.item, ...block.contextVariables, ...block.children];\n    block.empty && blockItems.push(block.empty);\n    visitAll(this, blockItems);\n  }\n  visitForLoopBlockEmpty(block: ForLoopBlockEmpty): void {\n    visitAll(this, block.children);\n  }\n  visitIfBlock(block: IfBlock): void {\n    visitAll(this, block.branches);\n  }\n  visitIfBlockBranch(block: IfBlockBranch): void {\n    const blockItems = block.children;\n    block.expressionAlias && blockItems.push(block.expressionAlias);\n    visitAll(this, blockItems);\n  }\n  visitContent(content: Content): void {\n    visitAll(this, content.children);\n  }\n  visitComponent(component: Component): void {\n    visitAll(this, component.attributes);\n    visitAll(this, component.inputs);\n    visitAll(this, component.outputs);\n    visitAll(this, component.directives);\n    visitAll(this, component.children);\n    visitAll(this, component.references);\n  }\n  visitDirective(directive: Directive): void {\n    visitAll(this, directive.attributes);\n    visitAll(this, directive.inputs);\n    visitAll(this, directive.outputs);\n    visitAll(this, directive.references);\n  }\n  visitVariable(variable: Variable): void {}\n  visitReference(reference: Reference): void {}\n  visitTextAttribute(attribute: TextAttribute): void {}\n  visitBoundAttribute(attribute: BoundAttribute): void {}\n  visitBoundEvent(attribute: BoundEvent): void {}\n  visitText(text: Text): void {}\n  visitBoundText(text: BoundText): void {}\n  visitIcu(icu: Icu): void {}\n  visitDeferredTrigger(trigger: DeferredTrigger): void {}\n  visitUnknownBlock(block: UnknownBlock): void {}\n  visitLetDeclaration(decl: LetDeclaration): void {}\n}\n\nexport function visitAll<Result>(visitor: Visitor<Result>, nodes: Node[]): Result[] {\n  const result: Result[] = [];\n  if (visitor.visit) {\n    for (const node of nodes) {\n      visitor.visit(node);\n    }\n  } else {\n    for (const node of nodes) {\n      const newNode = node.visit(visitor);\n      if (newNode) {\n        result.push(newNode);\n      }\n    }\n  }\n  return result;\n}\n"]}