{"version":3,"file":"r3_template_transform.js","sourceRoot":"","sources":["r3_template_transform.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EACL,WAAW,EACX,SAAS,GAIV,MAAM,0BAA0B,CAAC;AAElC,OAAO,KAAK,IAAI,MAAM,kBAAkB,CAAC;AACzC,OAAO,EAAC,WAAW,EAAC,MAAM,+BAA+B,CAAC;AAC1D,OAAO,EAAC,YAAY,EAAC,MAAM,mBAAmB,CAAC;AAE/C,OAAO,EAAC,UAAU,EAAE,eAAe,EAAE,eAAe,EAAC,MAAM,eAAe,CAAC;AAC3E,OAAO,EAAC,oBAAoB,EAAC,MAAM,uBAAuB,CAAC;AAC3D,OAAO,EAAC,cAAc,EAAC,MAAM,iCAAiC,CAAC;AAE/D,OAAO,EAAC,oBAAoB,EAAE,eAAe,EAAC,MAAM,uCAAuC,CAAC;AAE5F,OAAO,KAAK,CAAC,MAAM,UAAU,CAAC;AAC9B,OAAO,EACL,aAAa,EACb,aAAa,EACb,iBAAiB,EACjB,uBAAuB,EACvB,sBAAsB,GACvB,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAAC,mBAAmB,EAAE,yBAAyB,EAAC,MAAM,sBAAsB,CAAC;AACpF,OAAO,EAAC,mBAAmB,EAAC,MAAM,kBAAkB,CAAC;AAErD,MAAM,gBAAgB,GAAG,uDAAuD,CAAC;AAEjF,oBAAoB;AACpB,MAAM,WAAW,GAAG,CAAC,CAAC;AACtB,mBAAmB;AACnB,MAAM,UAAU,GAAG,CAAC,CAAC;AACrB,qBAAqB;AACrB,MAAM,UAAU,GAAG,CAAC,CAAC;AACrB,kBAAkB;AAClB,MAAM,SAAS,GAAG,CAAC,CAAC;AACpB,sBAAsB;AACtB,MAAM,aAAa,GAAG,CAAC,CAAC;AACxB,gBAAgB;AAChB,MAAM,SAAS,GAAG,CAAC,CAAC;AACpB,oFAAoF;AACpF,MAAM,YAAY,GAAG,CAAC,CAAC;AAEvB,MAAM,cAAc,GAAG;IACrB,UAAU,EAAE,EAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAC;IACpC,QAAQ,EAAE,EAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAC;IAChC,KAAK,EAAE,EAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAC;CAC9B,CAAC;AAEF,MAAM,oBAAoB,GAAG,GAAG,CAAC;AAEjC,sEAAsE;AACtE,MAAM,6BAA6B,GAAG,IAAI,GAAG,CAAC;IAC5C,MAAM;IACN,OAAO;IACP,QAAQ;IACR,aAAa;IACb,cAAc;IACd,YAAY;CACb,CAAC,CAAC;AAEH,wEAAwE;AACxE,MAAM,wCAAwC,GAAG,IAAI,GAAG,CAAC,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC,CAAC;AAiB3F,MAAM,UAAU,mBAAmB,CACjC,SAAsB,EACtB,aAA4B,EAC5B,OAA4B;IAE5B,MAAM,WAAW,GAAG,IAAI,eAAe,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;IAChE,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;IAElE,qFAAqF;IACrF,MAAM,SAAS,GAAG,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAElE,MAAM,MAAM,GAAuB;QACjC,KAAK,EAAE,QAAQ;QACf,MAAM,EAAE,SAAS;QACjB,SAAS,EAAE,WAAW,CAAC,SAAS;QAChC,MAAM,EAAE,WAAW,CAAC,MAAM;QAC1B,kBAAkB,EAAE,WAAW,CAAC,kBAAkB;KACnD,CAAC;IACF,IAAI,OAAO,CAAC,mBAAmB,EAAE,CAAC;QAChC,MAAM,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY,CAAC;IACjD,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,eAAe;IAenB,YACU,aAA4B,EAC5B,OAA4B;QAD5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,YAAO,GAAP,OAAO,CAAqB;QAhBtC,WAAM,GAAiB,EAAE,CAAC;QAC1B,WAAM,GAAa,EAAE,CAAC;QACtB,cAAS,GAAa,EAAE,CAAC;QACzB,uBAAkB,GAAa,EAAE,CAAC;QAClC,uFAAuF;QACvF,iBAAY,GAAgB,EAAE,CAAC;QACvB,gBAAW,GAAY,KAAK,CAAC;QAErC;;;WAGG;QACK,mBAAc,GAAG,IAAI,GAAG,EAA0B,CAAC;IAKxD,CAAC;IAEJ,eAAe;IACf,YAAY,CAAC,OAAqB;QAChC,MAAM,iBAAiB,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,iBAAiB,EAAE,CAAC;YACtB,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,IAAI,CAAC,WAAW,CACd,gHAAgH,EAChH,OAAO,CAAC,UAAU,CACnB,CAAC;YACJ,CAAC;YACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC;QACD,MAAM,gBAAgB,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC;QAClD,IAAI,gBAAgB,CAAC,IAAI,KAAK,oBAAoB,CAAC,MAAM,EAAE,CAAC;YAC1D,OAAO,IAAI,CAAC;QACd,CAAC;aAAM,IAAI,gBAAgB,CAAC,IAAI,KAAK,oBAAoB,CAAC,KAAK,EAAE,CAAC;YAChE,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;YACvC,IAAI,QAAQ,KAAK,IAAI,EAAE,CAAC;gBACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7B,CAAC;YACD,OAAO,IAAI,CAAC;QACd,CAAC;aAAM,IACL,gBAAgB,CAAC,IAAI,KAAK,oBAAoB,CAAC,UAAU;YACzD,oBAAoB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAC/C,CAAC;YACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAC/C,OAAO,IAAI,CAAC;QACd,CAAC;QAED,2CAA2C;QAC3C,MAAM,iBAAiB,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACrD,MAAM,EACJ,UAAU,EACV,WAAW,EACX,UAAU,EACV,SAAS,EACT,iBAAiB,EACjB,wBAAwB,EACxB,gBAAgB,EAChB,wBAAwB,EACxB,aAAa,GACd,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;QAE7D,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QACnD,IAAI,QAAkB,CAAC;QAEvB,IAAI,gBAAgB,CAAC,WAAW,EAAE,CAAC;YACjC,sFAAsF;YACtF,6FAA6F;YAC7F,eAAe;YACf,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClF,CAAC;aAAM,CAAC;YACN,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;QACrE,CAAC;QAED,IAAI,aAA6D,CAAC;QAClE,IAAI,gBAAgB,CAAC,IAAI,KAAK,oBAAoB,CAAC,UAAU,EAAE,CAAC;YAC9D,MAAM,QAAQ,GAAG,gBAAgB,CAAC,UAAU,CAAC;YAC7C,MAAM,KAAK,GAAsB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YACxF,aAAa,GAAG,IAAI,CAAC,CAAC,OAAO,CAC3B,QAAQ,EACR,KAAK,EACL,QAAQ,EACR,OAAO,CAAC,aAAa,EACrB,OAAO,CAAC,UAAU,EAClB,OAAO,CAAC,eAAe,EACvB,OAAO,CAAC,aAAa,EACrB,OAAO,CAAC,IAAI,CACb,CAAC;YACF,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzC,CAAC;aAAM,IAAI,iBAAiB,EAAE,CAAC;YAC7B,kBAAkB;YAClB,MAAM,KAAK,GAAG,IAAI,CAAC,4BAA4B,CAC7C,OAAO,CAAC,IAAI,EACZ,gBAAgB,EAChB,aAAa,CACd,CAAC;YAEF,aAAa,GAAG,IAAI,CAAC,CAAC,QAAQ,CAC5B,OAAO,CAAC,IAAI,EACZ,UAAU,EACV,KAAK,CAAC,KAAK,EACX,WAAW,EACX,UAAU,EACV;YACE,4BAA4B;aAC7B,EACD,QAAQ,EACR,UAAU,EACV,SAAS,EACT,OAAO,CAAC,aAAa,EACrB,OAAO,CAAC,UAAU,EAClB,OAAO,CAAC,eAAe,EACvB,OAAO,CAAC,aAAa,EACrB,OAAO,CAAC,IAAI,CACb,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,MAAM,KAAK,GAAG,IAAI,CAAC,4BAA4B,CAC7C,OAAO,CAAC,IAAI,EACZ,gBAAgB,EAChB,aAAa,CACd,CAAC;YAEF,IAAI,OAAO,CAAC,IAAI,KAAK,cAAc,EAAE,CAAC;gBACpC,KAAK,MAAM,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;oBAChC,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC,SAAS,EAAE,CAAC;wBACzC,IAAI,CAAC,WAAW,CACd,sFAAsF,EACtF,KAAK,CAAC,UAAU,CACjB,CAAC;oBACJ,CAAC;gBACH,CAAC;YACH,CAAC;YAED,aAAa,GAAG,IAAI,CAAC,CAAC,OAAO,CAC3B,OAAO,CAAC,IAAI,EACZ,UAAU,EACV,KAAK,CAAC,KAAK,EACX,WAAW,EACX,UAAU,EACV,QAAQ,EACR,UAAU,EACV,OAAO,CAAC,aAAa,EACrB,OAAO,CAAC,UAAU,EAClB,OAAO,CAAC,eAAe,EACvB,OAAO,CAAC,aAAa,EACrB,OAAO,CAAC,MAAM,EACd,OAAO,CAAC,IAAI,CACb,CAAC;QACJ,CAAC;QAED,IAAI,wBAAwB,EAAE,CAAC;YAC7B,yFAAyF;YACzF,gCAAgC;YAChC,aAAa,GAAG,IAAI,CAAC,cAAc,CACjC,aAAa,EACb,wBAAwB,EACxB,iBAAiB,EACjB,aAAa,EACb,iBAAiB,EACjB,iBAAiB,CAClB,CAAC;QACJ,CAAC;QACD,IAAI,iBAAiB,EAAE,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC;QACD,OAAO,aAAa,CAAC;IACvB,CAAC;IAED,cAAc,CAAC,SAAyB;QACtC,OAAO,IAAI,CAAC,CAAC,aAAa,CACxB,SAAS,CAAC,IAAI,EACd,SAAS,CAAC,KAAK,EACf,SAAS,CAAC,UAAU,EACpB,SAAS,CAAC,OAAO,EACjB,SAAS,CAAC,SAAS,EACnB,SAAS,CAAC,IAAI,CACf,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,IAAe;QACvB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC;YAClC,CAAC,CAAC,IAAI;YACN,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5F,CAAC;IAED,cAAc,CAAC,SAAyB;QACtC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACpB,6CAA6C;YAC7C,sCAAsC;YACtC,OAAO,IAAI,CAAC;QACd,CAAC;QACD,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;YACpC,MAAM,IAAI,KAAK,CACb,iBACE,SAAS,CAAC,IAAI,CAAC,WACjB,4BAA4B,SAAS,CAAC,UAAU,CAAC,QAAQ,EAAE,wBAAwB,CACpF,CAAC;QACJ,CAAC;QACD,MAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC;QAC/B,MAAM,IAAI,GAAkC,EAAE,CAAC;QAC/C,MAAM,YAAY,GAA2C,EAAE,CAAC;QAChE,4DAA4D;QAC5D,+DAA+D;QAC/D,qDAAqD;QACrD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAChD,MAAM,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YACxC,IAAI,GAAG,CAAC,UAAU,CAAC,mBAAmB,CAAC,EAAE,CAAC;gBACxC,2FAA2F;gBAC3F,0FAA0F;gBAC1F,0FAA0F;gBAC1F,sFAAsF;gBACtF,wFAAwF;gBACxF,MAAM,YAAY,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBAEhC,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,4BAA4B,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;gBAE1F,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;YAC9D,CAAC;iBAAM,CAAC;gBACN,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YAC3F,CAAC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,EAAE,SAAS,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IACtE,CAAC;IAED,kBAAkB,CAAC,aAAiC;QAClD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,YAAY,CAAC,OAAqB;QAChC,IAAI,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC;YACrC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;QACjF,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,mBAAmB,CAAC,IAAyB,EAAE,OAAY;QACzD,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAC3C,IAAI,CAAC,KAAK,EACV,KAAK,EACL,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAC5B,CAAC;QAEF,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,YAAY,SAAS,EAAE,CAAC;YAChE,IAAI,CAAC,WAAW,CAAC,wCAAwC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7E,CAAC;QAED,OAAO,IAAI,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAChG,CAAC;IAED,cAAc,CAAC,SAAyB;QACtC,MAAM,iBAAiB,GAAG,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,iBAAiB,EAAE,CAAC;YACtB,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,IAAI,CAAC,WAAW,CACd,iHAAiH,EACjH,SAAS,CAAC,UAAU,CACrB,CAAC;YACJ,CAAC;YACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC;QAED,IAAI,SAAS,CAAC,OAAO,KAAK,IAAI,IAAI,6BAA6B,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC;YACvF,IAAI,CAAC,WAAW,CACd,aAAa,SAAS,CAAC,OAAO,qCAAqC,EACnE,SAAS,CAAC,eAAe,CAC1B,CAAC;YACF,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,EACJ,UAAU,EACV,WAAW,EACX,UAAU,EACV,iBAAiB,EACjB,wBAAwB,EACxB,gBAAgB,EAChB,wBAAwB,EACxB,aAAa,GACd,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAEnD,IAAI,CAAC,8BAA8B,CAAC,UAAU,CAAC,CAAC;QAEhD,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QACrD,IAAI,QAAkB,CAAC;QAEvB,IAAI,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,eAAe,CAAC,EAAE,CAAC;YAClE,sFAAsF;YACtF,6FAA6F;YAC7F,eAAe;YACf,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpF,CAAC;aAAM,CAAC;YACN,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC;QACzE,CAAC;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,4BAA4B,CAC7C,SAAS,CAAC,OAAO,EACjB,gBAAgB,EAChB,aAAa,CACd,CAAC;QAEF,IAAI,IAAI,GAA6B,IAAI,CAAC,CAAC,SAAS,CAClD,SAAS,CAAC,aAAa,EACvB,SAAS,CAAC,OAAO,EACjB,SAAS,CAAC,QAAQ,EAClB,UAAU,EACV,KAAK,CAAC,KAAK,EACX,WAAW,EACX,UAAU,EACV,QAAQ,EACR,UAAU,EACV,SAAS,CAAC,aAAa,EACvB,SAAS,CAAC,UAAU,EACpB,SAAS,CAAC,eAAe,EACzB,SAAS,CAAC,aAAa,EACvB,SAAS,CAAC,IAAI,CACf,CAAC;QAEF,IAAI,wBAAwB,EAAE,CAAC;YAC7B,IAAI,GAAG,IAAI,CAAC,cAAc,CACxB,IAAI,EACJ,wBAAwB,EACxB,iBAAiB,EACjB,aAAa,EACb,KAAK,EACL,iBAAiB,CAClB,CAAC;QACJ,CAAC;QACD,IAAI,iBAAiB,EAAE,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC;IACd,CAAC;IAED,mBAAmB;QACjB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,UAAU,CAAC,KAAiB,EAAE,OAAoB;QAChD,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnE,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE,CAAC;YACjB,MAAM,IAAI,KAAK,CACb,+FAA+F,CAChG,CAAC;QACJ,CAAC;QAED,4EAA4E;QAC5E,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YACnC,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAI,MAAM,GAAuD,IAAI,CAAC;QAEtE,QAAQ,KAAK,CAAC,IAAI,EAAE,CAAC;YACnB,KAAK,OAAO;gBACV,MAAM,GAAG,mBAAmB,CAC1B,KAAK,EACL,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,OAAO,EAAE,yBAAyB,CAAC,EACnE,IAAI,EACJ,IAAI,CAAC,aAAa,CACnB,CAAC;gBACF,MAAM;YAER,KAAK,QAAQ;gBACX,MAAM,GAAG,iBAAiB,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC5D,MAAM;YAER,KAAK,KAAK;gBACR,MAAM,GAAG,aAAa,CACpB,KAAK,EACL,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,OAAO,EAAE,uBAAuB,CAAC,EACjE,IAAI,EACJ,IAAI,CAAC,aAAa,CACnB,CAAC;gBACF,MAAM;YAER,KAAK,IAAI;gBACP,MAAM,GAAG,aAAa,CACpB,KAAK,EACL,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,OAAO,EAAE,sBAAsB,CAAC,EAChE,IAAI,EACJ,IAAI,CAAC,aAAa,CACnB,CAAC;gBACF,MAAM;YAER;gBACE,IAAI,YAAoB,CAAC;gBAEzB,IAAI,yBAAyB,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;oBAC1C,YAAY,GAAG,IAAI,KAAK,CAAC,IAAI,gDAAgD,CAAC;oBAC9E,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACjC,CAAC;qBAAM,IAAI,uBAAuB,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;oBAC/C,YAAY,GAAG,IAAI,KAAK,CAAC,IAAI,8CAA8C,CAAC;oBAC5E,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACjC,CAAC;qBAAM,IAAI,sBAAsB,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;oBAC9C,YAAY,GAAG,IAAI,KAAK,CAAC,IAAI,yDAAyD,CAAC;oBACvF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACjC,CAAC;qBAAM,CAAC;oBACN,YAAY,GAAG,uBAAuB,KAAK,CAAC,IAAI,GAAG,CAAC;gBACtD,CAAC;gBAED,MAAM,GAAG;oBACP,IAAI,EAAE,IAAI,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC;oBACtE,MAAM,EAAE,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;iBACzD,CAAC;gBACF,MAAM;QACV,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;QACnC,OAAO,MAAM,CAAC,IAAI,CAAC;IACrB,CAAC;IAEO,mBAAmB,CACzB,iBAAyB,EACzB,QAAqB,EACrB,SAAyC;QAEzC,MAAM,aAAa,GAAiB,EAAE,CAAC;QAEvC,KAAK,IAAI,CAAC,GAAG,iBAAiB,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7D,MAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAEzB,sBAAsB;YACtB,IAAI,IAAI,YAAY,IAAI,CAAC,OAAO,EAAE,CAAC;gBACjC,SAAS;YACX,CAAC;YAED,0CAA0C;YAC1C,IAAI,IAAI,YAAY,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAChE,+DAA+D;gBAC/D,kDAAkD;gBAClD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAC9B,SAAS;YACX,CAAC;YAED,kFAAkF;YAClF,IAAI,CAAC,CAAC,IAAI,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC3D,MAAM;YACR,CAAC;YAED,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC;QAED,OAAO,aAAa,CAAC;IACvB,CAAC;IAED,sFAAsF;IAC9E,4BAA4B,CAClC,WAA0B,EAC1B,UAA4B,EAC5B,aAA6C;QAE7C,MAAM,KAAK,GAAuB,EAAE,CAAC;QACrC,MAAM,OAAO,GAAsB,EAAE,CAAC;QAEtC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YAC1B,MAAM,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtC,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,OAAO,CAAC,IAAI,CACV,IAAI,CAAC,CAAC,aAAa,CACjB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,EAAE,EAC5B,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,SAAS,EACd,IAAI,CACL,CACF,CAAC;YACJ,CAAC;iBAAM,CAAC;gBACN,mEAAmE;gBACnE,mEAAmE;gBACnE,kEAAkE;gBAClE,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,CACvD,WAAW,EACX,IAAI;gBACJ,oBAAoB,CAAC,IAAI;gBACzB,qBAAqB,CAAC,KAAK,CAC5B,CAAC;gBACF,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,wBAAwB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;YACnE,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,EAAC,KAAK,EAAE,OAAO,EAAC,CAAC;IAC1B,CAAC;IAEO,iBAAiB,CAAC,KAAuB,EAAE,iBAA0B;QAC3E,MAAM,gBAAgB,GAAqB,EAAE,CAAC;QAC9C,MAAM,WAAW,GAAmB,EAAE,CAAC;QACvC,MAAM,SAAS,GAAiB,EAAE,CAAC;QACnC,MAAM,UAAU,GAAkB,EAAE,CAAC;QACrC,MAAM,UAAU,GAAsB,EAAE,CAAC;QACzC,MAAM,aAAa,GAAkC,EAAE,CAAC;QACxD,MAAM,wBAAwB,GAAqB,EAAE,CAAC;QACtD,MAAM,iBAAiB,GAAiB,EAAE,CAAC;QAE3C,0CAA0C;QAC1C,IAAI,wBAAwB,GAAG,KAAK,CAAC;QAErC,KAAK,MAAM,SAAS,IAAI,KAAK,EAAE,CAAC;YAC9B,IAAI,UAAU,GAAG,KAAK,CAAC;YACvB,MAAM,cAAc,GAAG,sBAAsB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAE9D,oCAAoC;YACpC,IAAI,iBAAiB,GAAG,KAAK,CAAC;YAE9B,IAAI,SAAS,CAAC,IAAI,EAAE,CAAC;gBACnB,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC;YACjD,CAAC;YAED,IAAI,cAAc,CAAC,UAAU,CAAC,oBAAoB,CAAC,EAAE,CAAC;gBACpD,eAAe;gBACf,IAAI,wBAAwB,EAAE,CAAC;oBAC7B,IAAI,CAAC,WAAW,CACd,8FAA8F,EAC9F,SAAS,CAAC,UAAU,CACrB,CAAC;gBACJ,CAAC;gBACD,iBAAiB,GAAG,IAAI,CAAC;gBACzB,wBAAwB,GAAG,IAAI,CAAC;gBAChC,MAAM,aAAa,GAAG,SAAS,CAAC,KAAK,CAAC;gBACtC,MAAM,WAAW,GAAG,cAAc,CAAC,SAAS,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;gBAE1E,MAAM,eAAe,GAAqB,EAAE,CAAC;gBAC7C,MAAM,mBAAmB,GAAG,SAAS,CAAC,SAAS;oBAC7C,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM;oBACtC,CAAC,CAAC,gFAAgF;wBAChF,uFAAuF;wBACvF,sBAAsB;wBACtB,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;gBAElE,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAC3C,WAAW,EACX,aAAa,EACb,SAAS,CAAC,UAAU,EACpB,mBAAmB,EACnB,EAAE,EACF,wBAAwB,EACxB,eAAe,EACf,IAAI,CAAC,cAAc,CACpB,CAAC;gBACF,iBAAiB,CAAC,IAAI,CACpB,GAAG,eAAe,CAAC,GAAG,CACpB,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC,CAC7E,CACF,CAAC;YACJ,CAAC;iBAAM,CAAC;gBACN,gEAAgE;gBAChE,UAAU,GAAG,IAAI,CAAC,cAAc,CAC9B,iBAAiB,EACjB,SAAS,EACT,EAAE,EACF,gBAAgB,EAChB,WAAW,EACX,SAAS,EACT,UAAU,CACX,CAAC;YACJ,CAAC;YAED,IAAI,CAAC,UAAU,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACtC,8DAA8D;gBAC9D,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC;YAClD,CAAC;QACH,CAAC;QAED,OAAO;YACL,UAAU;YACV,WAAW;YACX,UAAU;YACV,SAAS;YACT,iBAAiB;YACjB,wBAAwB;YACxB,gBAAgB;YAChB,wBAAwB;YACxB,aAAa;SACd,CAAC;IACJ,CAAC;IAEO,cAAc,CACpB,iBAA0B,EAC1B,SAAyB,EACzB,mBAA+B,EAC/B,gBAAkC,EAClC,WAA2B,EAC3B,SAAuB,EACvB,UAAyB;QAEzB,MAAM,IAAI,GAAG,sBAAsB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACpD,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;QAC9B,MAAM,OAAO,GAAG,SAAS,CAAC,UAAU,CAAC;QACrC,MAAM,cAAc,GAAG,SAAS,CAAC,SAAS;YACxC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM;YACtC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;QAE7B,SAAS,aAAa,CAAC,OAAwB,EAAE,MAAc,EAAE,UAAkB;YACjF,0FAA0F;YAC1F,wCAAwC;YACxC,MAAM,uBAAuB,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACpE,MAAM,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,uBAAuB,CAAC,CAAC;YACnF,MAAM,UAAU,GAAG,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAC1D,OAAO,IAAI,eAAe,CAAC,YAAY,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;QACjF,CAAC;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAE/C,IAAI,SAAS,EAAE,CAAC;YACd,IAAI,SAAS,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE,CAAC;gBACnC,MAAM,UAAU,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;gBAC3C,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,WAAW,CAAC,EAAE,UAAU,CAAC,CAAC;gBAC3E,IAAI,CAAC,aAAa,CAAC,oBAAoB,CACrC,UAAU,EACV,KAAK,EACL,KAAK,EACL,KAAK,EACL,OAAO,EACP,cAAc,EACd,SAAS,CAAC,SAAS,EACnB,mBAAmB,EACnB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACJ,CAAC;iBAAM,IAAI,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC;gBACjC,IAAI,iBAAiB,EAAE,CAAC;oBACtB,MAAM,UAAU,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;oBAC3C,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;oBAC1E,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;gBAC1F,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,WAAW,CAAC,mDAAmD,EAAE,OAAO,CAAC,CAAC;gBACjF,CAAC;YACH,CAAC;iBAAM,IAAI,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC;gBACjC,MAAM,UAAU,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;gBAC3C,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,CAAC;gBAC1E,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;YAC5F,CAAC;iBAAM,IAAI,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC;gBAChC,MAAM,MAAM,GAAkB,EAAE,CAAC;gBACjC,MAAM,UAAU,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;gBAC3C,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,CAAC;gBACzE,IAAI,CAAC,aAAa,CAAC,UAAU,CAC3B,UAAU,EACV,KAAK;gBACL,uBAAuB,CAAC,KAAK,EAC7B,OAAO,EACP,SAAS,CAAC,SAAS,IAAI,OAAO,EAC9B,mBAAmB,EACnB,MAAM,EACN,OAAO,CACR,CAAC;gBACF,SAAS,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YACjC,CAAC;iBAAM,IAAI,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC;gBACpC,MAAM,UAAU,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;gBAC3C,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,aAAa,CAAC,EAAE,UAAU,CAAC,CAAC;gBAC7E,IAAI,CAAC,aAAa,CAAC,oBAAoB,CACrC,UAAU,EACV,KAAK,EACL,KAAK,EACL,IAAI,EACJ,OAAO,EACP,cAAc,EACd,SAAS,CAAC,SAAS,EACnB,mBAAmB,EACnB,gBAAgB,EAChB,OAAO,CACR,CAAC;gBACF,IAAI,CAAC,oBAAoB,CACvB,UAAU,EACV,KAAK,EACL,OAAO,EACP,SAAS,CAAC,SAAS,EACnB,mBAAmB,EACnB,WAAW,EACX,OAAO,EACP,cAAc,CACf,CAAC;YACJ,CAAC;iBAAM,IAAI,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC;gBAChC,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;gBACjD,IAAI,CAAC,aAAa,CAAC,gBAAgB,CACjC,IAAI,EACJ,KAAK,EACL,OAAO,EACP,cAAc,EACd,SAAS,CAAC,SAAS,EACnB,mBAAmB,EACnB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACJ,CAAC;YACD,OAAO,IAAI,CAAC;QACd,CAAC;QAED,4EAA4E;QAC5E,6BAA6B;QAC7B,IAAI,MAAM,GAAwC,IAAI,CAAC;QACvD,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;YACrD,MAAM,GAAG,cAAc,CAAC,UAAU,CAAC;QACrC,CAAC;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YAC1D,MAAM,GAAG,cAAc,CAAC,QAAQ,CAAC;QACnC,CAAC;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;YACvD,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC;QAChC,CAAC;QACD,IACE,MAAM,KAAK,IAAI;YACf,uEAAuE;YACvE,uEAAuE;YACvE,mDAAmD;YACnD,6DAA6D;YAC7D,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,EACrD,CAAC;YACD,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACxF,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;YACjE,IAAI,MAAM,CAAC,KAAK,KAAK,cAAc,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;gBACrD,IAAI,CAAC,aAAa,CAAC,oBAAoB,CACrC,UAAU,EACV,KAAK,EACL,KAAK,EACL,IAAI,EACJ,OAAO,EACP,cAAc,EACd,SAAS,CAAC,SAAS,EACnB,mBAAmB,EACnB,gBAAgB,EAChB,OAAO,CACR,CAAC;gBACF,IAAI,CAAC,oBAAoB,CACvB,UAAU,EACV,KAAK,EACL,OAAO,EACP,SAAS,CAAC,SAAS,EACnB,mBAAmB,EACnB,WAAW,EACX,OAAO,EACP,cAAc,CACf,CAAC;YACJ,CAAC;iBAAM,IAAI,MAAM,CAAC,KAAK,KAAK,cAAc,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;gBAC1D,IAAI,CAAC,aAAa,CAAC,oBAAoB,CACrC,UAAU,EACV,KAAK,EACL,KAAK,EACL,KAAK,EACL,OAAO,EACP,cAAc,EACd,SAAS,CAAC,SAAS,EACnB,mBAAmB,EACnB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACJ,CAAC;iBAAM,CAAC;gBACN,MAAM,MAAM,GAAkB,EAAE,CAAC;gBACjC,IAAI,CAAC,aAAa,CAAC,UAAU,CAC3B,UAAU,EACV,KAAK;gBACL,uBAAuB,CAAC,KAAK,EAC7B,OAAO,EACP,SAAS,CAAC,SAAS,IAAI,OAAO,EAC9B,mBAAmB,EACnB,MAAM,EACN,OAAO,CACR,CAAC;gBACF,SAAS,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YACjC,CAAC;YAED,OAAO,IAAI,CAAC;QACd,CAAC;QAED,6BAA6B;QAC7B,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QAC9D,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAC9D,IAAI,EACJ,KAAK,EACL,OAAO,EACP,SAAS,CAAC,SAAS,EACnB,mBAAmB,EACnB,gBAAgB,EAChB,OAAO,EACP,SAAS,CAAC,WAAW,IAAI,IAAI,CAC9B,CAAC;QACF,OAAO,UAAU,CAAC;IACpB,CAAC;IAEO,iBAAiB,CAAC,IAAmC;QAC3D,MAAM,WAAW,GAAG,IAAI,YAAY,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9E,MAAM,UAAU,GAAkB,EAAE,CAAC;QACrC,MAAM,cAAc,GAAG,IAAI,GAAG,EAAU,CAAC;QAEzC,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YACxC,IAAI,OAAO,GAAG,KAAK,CAAC;YAEpB,KAAK,MAAM,IAAI,IAAI,SAAS,CAAC,KAAK,EAAE,CAAC;gBACnC,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,EAAE,CAAC;oBAC/C,OAAO,GAAG,IAAI,CAAC;oBACf,IAAI,CAAC,WAAW,CACd,8BAA8B,IAAI,CAAC,IAAI,+CAA+C,EACtF,IAAI,CAAC,UAAU,CAChB,CAAC;gBACJ,CAAC;qBAAM,IAAI,wCAAwC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;oBACnE,OAAO,GAAG,IAAI,CAAC;oBACf,IAAI,CAAC,WAAW,CACd,cAAc,IAAI,CAAC,IAAI,2CAA2C,EAClE,IAAI,CAAC,UAAU,CAChB,CAAC;gBACJ,CAAC;YACH,CAAC;YAED,IAAI,CAAC,OAAO,IAAI,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;gBACnD,OAAO,GAAG,IAAI,CAAC;gBACf,IAAI,CAAC,WAAW,CACd,2BAA2B,SAAS,CAAC,IAAI,sCAAsC,EAC/E,SAAS,CAAC,UAAU,CACrB,CAAC;YACJ,CAAC;YAED,IAAI,OAAO,EAAE,CAAC;gBACZ,SAAS;YACX,CAAC;YAED,MAAM,EAAC,UAAU,EAAE,gBAAgB,EAAE,WAAW,EAAE,UAAU,EAAE,aAAa,EAAC,GAC1E,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YACjD,IAAI,CAAC,8BAA8B,CAAC,UAAU,CAAC,CAAC;YAEhD,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC,4BAA4B,CACvD,WAAW,EACX,gBAAgB,EAChB,aAAa,CACd,CAAC;YAEF,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;gBAC3B,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC,QAAQ,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC7E,OAAO,GAAG,IAAI,CAAC;oBACf,IAAI,CAAC,WAAW,CAAC,iDAAiD,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;gBACxF,CAAC;YACH,CAAC;YAED,IAAI,OAAO,EAAE,CAAC;gBACZ,SAAS;YACX,CAAC;YAED,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACnC,UAAU,CAAC,IAAI,CACb,IAAI,CAAC,CAAC,SAAS,CACb,SAAS,CAAC,IAAI,EACd,UAAU,EACV,MAAM,EACN,WAAW,EACX,UAAU,EACV,SAAS,CAAC,UAAU,EACpB,SAAS,CAAC,eAAe,EACzB,SAAS,CAAC,aAAa,EACvB,SAAS,CACV,CACF,CAAC;QACJ,CAAC;QAED,OAAO,UAAU,CAAC;IACpB,CAAC;IAEO,yBAAyB,CAAC,UAA6B;QAC7D,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;IAClE,CAAC;IAEO,qBAAqB,CAAC,UAA8B;QAC1D,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC,SAAS,CAAC,CAAC;IACpE,CAAC;IAEO,cAAc,CACpB,IAAsD,EACtD,kBAAoC,EACpC,iBAA+B,EAC/B,aAA4C,EAC5C,iBAA0B,EAC1B,iBAA0B;QAE1B,+FAA+F;QAC/F,MAAM,KAAK,GAAG,IAAI,CAAC,4BAA4B,CAC7C,aAAa,EACb,kBAAkB,EAClB,aAAa,CACd,CAAC;QACF,MAAM,aAAa,GAA2C,EAAE,CAAC;QACjE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1D,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAExD,MAAM,YAAY,GAAG;YACnB,UAAU,EAAE,EAAuB;YACnC,MAAM,EAAE,EAAwB;YAChC,OAAO,EAAE,EAAoB;SAC9B,CAAC;QAEF,IAAI,IAAI,YAAY,CAAC,CAAC,OAAO,IAAI,IAAI,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC;YAC7D,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACjF,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACrE,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7C,CAAC;QAED,2FAA2F;QAC3F,2FAA2F;QAC3F,yEAAyE;QACzE,MAAM,IAAI,GAAG,iBAAiB,IAAI,iBAAiB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;QAC5E,IAAI,IAAmB,CAAC;QAExB,IAAI,IAAI,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC;YAChC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAAM,IAAI,IAAI,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAC;YACtC,IAAI,GAAG,IAAI,CAAC;QACd,CAAC;aAAM,CAAC;YACN,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;QAED,OAAO,IAAI,CAAC,CAAC,QAAQ,CACnB,IAAI,EACJ,YAAY,CAAC,UAAU,EACvB,YAAY,CAAC,MAAM,EACnB,YAAY,CAAC,OAAO,EACpB;QACE,mCAAmC;SACpC,EACD,aAAa,EACb,CAAC,IAAI,CAAC,EACN;QACE,mCAAmC;SACpC,EACD,iBAAiB,EACjB,KAAK,EACL,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,aAAa,EAClB,IAAI,CACL,CAAC;IACJ,CAAC;IAEO,2BAA2B,CACjC,KAAa,EACb,UAA2B,EAC3B,kBAAiF,EACjF,IAAoB;QAEpB,MAAM,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;QACvC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,WAAW,EAAE,UAAU,EAAE,kBAAkB,CAAC,CAAC;QAChG,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;IAC9F,CAAC;IAEO,aAAa,CACnB,UAAkB,EAClB,KAAa,EACb,UAA2B,EAC3B,OAAwB,EACxB,SAAsC,EACtC,SAAuB;QAEvB,IAAI,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,sCAAsC,EAAE,UAAU,CAAC,CAAC;QACvE,CAAC;aAAM,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACnC,IAAI,CAAC,WAAW,CAAC,+BAA+B,EAAE,UAAU,CAAC,CAAC;QAChE,CAAC;QAED,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;IACpF,CAAC;IAEO,cAAc,CACpB,UAAkB,EAClB,KAAa,EACb,UAA2B,EAC3B,OAAwB,EACxB,SAAsC,EACtC,UAAyB;QAEzB,IAAI,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,uCAAuC,EAAE,UAAU,CAAC,CAAC;QACxE,CAAC;aAAM,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACnC,IAAI,CAAC,WAAW,CAAC,gCAAgC,EAAE,UAAU,CAAC,CAAC;QACjE,CAAC;aAAM,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,IAAI,KAAK,UAAU,CAAC,EAAE,CAAC;YACzE,IAAI,CAAC,WAAW,CAAC,eAAe,UAAU,6BAA6B,EAAE,UAAU,CAAC,CAAC;QACvF,CAAC;QAED,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;IACtF,CAAC;IAEO,oBAAoB,CAC1B,IAAY,EACZ,UAAkB,EAClB,UAA2B,EAC3B,SAAsC,EACtC,oBAAgC,EAChC,WAA2B,EAC3B,OAAwB,EACxB,cAAsB;QAEtB,MAAM,MAAM,GAAkB,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,UAAU,CAC3B,GAAG,IAAI,QAAQ,EACf,UAAU;QACV,uBAAuB,CAAC,IAAI,EAC5B,UAAU,EACV,SAAS,IAAI,UAAU,EACvB,oBAAoB,EACpB,MAAM,EACN,OAAO,CACR,CAAC;QACF,SAAS,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IACjC,CAAC;IAEO,8BAA8B,CAAC,UAAyB;QAC9D,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC5B,OAAO;QACT,CAAC;QAED,MAAM,SAAS,GAAG,IAAI,GAAG,EAAU,CAAC;QAEpC,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC7B,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACzB,IAAI,CAAC,WAAW,CACd,8DAA8D,EAC9D,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC,UAAU,CAChC,CAAC;YACJ,CAAC;iBAAM,IAAI,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;gBACnC,IAAI,CAAC,WAAW,CAAC,2CAA2C,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;YAChF,CAAC;iBAAM,CAAC;gBACN,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC;QACH,CAAC;IACH,CAAC;IAEO,WAAW,CACjB,OAAe,EACf,UAA2B,EAC3B,QAAyB,eAAe,CAAC,KAAK;QAE9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;IAC/D,CAAC;CACF;AAED,MAAM,kBAAkB;IACtB,YAAY,CAAC,GAAiB;QAC5B,MAAM,gBAAgB,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;QAC9C,IACE,gBAAgB,CAAC,IAAI,KAAK,oBAAoB,CAAC,MAAM;YACrD,gBAAgB,CAAC,IAAI,KAAK,oBAAoB,CAAC,KAAK;YACpD,gBAAgB,CAAC,IAAI,KAAK,oBAAoB,CAAC,UAAU,EACzD,CAAC;YACD,yCAAyC;YACzC,gEAAgE;YAChE,uBAAuB;YACvB,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,QAAQ,GAAa,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACnE,OAAO,IAAI,CAAC,CAAC,OAAO,CAClB,GAAG,CAAC,IAAI,EACR,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAsB;QACnD,YAAY,CAAC,EAAE;QACf,aAAa,CAAC,EAAE;QAChB,gBAAgB,CAAC,EAAE,EACnB,QAAQ;QACR,gBAAgB,CAAC,EAAE,EACnB,GAAG,CAAC,aAAa,EACjB,GAAG,CAAC,UAAU,EACd,GAAG,CAAC,eAAe,EACnB,GAAG,CAAC,aAAa,EACjB,GAAG,CAAC,MAAM,CACX,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,OAAqB;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,cAAc,CAAC,SAAyB;QACtC,OAAO,IAAI,CAAC,CAAC,aAAa,CACxB,SAAS,CAAC,IAAI,EACd,SAAS,CAAC,KAAK,EACf,SAAS,CAAC,UAAU,EACpB,SAAS,CAAC,OAAO,EACjB,SAAS,CAAC,SAAS,EACnB,SAAS,CAAC,IAAI,CACf,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,IAAe;QACvB,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC;IAED,cAAc,CAAC,SAAyB;QACtC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,kBAAkB,CAAC,aAAiC;QAClD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,UAAU,CAAC,KAAiB,EAAE,OAAY;QACxC,MAAM,KAAK,GAAG;YACZ,wFAAwF;YACxF,8DAA8D;YAC9D,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,eAAe,CAAC;YACnE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC;SACvC,CAAC;QAEF,IAAI,KAAK,CAAC,aAAa,KAAK,IAAI,EAAE,CAAC;YACjC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;QAC9E,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED,mBAAmB,CAAC,SAA8B,EAAE,OAAY;QAC9D,OAAO,IAAI,CAAC;IACd,CAAC;IAED,mBAAmB,CAAC,IAAyB,EAAE,OAAY;QACzD,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3E,CAAC;IAED,cAAc,CAAC,GAAmB,EAAE,OAAY;QAC9C,MAAM,QAAQ,GAAa,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACnE,OAAO,IAAI,CAAC,CAAC,OAAO,CAClB,GAAG,CAAC,QAAQ,EACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAsB;QACnD,YAAY,CAAC,EAAE;QACf,aAAa,CAAC,EAAE;QAChB,gBAAgB,CAAC,EAAE,EACnB,QAAQ;QACR,gBAAgB,CAAC,EAAE,EACnB,GAAG,CAAC,aAAa,EACjB,GAAG,CAAC,UAAU,EACd,GAAG,CAAC,eAAe,EACnB,GAAG,CAAC,aAAa,EACjB,KAAK,CACN,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,SAAyB,EAAE,OAAY;QACpD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAED,MAAM,oBAAoB,GAAG,IAAI,kBAAkB,EAAE,CAAC;AAEtD,SAAS,sBAAsB,CAAC,QAAgB;IAC9C,OAAO,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;AACrE,CAAC;AAED,SAAS,SAAS,CAAC,MAAqB,EAAE,WAA2B;IACnE,WAAW,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC;AAED,SAAS,YAAY,CAAC,IAAkB;IACtC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAC3E,OAAO,IAAI,CAAC;IACd,CAAC;SAAM,CAAC;QACN,OAAQ,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAe,CAAC,KAAK,CAAC;IAC/C,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  BindingType,\n  EmptyExpr,\n  ParsedEvent,\n  ParsedProperty,\n  ParsedVariable,\n} from '../expression_parser/ast';\nimport * as i18n from '../i18n/i18n_ast';\nimport * as html from '../ml_parser/ast';\nimport {replaceNgsp} from '../ml_parser/html_whitespaces';\nimport {isNgTemplate} from '../ml_parser/tags';\nimport {InterpolatedAttributeToken, InterpolatedTextToken} from '../ml_parser/tokens';\nimport {ParseError, ParseErrorLevel, ParseSourceSpan} from '../parse_util';\nimport {isStyleUrlResolvable} from '../style_url_resolver';\nimport {isI18nRootNode} from '../template/pipeline/src/ingest';\nimport {BindingParser} from '../template_parser/binding_parser';\nimport {PreparsedElementType, preparseElement} from '../template_parser/template_preparser';\n\nimport * as t from './r3_ast';\nimport {\n  createForLoop,\n  createIfBlock,\n  createSwitchBlock,\n  isConnectedForLoopBlock,\n  isConnectedIfLoopBlock,\n} from './r3_control_flow';\nimport {createDeferredBlock, isConnectedDeferLoopBlock} from './r3_deferred_blocks';\nimport {I18N_ICU_VAR_PREFIX} from './view/i18n/util';\n\nconst BIND_NAME_REGEXP = /^(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.*)$/;\n\n// Group 1 = \"bind-\"\nconst KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nconst KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nconst KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nconst KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nconst KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nconst KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nconst IDENT_KW_IDX = 7;\n\nconst BINDING_DELIMS = {\n  BANANA_BOX: {start: '[(', end: ')]'},\n  PROPERTY: {start: '[', end: ']'},\n  EVENT: {start: '(', end: ')'},\n};\n\nconst TEMPLATE_ATTR_PREFIX = '*';\n\n// TODO(crisbeto): any other tag names that shouldn't be allowed here?\nconst UNSUPPORTED_SELECTORLESS_TAGS = new Set([\n  'link',\n  'style',\n  'script',\n  'ng-template',\n  'ng-container',\n  'ng-content',\n]);\n\n// TODO(crisbeto): any other attributes that should not be allowed here?\nconst UNSUPPORTED_SELECTORLESS_DIRECTIVE_ATTRS = new Set(['ngProjectAs', 'ngNonBindable']);\n\n// Result of the html AST to Ivy AST transformation\nexport interface Render3ParseResult {\n  nodes: t.Node[];\n  errors: ParseError[];\n  styles: string[];\n  styleUrls: string[];\n  ngContentSelectors: string[];\n  // Will be defined if `Render3ParseOptions['collectCommentNodes']` is true\n  commentNodes?: t.Comment[];\n}\n\ninterface Render3ParseOptions {\n  collectCommentNodes: boolean;\n}\n\nexport function htmlAstToRender3Ast(\n  htmlNodes: html.Node[],\n  bindingParser: BindingParser,\n  options: Render3ParseOptions,\n): Render3ParseResult {\n  const transformer = new HtmlAstToIvyAst(bindingParser, options);\n  const ivyNodes = html.visitAll(transformer, htmlNodes, htmlNodes);\n\n  // Errors might originate in either the binding parser or the html to ivy transformer\n  const allErrors = bindingParser.errors.concat(transformer.errors);\n\n  const result: Render3ParseResult = {\n    nodes: ivyNodes,\n    errors: allErrors,\n    styleUrls: transformer.styleUrls,\n    styles: transformer.styles,\n    ngContentSelectors: transformer.ngContentSelectors,\n  };\n  if (options.collectCommentNodes) {\n    result.commentNodes = transformer.commentNodes;\n  }\n  return result;\n}\n\nclass HtmlAstToIvyAst implements html.Visitor {\n  errors: ParseError[] = [];\n  styles: string[] = [];\n  styleUrls: string[] = [];\n  ngContentSelectors: string[] = [];\n  // This array will be populated if `Render3ParseOptions['collectCommentNodes']` is true\n  commentNodes: t.Comment[] = [];\n  private inI18nBlock: boolean = false;\n\n  /**\n   * Keeps track of the nodes that have been processed already when previous nodes were visited.\n   * These are typically blocks connected to other blocks or text nodes between connected blocks.\n   */\n  private processedNodes = new Set<html.Block | html.Text>();\n\n  constructor(\n    private bindingParser: BindingParser,\n    private options: Render3ParseOptions,\n  ) {}\n\n  // HTML visitor\n  visitElement(element: html.Element): t.Node | null {\n    const isI18nRootElement = isI18nRootNode(element.i18n);\n    if (isI18nRootElement) {\n      if (this.inI18nBlock) {\n        this.reportError(\n          'Cannot mark an element as translatable inside of a translatable section. Please remove the nested i18n marker.',\n          element.sourceSpan,\n        );\n      }\n      this.inI18nBlock = true;\n    }\n    const preparsedElement = preparseElement(element);\n    if (preparsedElement.type === PreparsedElementType.SCRIPT) {\n      return null;\n    } else if (preparsedElement.type === PreparsedElementType.STYLE) {\n      const contents = textContents(element);\n      if (contents !== null) {\n        this.styles.push(contents);\n      }\n      return null;\n    } else if (\n      preparsedElement.type === PreparsedElementType.STYLESHEET &&\n      isStyleUrlResolvable(preparsedElement.hrefAttr)\n    ) {\n      this.styleUrls.push(preparsedElement.hrefAttr);\n      return null;\n    }\n\n    // Whether the element is a `<ng-template>`\n    const isTemplateElement = isNgTemplate(element.name);\n    const {\n      attributes,\n      boundEvents,\n      references,\n      variables,\n      templateVariables,\n      elementHasInlineTemplate,\n      parsedProperties,\n      templateParsedProperties,\n      i18nAttrsMeta,\n    } = this.prepareAttributes(element.attrs, isTemplateElement);\n\n    const directives = this.extractDirectives(element);\n    let children: t.Node[];\n\n    if (preparsedElement.nonBindable) {\n      // The `NonBindableVisitor` may need to return an array of nodes for blocks so we need\n      // to flatten the array here. Avoid doing this for the `HtmlAstToIvyAst` since `flat` creates\n      // a new array.\n      children = html.visitAll(NON_BINDABLE_VISITOR, element.children).flat(Infinity);\n    } else {\n      children = html.visitAll(this, element.children, element.children);\n    }\n\n    let parsedElement: t.Content | t.Template | t.Element | undefined;\n    if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n      const selector = preparsedElement.selectAttr;\n      const attrs: t.TextAttribute[] = element.attrs.map((attr) => this.visitAttribute(attr));\n      parsedElement = new t.Content(\n        selector,\n        attrs,\n        children,\n        element.isSelfClosing,\n        element.sourceSpan,\n        element.startSourceSpan,\n        element.endSourceSpan,\n        element.i18n,\n      );\n      this.ngContentSelectors.push(selector);\n    } else if (isTemplateElement) {\n      // `<ng-template>`\n      const attrs = this.categorizePropertyAttributes(\n        element.name,\n        parsedProperties,\n        i18nAttrsMeta,\n      );\n\n      parsedElement = new t.Template(\n        element.name,\n        attributes,\n        attrs.bound,\n        boundEvents,\n        directives,\n        [\n          /* no template attributes */\n        ],\n        children,\n        references,\n        variables,\n        element.isSelfClosing,\n        element.sourceSpan,\n        element.startSourceSpan,\n        element.endSourceSpan,\n        element.i18n,\n      );\n    } else {\n      const attrs = this.categorizePropertyAttributes(\n        element.name,\n        parsedProperties,\n        i18nAttrsMeta,\n      );\n\n      if (element.name === 'ng-container') {\n        for (const bound of attrs.bound) {\n          if (bound.type === BindingType.Attribute) {\n            this.reportError(\n              `Attribute bindings are not supported on ng-container. Use property bindings instead.`,\n              bound.sourceSpan,\n            );\n          }\n        }\n      }\n\n      parsedElement = new t.Element(\n        element.name,\n        attributes,\n        attrs.bound,\n        boundEvents,\n        directives,\n        children,\n        references,\n        element.isSelfClosing,\n        element.sourceSpan,\n        element.startSourceSpan,\n        element.endSourceSpan,\n        element.isVoid,\n        element.i18n,\n      );\n    }\n\n    if (elementHasInlineTemplate) {\n      // If this node is an inline-template (e.g. has *ngFor) then we need to create a template\n      // node that contains this node.\n      parsedElement = this.wrapInTemplate(\n        parsedElement,\n        templateParsedProperties,\n        templateVariables,\n        i18nAttrsMeta,\n        isTemplateElement,\n        isI18nRootElement,\n      );\n    }\n    if (isI18nRootElement) {\n      this.inI18nBlock = false;\n    }\n    return parsedElement;\n  }\n\n  visitAttribute(attribute: html.Attribute): t.TextAttribute {\n    return new t.TextAttribute(\n      attribute.name,\n      attribute.value,\n      attribute.sourceSpan,\n      attribute.keySpan,\n      attribute.valueSpan,\n      attribute.i18n,\n    );\n  }\n\n  visitText(text: html.Text): t.Node | null {\n    return this.processedNodes.has(text)\n      ? null\n      : this._visitTextWithInterpolation(text.value, text.sourceSpan, text.tokens, text.i18n);\n  }\n\n  visitExpansion(expansion: html.Expansion): t.Icu | null {\n    if (!expansion.i18n) {\n      // do not generate Icu in case it was created\n      // outside of i18n block in a template\n      return null;\n    }\n    if (!isI18nRootNode(expansion.i18n)) {\n      throw new Error(\n        `Invalid type \"${\n          expansion.i18n.constructor\n        }\" for \"i18n\" property of ${expansion.sourceSpan.toString()}. Expected a \"Message\"`,\n      );\n    }\n    const message = expansion.i18n;\n    const vars: {[name: string]: t.BoundText} = {};\n    const placeholders: {[name: string]: t.Text | t.BoundText} = {};\n    // extract VARs from ICUs - we process them separately while\n    // assembling resulting message via goog.getMsg function, since\n    // we need to pass them to top-level goog.getMsg call\n    Object.keys(message.placeholders).forEach((key) => {\n      const value = message.placeholders[key];\n      if (key.startsWith(I18N_ICU_VAR_PREFIX)) {\n        // Currently when the `plural` or `select` keywords in an ICU contain trailing spaces (e.g.\n        // `{count, select , ...}`), these spaces are also included into the key names in ICU vars\n        // (e.g. \"VAR_SELECT \"). These trailing spaces are not desirable, since they will later be\n        // converted into `_` symbols while normalizing placeholder names, which might lead to\n        // mismatches at runtime (i.e. placeholder will not be replaced with the correct value).\n        const formattedKey = key.trim();\n\n        const ast = this.bindingParser.parseInterpolationExpression(value.text, value.sourceSpan);\n\n        vars[formattedKey] = new t.BoundText(ast, value.sourceSpan);\n      } else {\n        placeholders[key] = this._visitTextWithInterpolation(value.text, value.sourceSpan, null);\n      }\n    });\n    return new t.Icu(vars, placeholders, expansion.sourceSpan, message);\n  }\n\n  visitExpansionCase(expansionCase: html.ExpansionCase): null {\n    return null;\n  }\n\n  visitComment(comment: html.Comment): null {\n    if (this.options.collectCommentNodes) {\n      this.commentNodes.push(new t.Comment(comment.value || '', comment.sourceSpan));\n    }\n    return null;\n  }\n\n  visitLetDeclaration(decl: html.LetDeclaration, context: any) {\n    const value = this.bindingParser.parseBinding(\n      decl.value,\n      false,\n      decl.valueSpan,\n      decl.valueSpan.start.offset,\n    );\n\n    if (value.errors.length === 0 && value.ast instanceof EmptyExpr) {\n      this.reportError('@let declaration value cannot be empty', decl.valueSpan);\n    }\n\n    return new t.LetDeclaration(decl.name, value, decl.sourceSpan, decl.nameSpan, decl.valueSpan);\n  }\n\n  visitComponent(component: html.Component) {\n    const isI18nRootElement = isI18nRootNode(component.i18n);\n    if (isI18nRootElement) {\n      if (this.inI18nBlock) {\n        this.reportError(\n          'Cannot mark a component as translatable inside of a translatable section. Please remove the nested i18n marker.',\n          component.sourceSpan,\n        );\n      }\n      this.inI18nBlock = true;\n    }\n\n    if (component.tagName !== null && UNSUPPORTED_SELECTORLESS_TAGS.has(component.tagName)) {\n      this.reportError(\n        `Tag name \"${component.tagName}\" cannot be used as a component tag`,\n        component.startSourceSpan,\n      );\n      return null;\n    }\n\n    const {\n      attributes,\n      boundEvents,\n      references,\n      templateVariables,\n      elementHasInlineTemplate,\n      parsedProperties,\n      templateParsedProperties,\n      i18nAttrsMeta,\n    } = this.prepareAttributes(component.attrs, false);\n\n    this.validateSelectorlessReferences(references);\n\n    const directives = this.extractDirectives(component);\n    let children: t.Node[];\n\n    if (component.attrs.find((attr) => attr.name === 'ngNonBindable')) {\n      // The `NonBindableVisitor` may need to return an array of nodes for blocks so we need\n      // to flatten the array here. Avoid doing this for the `HtmlAstToIvyAst` since `flat` creates\n      // a new array.\n      children = html.visitAll(NON_BINDABLE_VISITOR, component.children).flat(Infinity);\n    } else {\n      children = html.visitAll(this, component.children, component.children);\n    }\n\n    const attrs = this.categorizePropertyAttributes(\n      component.tagName,\n      parsedProperties,\n      i18nAttrsMeta,\n    );\n\n    let node: t.Component | t.Template = new t.Component(\n      component.componentName,\n      component.tagName,\n      component.fullName,\n      attributes,\n      attrs.bound,\n      boundEvents,\n      directives,\n      children,\n      references,\n      component.isSelfClosing,\n      component.sourceSpan,\n      component.startSourceSpan,\n      component.endSourceSpan,\n      component.i18n,\n    );\n\n    if (elementHasInlineTemplate) {\n      node = this.wrapInTemplate(\n        node,\n        templateParsedProperties,\n        templateVariables,\n        i18nAttrsMeta,\n        false,\n        isI18nRootElement,\n      );\n    }\n    if (isI18nRootElement) {\n      this.inI18nBlock = false;\n    }\n    return node;\n  }\n\n  visitDirective() {\n    return null;\n  }\n\n  visitBlockParameter() {\n    return null;\n  }\n\n  visitBlock(block: html.Block, context: html.Node[]) {\n    const index = Array.isArray(context) ? context.indexOf(block) : -1;\n\n    if (index === -1) {\n      throw new Error(\n        'Visitor invoked incorrectly. Expecting visitBlock to be invoked siblings array as its context',\n      );\n    }\n\n    // Connected blocks may have been processed as a part of the previous block.\n    if (this.processedNodes.has(block)) {\n      return null;\n    }\n\n    let result: {node: t.Node | null; errors: ParseError[]} | null = null;\n\n    switch (block.name) {\n      case 'defer':\n        result = createDeferredBlock(\n          block,\n          this.findConnectedBlocks(index, context, isConnectedDeferLoopBlock),\n          this,\n          this.bindingParser,\n        );\n        break;\n\n      case 'switch':\n        result = createSwitchBlock(block, this, this.bindingParser);\n        break;\n\n      case 'for':\n        result = createForLoop(\n          block,\n          this.findConnectedBlocks(index, context, isConnectedForLoopBlock),\n          this,\n          this.bindingParser,\n        );\n        break;\n\n      case 'if':\n        result = createIfBlock(\n          block,\n          this.findConnectedBlocks(index, context, isConnectedIfLoopBlock),\n          this,\n          this.bindingParser,\n        );\n        break;\n\n      default:\n        let errorMessage: string;\n\n        if (isConnectedDeferLoopBlock(block.name)) {\n          errorMessage = `@${block.name} block can only be used after an @defer block.`;\n          this.processedNodes.add(block);\n        } else if (isConnectedForLoopBlock(block.name)) {\n          errorMessage = `@${block.name} block can only be used after an @for block.`;\n          this.processedNodes.add(block);\n        } else if (isConnectedIfLoopBlock(block.name)) {\n          errorMessage = `@${block.name} block can only be used after an @if or @else if block.`;\n          this.processedNodes.add(block);\n        } else {\n          errorMessage = `Unrecognized block @${block.name}.`;\n        }\n\n        result = {\n          node: new t.UnknownBlock(block.name, block.sourceSpan, block.nameSpan),\n          errors: [new ParseError(block.sourceSpan, errorMessage)],\n        };\n        break;\n    }\n\n    this.errors.push(...result.errors);\n    return result.node;\n  }\n\n  private findConnectedBlocks(\n    primaryBlockIndex: number,\n    siblings: html.Node[],\n    predicate: (blockName: string) => boolean,\n  ): html.Block[] {\n    const relatedBlocks: html.Block[] = [];\n\n    for (let i = primaryBlockIndex + 1; i < siblings.length; i++) {\n      const node = siblings[i];\n\n      // Skip over comments.\n      if (node instanceof html.Comment) {\n        continue;\n      }\n\n      // Ignore empty text nodes between blocks.\n      if (node instanceof html.Text && node.value.trim().length === 0) {\n        // Add the text node to the processed nodes since we don't want\n        // it to be generated between the connected nodes.\n        this.processedNodes.add(node);\n        continue;\n      }\n\n      // Stop searching as soon as we hit a non-block node or a block that is unrelated.\n      if (!(node instanceof html.Block) || !predicate(node.name)) {\n        break;\n      }\n\n      relatedBlocks.push(node);\n      this.processedNodes.add(node);\n    }\n\n    return relatedBlocks;\n  }\n\n  /** Splits up the property attributes depending on whether they're static or bound. */\n  private categorizePropertyAttributes(\n    elementName: string | null,\n    properties: ParsedProperty[],\n    i18nPropsMeta: {[key: string]: i18n.I18nMeta},\n  ): {bound: t.BoundAttribute[]; literal: t.TextAttribute[]} {\n    const bound: t.BoundAttribute[] = [];\n    const literal: t.TextAttribute[] = [];\n\n    properties.forEach((prop) => {\n      const i18n = i18nPropsMeta[prop.name];\n      if (prop.isLiteral) {\n        literal.push(\n          new t.TextAttribute(\n            prop.name,\n            prop.expression.source || '',\n            prop.sourceSpan,\n            prop.keySpan,\n            prop.valueSpan,\n            i18n,\n          ),\n        );\n      } else {\n        // Note that validation is skipped and property mapping is disabled\n        // due to the fact that we need to make sure a given prop is not an\n        // input of a directive and directive matching happens at runtime.\n        const bep = this.bindingParser.createBoundElementProperty(\n          elementName,\n          prop,\n          /* skipValidation */ true,\n          /* mapPropertyName */ false,\n        );\n        bound.push(t.BoundAttribute.fromBoundElementProperty(bep, i18n));\n      }\n    });\n\n    return {bound, literal};\n  }\n\n  private prepareAttributes(attrs: html.Attribute[], isTemplateElement: boolean) {\n    const parsedProperties: ParsedProperty[] = [];\n    const boundEvents: t.BoundEvent[] = [];\n    const variables: t.Variable[] = [];\n    const references: t.Reference[] = [];\n    const attributes: t.TextAttribute[] = [];\n    const i18nAttrsMeta: Record<string, i18n.I18nMeta> = {};\n    const templateParsedProperties: ParsedProperty[] = [];\n    const templateVariables: t.Variable[] = [];\n\n    // Whether the element has any *-attribute\n    let elementHasInlineTemplate = false;\n\n    for (const attribute of attrs) {\n      let hasBinding = false;\n      const normalizedName = normalizeAttributeName(attribute.name);\n\n      // `*attr` defines template bindings\n      let isTemplateBinding = false;\n\n      if (attribute.i18n) {\n        i18nAttrsMeta[attribute.name] = attribute.i18n;\n      }\n\n      if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n        // *-attributes\n        if (elementHasInlineTemplate) {\n          this.reportError(\n            `Can't have multiple template bindings on one element. Use only one attribute prefixed with *`,\n            attribute.sourceSpan,\n          );\n        }\n        isTemplateBinding = true;\n        elementHasInlineTemplate = true;\n        const templateValue = attribute.value;\n        const templateKey = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length);\n\n        const parsedVariables: ParsedVariable[] = [];\n        const absoluteValueOffset = attribute.valueSpan\n          ? attribute.valueSpan.fullStart.offset\n          : // If there is no value span the attribute does not have a value, like `attr` in\n            //`<div attr></div>`. In this case, point to one character beyond the last character of\n            // the attribute name.\n            attribute.sourceSpan.fullStart.offset + attribute.name.length;\n\n        this.bindingParser.parseInlineTemplateBinding(\n          templateKey,\n          templateValue,\n          attribute.sourceSpan,\n          absoluteValueOffset,\n          [],\n          templateParsedProperties,\n          parsedVariables,\n          true /* isIvyAst */,\n        );\n        templateVariables.push(\n          ...parsedVariables.map(\n            (v) => new t.Variable(v.name, v.value, v.sourceSpan, v.keySpan, v.valueSpan),\n          ),\n        );\n      } else {\n        // Check for variables, events, property bindings, interpolation\n        hasBinding = this.parseAttribute(\n          isTemplateElement,\n          attribute,\n          [],\n          parsedProperties,\n          boundEvents,\n          variables,\n          references,\n        );\n      }\n\n      if (!hasBinding && !isTemplateBinding) {\n        // don't include the bindings as attributes as well in the AST\n        attributes.push(this.visitAttribute(attribute));\n      }\n    }\n\n    return {\n      attributes,\n      boundEvents,\n      references,\n      variables,\n      templateVariables,\n      elementHasInlineTemplate,\n      parsedProperties,\n      templateParsedProperties,\n      i18nAttrsMeta,\n    };\n  }\n\n  private parseAttribute(\n    isTemplateElement: boolean,\n    attribute: html.Attribute,\n    matchableAttributes: string[][],\n    parsedProperties: ParsedProperty[],\n    boundEvents: t.BoundEvent[],\n    variables: t.Variable[],\n    references: t.Reference[],\n  ) {\n    const name = normalizeAttributeName(attribute.name);\n    const value = attribute.value;\n    const srcSpan = attribute.sourceSpan;\n    const absoluteOffset = attribute.valueSpan\n      ? attribute.valueSpan.fullStart.offset\n      : srcSpan.fullStart.offset;\n\n    function createKeySpan(srcSpan: ParseSourceSpan, prefix: string, identifier: string) {\n      // We need to adjust the start location for the keySpan to account for the removed 'data-'\n      // prefix from `normalizeAttributeName`.\n      const normalizationAdjustment = attribute.name.length - name.length;\n      const keySpanStart = srcSpan.start.moveBy(prefix.length + normalizationAdjustment);\n      const keySpanEnd = keySpanStart.moveBy(identifier.length);\n      return new ParseSourceSpan(keySpanStart, keySpanEnd, keySpanStart, identifier);\n    }\n\n    const bindParts = name.match(BIND_NAME_REGEXP);\n\n    if (bindParts) {\n      if (bindParts[KW_BIND_IDX] != null) {\n        const identifier = bindParts[IDENT_KW_IDX];\n        const keySpan = createKeySpan(srcSpan, bindParts[KW_BIND_IDX], identifier);\n        this.bindingParser.parsePropertyBinding(\n          identifier,\n          value,\n          false,\n          false,\n          srcSpan,\n          absoluteOffset,\n          attribute.valueSpan,\n          matchableAttributes,\n          parsedProperties,\n          keySpan,\n        );\n      } else if (bindParts[KW_LET_IDX]) {\n        if (isTemplateElement) {\n          const identifier = bindParts[IDENT_KW_IDX];\n          const keySpan = createKeySpan(srcSpan, bindParts[KW_LET_IDX], identifier);\n          this.parseVariable(identifier, value, srcSpan, keySpan, attribute.valueSpan, variables);\n        } else {\n          this.reportError(`\"let-\" is only supported on ng-template elements.`, srcSpan);\n        }\n      } else if (bindParts[KW_REF_IDX]) {\n        const identifier = bindParts[IDENT_KW_IDX];\n        const keySpan = createKeySpan(srcSpan, bindParts[KW_REF_IDX], identifier);\n        this.parseReference(identifier, value, srcSpan, keySpan, attribute.valueSpan, references);\n      } else if (bindParts[KW_ON_IDX]) {\n        const events: ParsedEvent[] = [];\n        const identifier = bindParts[IDENT_KW_IDX];\n        const keySpan = createKeySpan(srcSpan, bindParts[KW_ON_IDX], identifier);\n        this.bindingParser.parseEvent(\n          identifier,\n          value,\n          /* isAssignmentEvent */ false,\n          srcSpan,\n          attribute.valueSpan || srcSpan,\n          matchableAttributes,\n          events,\n          keySpan,\n        );\n        addEvents(events, boundEvents);\n      } else if (bindParts[KW_BINDON_IDX]) {\n        const identifier = bindParts[IDENT_KW_IDX];\n        const keySpan = createKeySpan(srcSpan, bindParts[KW_BINDON_IDX], identifier);\n        this.bindingParser.parsePropertyBinding(\n          identifier,\n          value,\n          false,\n          true,\n          srcSpan,\n          absoluteOffset,\n          attribute.valueSpan,\n          matchableAttributes,\n          parsedProperties,\n          keySpan,\n        );\n        this.parseAssignmentEvent(\n          identifier,\n          value,\n          srcSpan,\n          attribute.valueSpan,\n          matchableAttributes,\n          boundEvents,\n          keySpan,\n          absoluteOffset,\n        );\n      } else if (bindParts[KW_AT_IDX]) {\n        const keySpan = createKeySpan(srcSpan, '', name);\n        this.bindingParser.parseLiteralAttr(\n          name,\n          value,\n          srcSpan,\n          absoluteOffset,\n          attribute.valueSpan,\n          matchableAttributes,\n          parsedProperties,\n          keySpan,\n        );\n      }\n      return true;\n    }\n\n    // We didn't see a kw-prefixed property binding, but we have not yet checked\n    // for the []/()/[()] syntax.\n    let delims: {start: string; end: string} | null = null;\n    if (name.startsWith(BINDING_DELIMS.BANANA_BOX.start)) {\n      delims = BINDING_DELIMS.BANANA_BOX;\n    } else if (name.startsWith(BINDING_DELIMS.PROPERTY.start)) {\n      delims = BINDING_DELIMS.PROPERTY;\n    } else if (name.startsWith(BINDING_DELIMS.EVENT.start)) {\n      delims = BINDING_DELIMS.EVENT;\n    }\n    if (\n      delims !== null &&\n      // NOTE: older versions of the parser would match a start/end delimited\n      // binding iff the property name was terminated by the ending delimiter\n      // and the identifier in the binding was non-empty.\n      // TODO(ayazhafiz): update this to handle malformed bindings.\n      name.endsWith(delims.end) &&\n      name.length > delims.start.length + delims.end.length\n    ) {\n      const identifier = name.substring(delims.start.length, name.length - delims.end.length);\n      const keySpan = createKeySpan(srcSpan, delims.start, identifier);\n      if (delims.start === BINDING_DELIMS.BANANA_BOX.start) {\n        this.bindingParser.parsePropertyBinding(\n          identifier,\n          value,\n          false,\n          true,\n          srcSpan,\n          absoluteOffset,\n          attribute.valueSpan,\n          matchableAttributes,\n          parsedProperties,\n          keySpan,\n        );\n        this.parseAssignmentEvent(\n          identifier,\n          value,\n          srcSpan,\n          attribute.valueSpan,\n          matchableAttributes,\n          boundEvents,\n          keySpan,\n          absoluteOffset,\n        );\n      } else if (delims.start === BINDING_DELIMS.PROPERTY.start) {\n        this.bindingParser.parsePropertyBinding(\n          identifier,\n          value,\n          false,\n          false,\n          srcSpan,\n          absoluteOffset,\n          attribute.valueSpan,\n          matchableAttributes,\n          parsedProperties,\n          keySpan,\n        );\n      } else {\n        const events: ParsedEvent[] = [];\n        this.bindingParser.parseEvent(\n          identifier,\n          value,\n          /* isAssignmentEvent */ false,\n          srcSpan,\n          attribute.valueSpan || srcSpan,\n          matchableAttributes,\n          events,\n          keySpan,\n        );\n        addEvents(events, boundEvents);\n      }\n\n      return true;\n    }\n\n    // No explicit binding found.\n    const keySpan = createKeySpan(srcSpan, '' /* prefix */, name);\n    const hasBinding = this.bindingParser.parsePropertyInterpolation(\n      name,\n      value,\n      srcSpan,\n      attribute.valueSpan,\n      matchableAttributes,\n      parsedProperties,\n      keySpan,\n      attribute.valueTokens ?? null,\n    );\n    return hasBinding;\n  }\n\n  private extractDirectives(node: html.Element | html.Component): t.Directive[] {\n    const elementName = node instanceof html.Component ? node.tagName : node.name;\n    const directives: t.Directive[] = [];\n    const seenDirectives = new Set<string>();\n\n    for (const directive of node.directives) {\n      let invalid = false;\n\n      for (const attr of directive.attrs) {\n        if (attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n          invalid = true;\n          this.reportError(\n            `Shorthand template syntax \"${attr.name}\" is not supported inside a directive context`,\n            attr.sourceSpan,\n          );\n        } else if (UNSUPPORTED_SELECTORLESS_DIRECTIVE_ATTRS.has(attr.name)) {\n          invalid = true;\n          this.reportError(\n            `Attribute \"${attr.name}\" is not supported in a directive context`,\n            attr.sourceSpan,\n          );\n        }\n      }\n\n      if (!invalid && seenDirectives.has(directive.name)) {\n        invalid = true;\n        this.reportError(\n          `Cannot apply directive \"${directive.name}\" multiple times on the same element`,\n          directive.sourceSpan,\n        );\n      }\n\n      if (invalid) {\n        continue;\n      }\n\n      const {attributes, parsedProperties, boundEvents, references, i18nAttrsMeta} =\n        this.prepareAttributes(directive.attrs, false);\n      this.validateSelectorlessReferences(references);\n\n      const {bound: inputs} = this.categorizePropertyAttributes(\n        elementName,\n        parsedProperties,\n        i18nAttrsMeta,\n      );\n\n      for (const input of inputs) {\n        if (input.type !== BindingType.Property && input.type !== BindingType.TwoWay) {\n          invalid = true;\n          this.reportError('Binding is not supported in a directive context', input.sourceSpan);\n        }\n      }\n\n      if (invalid) {\n        continue;\n      }\n\n      seenDirectives.add(directive.name);\n      directives.push(\n        new t.Directive(\n          directive.name,\n          attributes,\n          inputs,\n          boundEvents,\n          references,\n          directive.sourceSpan,\n          directive.startSourceSpan,\n          directive.endSourceSpan,\n          undefined,\n        ),\n      );\n    }\n\n    return directives;\n  }\n\n  private filterAnimationAttributes(attributes: t.TextAttribute[]): t.TextAttribute[] {\n    return attributes.filter((a) => !a.name.startsWith('animate.'));\n  }\n\n  private filterAnimationInputs(attributes: t.BoundAttribute[]): t.BoundAttribute[] {\n    return attributes.filter((a) => a.type !== BindingType.Animation);\n  }\n\n  private wrapInTemplate(\n    node: t.Element | t.Component | t.Content | t.Template,\n    templateProperties: ParsedProperty[],\n    templateVariables: t.Variable[],\n    i18nAttrsMeta: Record<string, i18n.I18nMeta>,\n    isTemplateElement: boolean,\n    isI18nRootElement: boolean,\n  ) {\n    // We need to hoist the attributes of the node to the template for content projection purposes.\n    const attrs = this.categorizePropertyAttributes(\n      'ng-template',\n      templateProperties,\n      i18nAttrsMeta,\n    );\n    const templateAttrs: (t.TextAttribute | t.BoundAttribute)[] = [];\n    attrs.literal.forEach((attr) => templateAttrs.push(attr));\n    attrs.bound.forEach((attr) => templateAttrs.push(attr));\n\n    const hoistedAttrs = {\n      attributes: [] as t.TextAttribute[],\n      inputs: [] as t.BoundAttribute[],\n      outputs: [] as t.BoundEvent[],\n    };\n\n    if (node instanceof t.Element || node instanceof t.Component) {\n      hoistedAttrs.attributes.push(...this.filterAnimationAttributes(node.attributes));\n      hoistedAttrs.inputs.push(...this.filterAnimationInputs(node.inputs));\n      hoistedAttrs.outputs.push(...node.outputs);\n    }\n\n    // For <ng-template>s with structural directives on them, avoid passing i18n information to\n    // the wrapping template to prevent unnecessary i18n instructions from being generated. The\n    // necessary i18n meta information will be extracted from child elements.\n    const i18n = isTemplateElement && isI18nRootElement ? undefined : node.i18n;\n    let name: string | null;\n\n    if (node instanceof t.Component) {\n      name = node.tagName;\n    } else if (node instanceof t.Template) {\n      name = null;\n    } else {\n      name = node.name;\n    }\n\n    return new t.Template(\n      name,\n      hoistedAttrs.attributes,\n      hoistedAttrs.inputs,\n      hoistedAttrs.outputs,\n      [\n        // Do not copy over the directives.\n      ],\n      templateAttrs,\n      [node],\n      [\n        // Do not copy over the references.\n      ],\n      templateVariables,\n      false,\n      node.sourceSpan,\n      node.startSourceSpan,\n      node.endSourceSpan,\n      i18n,\n    );\n  }\n\n  private _visitTextWithInterpolation(\n    value: string,\n    sourceSpan: ParseSourceSpan,\n    interpolatedTokens: InterpolatedAttributeToken[] | InterpolatedTextToken[] | null,\n    i18n?: i18n.I18nMeta,\n  ): t.Text | t.BoundText {\n    const valueNoNgsp = replaceNgsp(value);\n    const expr = this.bindingParser.parseInterpolation(valueNoNgsp, sourceSpan, interpolatedTokens);\n    return expr ? new t.BoundText(expr, sourceSpan, i18n) : new t.Text(valueNoNgsp, sourceSpan);\n  }\n\n  private parseVariable(\n    identifier: string,\n    value: string,\n    sourceSpan: ParseSourceSpan,\n    keySpan: ParseSourceSpan,\n    valueSpan: ParseSourceSpan | undefined,\n    variables: t.Variable[],\n  ) {\n    if (identifier.indexOf('-') > -1) {\n      this.reportError(`\"-\" is not allowed in variable names`, sourceSpan);\n    } else if (identifier.length === 0) {\n      this.reportError(`Variable does not have a name`, sourceSpan);\n    }\n\n    variables.push(new t.Variable(identifier, value, sourceSpan, keySpan, valueSpan));\n  }\n\n  private parseReference(\n    identifier: string,\n    value: string,\n    sourceSpan: ParseSourceSpan,\n    keySpan: ParseSourceSpan,\n    valueSpan: ParseSourceSpan | undefined,\n    references: t.Reference[],\n  ) {\n    if (identifier.indexOf('-') > -1) {\n      this.reportError(`\"-\" is not allowed in reference names`, sourceSpan);\n    } else if (identifier.length === 0) {\n      this.reportError(`Reference does not have a name`, sourceSpan);\n    } else if (references.some((reference) => reference.name === identifier)) {\n      this.reportError(`Reference \"#${identifier}\" is defined more than once`, sourceSpan);\n    }\n\n    references.push(new t.Reference(identifier, value, sourceSpan, keySpan, valueSpan));\n  }\n\n  private parseAssignmentEvent(\n    name: string,\n    expression: string,\n    sourceSpan: ParseSourceSpan,\n    valueSpan: ParseSourceSpan | undefined,\n    targetMatchableAttrs: string[][],\n    boundEvents: t.BoundEvent[],\n    keySpan: ParseSourceSpan,\n    absoluteOffset: number,\n  ) {\n    const events: ParsedEvent[] = [];\n    this.bindingParser.parseEvent(\n      `${name}Change`,\n      expression,\n      /* isAssignmentEvent */ true,\n      sourceSpan,\n      valueSpan || sourceSpan,\n      targetMatchableAttrs,\n      events,\n      keySpan,\n    );\n    addEvents(events, boundEvents);\n  }\n\n  private validateSelectorlessReferences(references: t.Reference[]): void {\n    if (references.length === 0) {\n      return;\n    }\n\n    const seenNames = new Set<string>();\n\n    for (const ref of references) {\n      if (ref.value.length > 0) {\n        this.reportError(\n          'Cannot specify a value for a local reference in this context',\n          ref.valueSpan || ref.sourceSpan,\n        );\n      } else if (seenNames.has(ref.name)) {\n        this.reportError('Duplicate reference names are not allowed', ref.sourceSpan);\n      } else {\n        seenNames.add(ref.name);\n      }\n    }\n  }\n\n  private reportError(\n    message: string,\n    sourceSpan: ParseSourceSpan,\n    level: ParseErrorLevel = ParseErrorLevel.ERROR,\n  ) {\n    this.errors.push(new ParseError(sourceSpan, message, level));\n  }\n}\n\nclass NonBindableVisitor implements html.Visitor {\n  visitElement(ast: html.Element): t.Element | null {\n    const preparsedElement = preparseElement(ast);\n    if (\n      preparsedElement.type === PreparsedElementType.SCRIPT ||\n      preparsedElement.type === PreparsedElementType.STYLE ||\n      preparsedElement.type === PreparsedElementType.STYLESHEET\n    ) {\n      // Skipping <script> for security reasons\n      // Skipping <style> and stylesheets as we already processed them\n      // in the StyleCompiler\n      return null;\n    }\n\n    const children: t.Node[] = html.visitAll(this, ast.children, null);\n    return new t.Element(\n      ast.name,\n      html.visitAll(this, ast.attrs) as t.TextAttribute[],\n      /* inputs */ [],\n      /* outputs */ [],\n      /* directives */ [],\n      children,\n      /* references */ [],\n      ast.isSelfClosing,\n      ast.sourceSpan,\n      ast.startSourceSpan,\n      ast.endSourceSpan,\n      ast.isVoid,\n    );\n  }\n\n  visitComment(comment: html.Comment): any {\n    return null;\n  }\n\n  visitAttribute(attribute: html.Attribute): t.TextAttribute {\n    return new t.TextAttribute(\n      attribute.name,\n      attribute.value,\n      attribute.sourceSpan,\n      attribute.keySpan,\n      attribute.valueSpan,\n      attribute.i18n,\n    );\n  }\n\n  visitText(text: html.Text): t.Text {\n    return new t.Text(text.value, text.sourceSpan);\n  }\n\n  visitExpansion(expansion: html.Expansion): any {\n    return null;\n  }\n\n  visitExpansionCase(expansionCase: html.ExpansionCase): any {\n    return null;\n  }\n\n  visitBlock(block: html.Block, context: any) {\n    const nodes = [\n      // In an ngNonBindable context we treat the opening/closing tags of block as plain text.\n      // This is the as if the `tokenizeBlocks` option was disabled.\n      new t.Text(block.startSourceSpan.toString(), block.startSourceSpan),\n      ...html.visitAll(this, block.children),\n    ];\n\n    if (block.endSourceSpan !== null) {\n      nodes.push(new t.Text(block.endSourceSpan.toString(), block.endSourceSpan));\n    }\n\n    return nodes;\n  }\n\n  visitBlockParameter(parameter: html.BlockParameter, context: any) {\n    return null;\n  }\n\n  visitLetDeclaration(decl: html.LetDeclaration, context: any) {\n    return new t.Text(`@let ${decl.name} = ${decl.value};`, decl.sourceSpan);\n  }\n\n  visitComponent(ast: html.Component, context: any) {\n    const children: t.Node[] = html.visitAll(this, ast.children, null);\n    return new t.Element(\n      ast.fullName,\n      html.visitAll(this, ast.attrs) as t.TextAttribute[],\n      /* inputs */ [],\n      /* outputs */ [],\n      /* directives */ [],\n      children,\n      /* references */ [],\n      ast.isSelfClosing,\n      ast.sourceSpan,\n      ast.startSourceSpan,\n      ast.endSourceSpan,\n      false,\n    );\n  }\n\n  visitDirective(directive: html.Directive, context: any) {\n    return null;\n  }\n}\n\nconst NON_BINDABLE_VISITOR = new NonBindableVisitor();\n\nfunction normalizeAttributeName(attrName: string): string {\n  return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n}\n\nfunction addEvents(events: ParsedEvent[], boundEvents: t.BoundEvent[]) {\n  boundEvents.push(...events.map((e) => t.BoundEvent.fromParsedEvent(e)));\n}\n\nfunction textContents(node: html.Element): string | null {\n  if (node.children.length !== 1 || !(node.children[0] instanceof html.Text)) {\n    return null;\n  } else {\n    return (node.children[0] as html.Text).value;\n  }\n}\n"]}