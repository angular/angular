{"version":3,"file":"directive.js","sourceRoot":"","sources":["directive.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\nimport * as o from '../../output/output_ast';\nimport {Identifiers as R3} from '../r3_identifiers';\nimport {\n  convertFromMaybeForwardRefExpression,\n  generateForwardRef,\n  R3CompiledExpression,\n} from '../util';\nimport {R3DirectiveMetadata, R3HostMetadata, R3QueryMetadata} from '../view/api';\nimport {createDirectiveType, createHostDirectivesMappingArray} from '../view/compiler';\nimport {\n  asLiteral,\n  conditionallyCreateDirectiveBindingLiteral,\n  DefinitionMap,\n  UNSAFE_OBJECT_KEY_NAME_REGEXP,\n} from '../view/util';\n\nimport {R3DeclareDirectiveMetadata, R3DeclareQueryMetadata} from './api';\nimport {toOptionalLiteralMap} from './util';\n\n/**\n * Compile a directive declaration defined by the `R3DirectiveMetadata`.\n */\nexport function compileDeclareDirectiveFromMetadata(\n  meta: R3DirectiveMetadata,\n): R3CompiledExpression {\n  const definitionMap = createDirectiveDefinitionMap(meta);\n\n  const expression = o.importExpr(R3.declareDirective).callFn([definitionMap.toLiteralMap()]);\n  const type = createDirectiveType(meta);\n\n  return {expression, type, statements: []};\n}\n\n/**\n * Gathers the declaration fields for a directive into a `DefinitionMap`. This allows for reusing\n * this logic for components, as they extend the directive metadata.\n */\nexport function createDirectiveDefinitionMap(\n  meta: R3DirectiveMetadata,\n): DefinitionMap<R3DeclareDirectiveMetadata> {\n  const definitionMap = new DefinitionMap<R3DeclareDirectiveMetadata>();\n  const minVersion = getMinimumVersionForPartialOutput(meta);\n\n  definitionMap.set('minVersion', o.literal(minVersion));\n  definitionMap.set('version', o.literal('0.0.0-PLACEHOLDER'));\n\n  // e.g. `type: MyDirective`\n  definitionMap.set('type', meta.type.value);\n\n  if (meta.isStandalone !== undefined) {\n    definitionMap.set('isStandalone', o.literal(meta.isStandalone));\n  }\n  if (meta.isSignal) {\n    definitionMap.set('isSignal', o.literal(meta.isSignal));\n  }\n\n  // e.g. `selector: 'some-dir'`\n  if (meta.selector !== null) {\n    definitionMap.set('selector', o.literal(meta.selector));\n  }\n\n  definitionMap.set(\n    'inputs',\n    needsNewInputPartialOutput(meta)\n      ? createInputsPartialMetadata(meta.inputs)\n      : legacyInputsPartialMetadata(meta.inputs),\n  );\n  definitionMap.set('outputs', conditionallyCreateDirectiveBindingLiteral(meta.outputs));\n\n  definitionMap.set('host', compileHostMetadata(meta.host));\n\n  definitionMap.set('providers', meta.providers);\n\n  if (meta.queries.length > 0) {\n    definitionMap.set('queries', o.literalArr(meta.queries.map(compileQuery)));\n  }\n\n  if (meta.viewQueries.length > 0) {\n    definitionMap.set('viewQueries', o.literalArr(meta.viewQueries.map(compileQuery)));\n  }\n\n  if (meta.exportAs !== null) {\n    definitionMap.set('exportAs', asLiteral(meta.exportAs));\n  }\n\n  if (meta.usesInheritance) {\n    definitionMap.set('usesInheritance', o.literal(true));\n  }\n\n  if (meta.lifecycle.usesOnChanges) {\n    definitionMap.set('usesOnChanges', o.literal(true));\n  }\n\n  if (meta.hostDirectives?.length) {\n    definitionMap.set('hostDirectives', createHostDirectives(meta.hostDirectives));\n  }\n\n  definitionMap.set('ngImport', o.importExpr(R3.core));\n\n  return definitionMap;\n}\n\n/**\n * Determines the minimum linker version for the partial output\n * generated for this directive.\n *\n * Every time we make a breaking change to the declaration interface or partial-linker\n * behavior, we must update the minimum versions to prevent old partial-linkers from\n * incorrectly processing the declaration.\n *\n * NOTE: Do not include any prerelease in these versions as they are ignored.\n */\nfunction getMinimumVersionForPartialOutput(meta: R3DirectiveMetadata): string {\n  // We are starting with the oldest minimum version that can work for common\n  // directive partial compilation output. As we discover usages of new features\n  // that require a newer partial output emit, we bump the `minVersion`. Our goal\n  // is to keep libraries as much compatible with older linker versions as possible.\n  let minVersion = '14.0.0';\n\n  // Note: in order to allow consuming Angular libraries that have been compiled with 16.1+ in\n  // Angular 16.0, we only force a minimum version of 16.1 if input transform feature as introduced\n  // in 16.1 is actually used.\n  const hasDecoratorTransformFunctions = Object.values(meta.inputs).some(\n    (input) => input.transformFunction !== null,\n  );\n  if (hasDecoratorTransformFunctions) {\n    minVersion = '16.1.0';\n  }\n\n  // If there are input flags and we need the new emit, use the actual minimum version,\n  // where this was introduced. i.e. in 17.1.0\n  // TODO(legacy-partial-output-inputs): Remove in v18.\n  if (needsNewInputPartialOutput(meta)) {\n    minVersion = '17.1.0';\n  }\n\n  // If there are signal-based queries, partial output generates an extra field\n  // that should be parsed by linkers. Ensure a proper minimum linker version.\n  if (meta.queries.some((q) => q.isSignal) || meta.viewQueries.some((q) => q.isSignal)) {\n    minVersion = '17.2.0';\n  }\n\n  return minVersion;\n}\n\n/**\n * Gets whether the given directive needs the new input partial output structure\n * that can hold additional metadata like `isRequired`, `isSignal` etc.\n */\nfunction needsNewInputPartialOutput(meta: R3DirectiveMetadata): boolean {\n  return Object.values(meta.inputs).some((input) => input.isSignal);\n}\n\n/**\n * Compiles the metadata of a single query into its partial declaration form as declared\n * by `R3DeclareQueryMetadata`.\n */\nfunction compileQuery(query: R3QueryMetadata): o.LiteralMapExpr {\n  const meta = new DefinitionMap<R3DeclareQueryMetadata>();\n  meta.set('propertyName', o.literal(query.propertyName));\n  if (query.first) {\n    meta.set('first', o.literal(true));\n  }\n  meta.set(\n    'predicate',\n    Array.isArray(query.predicate)\n      ? asLiteral(query.predicate)\n      : convertFromMaybeForwardRefExpression(query.predicate),\n  );\n  if (!query.emitDistinctChangesOnly) {\n    // `emitDistinctChangesOnly` is special because we expect it to be `true`.\n    // Therefore we explicitly emit the field, and explicitly place it only when it's `false`.\n    meta.set('emitDistinctChangesOnly', o.literal(false));\n  } else {\n    // The linker will assume that an absent `emitDistinctChangesOnly` flag is by default `true`.\n  }\n  if (query.descendants) {\n    meta.set('descendants', o.literal(true));\n  }\n  meta.set('read', query.read);\n  if (query.static) {\n    meta.set('static', o.literal(true));\n  }\n  if (query.isSignal) {\n    meta.set('isSignal', o.literal(true));\n  }\n  return meta.toLiteralMap();\n}\n\n/**\n * Compiles the host metadata into its partial declaration form as declared\n * in `R3DeclareDirectiveMetadata['host']`\n */\nfunction compileHostMetadata(meta: R3HostMetadata): o.LiteralMapExpr | null {\n  const hostMetadata = new DefinitionMap<NonNullable<R3DeclareDirectiveMetadata['host']>>();\n  hostMetadata.set(\n    'attributes',\n    toOptionalLiteralMap(meta.attributes, (expression) => expression),\n  );\n  hostMetadata.set('listeners', toOptionalLiteralMap(meta.listeners, o.literal));\n  hostMetadata.set('properties', toOptionalLiteralMap(meta.properties, o.literal));\n\n  if (meta.specialAttributes.styleAttr) {\n    hostMetadata.set('styleAttribute', o.literal(meta.specialAttributes.styleAttr));\n  }\n  if (meta.specialAttributes.classAttr) {\n    hostMetadata.set('classAttribute', o.literal(meta.specialAttributes.classAttr));\n  }\n\n  if (hostMetadata.values.length > 0) {\n    return hostMetadata.toLiteralMap();\n  } else {\n    return null;\n  }\n}\n\nfunction createHostDirectives(\n  hostDirectives: NonNullable<R3DirectiveMetadata['hostDirectives']>,\n): o.LiteralArrayExpr {\n  const expressions = hostDirectives.map((current) => {\n    const keys = [\n      {\n        key: 'directive',\n        value: current.isForwardReference\n          ? generateForwardRef(current.directive.type)\n          : current.directive.type,\n        quoted: false,\n      },\n    ];\n    const inputsLiteral = current.inputs ? createHostDirectivesMappingArray(current.inputs) : null;\n    const outputsLiteral = current.outputs\n      ? createHostDirectivesMappingArray(current.outputs)\n      : null;\n\n    if (inputsLiteral) {\n      keys.push({key: 'inputs', value: inputsLiteral, quoted: false});\n    }\n\n    if (outputsLiteral) {\n      keys.push({key: 'outputs', value: outputsLiteral, quoted: false});\n    }\n\n    return o.literalMap(keys);\n  });\n\n  // If there's a forward reference, we generate a `function() { return [{directive: HostDir}] }`,\n  // otherwise we can save some bytes by using a plain array, e.g. `[{directive: HostDir}]`.\n  return o.literalArr(expressions);\n}\n\n/**\n * Generates partial output metadata for inputs of a directive.\n *\n * The generated structure is expected to match `R3DeclareDirectiveFacade['inputs']`.\n */\nfunction createInputsPartialMetadata(inputs: R3DirectiveMetadata['inputs']): o.Expression | null {\n  const keys = Object.getOwnPropertyNames(inputs);\n  if (keys.length === 0) {\n    return null;\n  }\n\n  return o.literalMap(\n    keys.map((declaredName) => {\n      const value = inputs[declaredName];\n\n      return {\n        key: declaredName,\n        // put quotes around keys that contain potentially unsafe characters\n        quoted: UNSAFE_OBJECT_KEY_NAME_REGEXP.test(declaredName),\n        value: o.literalMap([\n          {key: 'classPropertyName', quoted: false, value: asLiteral(value.classPropertyName)},\n          {key: 'publicName', quoted: false, value: asLiteral(value.bindingPropertyName)},\n          {key: 'isSignal', quoted: false, value: asLiteral(value.isSignal)},\n          {key: 'isRequired', quoted: false, value: asLiteral(value.required)},\n          {key: 'transformFunction', quoted: false, value: value.transformFunction ?? o.NULL_EXPR},\n        ]),\n      };\n    }),\n  );\n}\n\n/**\n * Pre v18 legacy partial output for inputs.\n *\n * Previously, inputs did not capture metadata like `isSignal` in the partial compilation output.\n * To enable capturing such metadata, we restructured how input metadata is communicated in the\n * partial output. This would make libraries incompatible with older Angular FW versions where the\n * linker would not know how to handle this new \"format\". For this reason, if we know this metadata\n * does not need to be captured- we fall back to the old format. This is what this function\n * generates.\n *\n * See:\n * https://github.com/angular/angular/blob/d4b423690210872b5c32a322a6090beda30b05a3/packages/core/src/compiler/compiler_facade_interface.ts#L197-L199\n */\nfunction legacyInputsPartialMetadata(inputs: R3DirectiveMetadata['inputs']): o.Expression | null {\n  // TODO(legacy-partial-output-inputs): Remove function in v18.\n\n  const keys = Object.getOwnPropertyNames(inputs);\n  if (keys.length === 0) {\n    return null;\n  }\n\n  return o.literalMap(\n    keys.map((declaredName) => {\n      const value = inputs[declaredName];\n      const publicName = value.bindingPropertyName;\n      const differentDeclaringName = publicName !== declaredName;\n      let result: o.Expression;\n\n      if (differentDeclaringName || value.transformFunction !== null) {\n        const values = [asLiteral(publicName), asLiteral(declaredName)];\n        if (value.transformFunction !== null) {\n          values.push(value.transformFunction);\n        }\n        result = o.literalArr(values);\n      } else {\n        result = asLiteral(publicName);\n      }\n\n      return {\n        key: declaredName,\n        // put quotes around keys that contain potentially unsafe characters\n        quoted: UNSAFE_OBJECT_KEY_NAME_REGEXP.test(declaredName),\n        value: result,\n      };\n    }),\n  );\n}\n"]}