{"version":3,"file":"map_util.js","sourceRoot":"","sources":["map_util.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,KAAK,CAAC,MAAM,cAAc,CAAC;AAUlC,MAAM,UAAU,QAAQ,CAAC,GAAW,EAAE,KAAmB;IACvD,OAAO,EAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC;AACrC,CAAC;AAED,MAAM,UAAU,UAAU,CACxB,GAAkC,EAClC,SAAkB,KAAK;IAEvB,OAAO,CAAC,CAAC,UAAU,CACjB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAC7B,GAAG;QACH,MAAM;QACN,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC;KAChB,CAAC,CAAC,CACJ,CAAC;AACJ,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport * as o from './output_ast';\n\nexport type MapEntry = {\n  key: string;\n  quoted: boolean;\n  value: o.Expression;\n};\n\nexport type MapLiteral = MapEntry[];\n\nexport function mapEntry(key: string, value: o.Expression): MapEntry {\n  return {key, value, quoted: false};\n}\n\nexport function mapLiteral(\n  obj: {[key: string]: o.Expression},\n  quoted: boolean = false,\n): o.Expression {\n  return o.literalMap(\n    Object.keys(obj).map((key) => ({\n      key,\n      quoted,\n      value: obj[key],\n    })),\n  );\n}\n"]}