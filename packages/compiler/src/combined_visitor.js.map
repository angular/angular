{"version":3,"file":"combined_visitor.js","sourceRoot":"","sources":["combined_visitor.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {AST, ASTWithSource, RecursiveAstVisitor} from './expression_parser/ast';\nimport * as t from './render3/r3_ast';\n\n/**\n * Visitor that traverses all template and expression AST nodes in a template.\n * Useful for cases where every single node needs to be visited.\n */\nexport class CombinedRecursiveAstVisitor extends RecursiveAstVisitor implements t.RecursiveVisitor {\n  override visit(node: AST | t.Node): void {\n    if (node instanceof ASTWithSource) {\n      this.visit(node.ast);\n    } else {\n      node.visit(this);\n    }\n  }\n\n  visitElement(element: t.Element): void {\n    this.visitAllTemplateNodes(element.attributes);\n    this.visitAllTemplateNodes(element.inputs);\n    this.visitAllTemplateNodes(element.outputs);\n    this.visitAllTemplateNodes(element.directives);\n    this.visitAllTemplateNodes(element.references);\n    this.visitAllTemplateNodes(element.children);\n  }\n\n  visitTemplate(template: t.Template): void {\n    this.visitAllTemplateNodes(template.attributes);\n    this.visitAllTemplateNodes(template.inputs);\n    this.visitAllTemplateNodes(template.outputs);\n    this.visitAllTemplateNodes(template.directives);\n    this.visitAllTemplateNodes(template.templateAttrs);\n    this.visitAllTemplateNodes(template.variables);\n    this.visitAllTemplateNodes(template.references);\n    this.visitAllTemplateNodes(template.children);\n  }\n\n  visitContent(content: t.Content): void {\n    this.visitAllTemplateNodes(content.children);\n  }\n\n  visitBoundAttribute(attribute: t.BoundAttribute): void {\n    this.visit(attribute.value);\n  }\n\n  visitBoundEvent(attribute: t.BoundEvent): void {\n    this.visit(attribute.handler);\n  }\n\n  visitBoundText(text: t.BoundText): void {\n    this.visit(text.value);\n  }\n\n  visitIcu(icu: t.Icu): void {\n    Object.keys(icu.vars).forEach((key) => this.visit(icu.vars[key]));\n    Object.keys(icu.placeholders).forEach((key) => this.visit(icu.placeholders[key]));\n  }\n\n  visitDeferredBlock(deferred: t.DeferredBlock): void {\n    deferred.visitAll(this);\n  }\n\n  visitDeferredTrigger(trigger: t.DeferredTrigger): void {\n    if (trigger instanceof t.BoundDeferredTrigger) {\n      this.visit(trigger.value);\n    }\n  }\n\n  visitDeferredBlockPlaceholder(block: t.DeferredBlockPlaceholder): void {\n    this.visitAllTemplateNodes(block.children);\n  }\n\n  visitDeferredBlockError(block: t.DeferredBlockError): void {\n    this.visitAllTemplateNodes(block.children);\n  }\n\n  visitDeferredBlockLoading(block: t.DeferredBlockLoading): void {\n    this.visitAllTemplateNodes(block.children);\n  }\n\n  visitSwitchBlock(block: t.SwitchBlock): void {\n    this.visit(block.expression);\n    this.visitAllTemplateNodes(block.cases);\n  }\n\n  visitSwitchBlockCase(block: t.SwitchBlockCase): void {\n    block.expression && this.visit(block.expression);\n    this.visitAllTemplateNodes(block.children);\n  }\n\n  visitForLoopBlock(block: t.ForLoopBlock): void {\n    block.item.visit(this);\n    this.visitAllTemplateNodes(block.contextVariables);\n    this.visit(block.expression);\n    this.visitAllTemplateNodes(block.children);\n    block.empty?.visit(this);\n  }\n\n  visitForLoopBlockEmpty(block: t.ForLoopBlockEmpty): void {\n    this.visitAllTemplateNodes(block.children);\n  }\n\n  visitIfBlock(block: t.IfBlock): void {\n    this.visitAllTemplateNodes(block.branches);\n  }\n\n  visitIfBlockBranch(block: t.IfBlockBranch): void {\n    block.expression && this.visit(block.expression);\n    block.expressionAlias?.visit(this);\n    this.visitAllTemplateNodes(block.children);\n  }\n\n  visitLetDeclaration(decl: t.LetDeclaration): void {\n    this.visit(decl.value);\n  }\n\n  visitComponent(component: t.Component): void {\n    this.visitAllTemplateNodes(component.attributes);\n    this.visitAllTemplateNodes(component.inputs);\n    this.visitAllTemplateNodes(component.outputs);\n    this.visitAllTemplateNodes(component.directives);\n    this.visitAllTemplateNodes(component.references);\n    this.visitAllTemplateNodes(component.children);\n  }\n\n  visitDirective(directive: t.Directive): void {\n    this.visitAllTemplateNodes(directive.attributes);\n    this.visitAllTemplateNodes(directive.inputs);\n    this.visitAllTemplateNodes(directive.outputs);\n    this.visitAllTemplateNodes(directive.references);\n  }\n\n  visitVariable(variable: t.Variable): void {}\n  visitReference(reference: t.Reference): void {}\n  visitTextAttribute(attribute: t.TextAttribute): void {}\n  visitText(text: t.Text): void {}\n  visitUnknownBlock(block: t.UnknownBlock): void {}\n\n  protected visitAllTemplateNodes(nodes: t.Node[]): void {\n    for (const node of nodes) {\n      this.visit(node);\n    }\n  }\n}\n"]}