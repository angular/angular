{"version":3,"file":"ast.js","sourceRoot":"","sources":["ast.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {I18nMeta} from '../i18n/i18n_ast';\nimport {ParseSourceSpan} from '../parse_util';\n\nimport {InterpolatedAttributeToken, InterpolatedTextToken} from './tokens';\n\ninterface BaseNode {\n  sourceSpan: ParseSourceSpan;\n  visit(visitor: Visitor, context: any): any;\n}\n\nexport type Node =\n  | Attribute\n  | Comment\n  | Element\n  | Expansion\n  | ExpansionCase\n  | Text\n  | Block\n  | BlockParameter\n  | Component\n  | Directive;\n\nexport abstract class NodeWithI18n implements BaseNode {\n  constructor(\n    public sourceSpan: ParseSourceSpan,\n    public i18n?: I18nMeta,\n  ) {}\n  abstract visit(visitor: Visitor, context: any): any;\n}\n\nexport class Text extends NodeWithI18n {\n  constructor(\n    public value: string,\n    sourceSpan: ParseSourceSpan,\n    public tokens: InterpolatedTextToken[],\n    i18n?: I18nMeta,\n  ) {\n    super(sourceSpan, i18n);\n  }\n  override visit(visitor: Visitor, context: any): any {\n    return visitor.visitText(this, context);\n  }\n}\n\nexport class Expansion extends NodeWithI18n {\n  constructor(\n    public switchValue: string,\n    public type: string,\n    public cases: ExpansionCase[],\n    sourceSpan: ParseSourceSpan,\n    public switchValueSourceSpan: ParseSourceSpan,\n    i18n?: I18nMeta,\n  ) {\n    super(sourceSpan, i18n);\n  }\n  override visit(visitor: Visitor, context: any): any {\n    return visitor.visitExpansion(this, context);\n  }\n}\n\nexport class ExpansionCase implements BaseNode {\n  constructor(\n    public value: string,\n    public expression: Node[],\n    public sourceSpan: ParseSourceSpan,\n    public valueSourceSpan: ParseSourceSpan,\n    public expSourceSpan: ParseSourceSpan,\n  ) {}\n\n  visit(visitor: Visitor, context: any): any {\n    return visitor.visitExpansionCase(this, context);\n  }\n}\n\nexport class Attribute extends NodeWithI18n {\n  constructor(\n    public name: string,\n    public value: string,\n    sourceSpan: ParseSourceSpan,\n    readonly keySpan: ParseSourceSpan | undefined,\n    public valueSpan: ParseSourceSpan | undefined,\n    public valueTokens: InterpolatedAttributeToken[] | undefined,\n    i18n: I18nMeta | undefined,\n  ) {\n    super(sourceSpan, i18n);\n  }\n  override visit(visitor: Visitor, context: any): any {\n    return visitor.visitAttribute(this, context);\n  }\n}\n\nexport class Element extends NodeWithI18n {\n  constructor(\n    public name: string,\n    public attrs: Attribute[],\n    readonly directives: Directive[],\n    public children: Node[],\n    readonly isSelfClosing: boolean,\n    sourceSpan: ParseSourceSpan,\n    public startSourceSpan: ParseSourceSpan,\n    public endSourceSpan: ParseSourceSpan | null = null,\n    readonly isVoid: boolean,\n    i18n?: I18nMeta,\n  ) {\n    super(sourceSpan, i18n);\n  }\n  override visit(visitor: Visitor, context: any): any {\n    return visitor.visitElement(this, context);\n  }\n}\n\nexport class Comment implements BaseNode {\n  constructor(\n    public value: string | null,\n    public sourceSpan: ParseSourceSpan,\n  ) {}\n  visit(visitor: Visitor, context: any): any {\n    return visitor.visitComment(this, context);\n  }\n}\n\nexport class Block extends NodeWithI18n {\n  constructor(\n    public name: string,\n    public parameters: BlockParameter[],\n    public children: Node[],\n    sourceSpan: ParseSourceSpan,\n    public nameSpan: ParseSourceSpan,\n    public startSourceSpan: ParseSourceSpan,\n    public endSourceSpan: ParseSourceSpan | null = null,\n    i18n?: I18nMeta,\n  ) {\n    super(sourceSpan, i18n);\n  }\n\n  override visit(visitor: Visitor, context: any) {\n    return visitor.visitBlock(this, context);\n  }\n}\n\nexport class Component extends NodeWithI18n {\n  constructor(\n    readonly componentName: string,\n    readonly tagName: string | null,\n    readonly fullName: string,\n    public attrs: Attribute[],\n    readonly directives: Directive[],\n    readonly children: Node[],\n    readonly isSelfClosing: boolean,\n    sourceSpan: ParseSourceSpan,\n    readonly startSourceSpan: ParseSourceSpan,\n    public endSourceSpan: ParseSourceSpan | null = null,\n    i18n?: I18nMeta,\n  ) {\n    super(sourceSpan, i18n);\n  }\n\n  override visit(visitor: Visitor, context: any): any {\n    return visitor.visitComponent(this, context);\n  }\n}\n\nexport class Directive implements BaseNode {\n  constructor(\n    readonly name: string,\n    readonly attrs: Attribute[],\n    readonly sourceSpan: ParseSourceSpan,\n    readonly startSourceSpan: ParseSourceSpan,\n    readonly endSourceSpan: ParseSourceSpan | null = null,\n  ) {}\n\n  visit(visitor: Visitor, context: any): any {\n    return visitor.visitDirective(this, context);\n  }\n}\n\nexport class BlockParameter implements BaseNode {\n  constructor(\n    public expression: string,\n    public sourceSpan: ParseSourceSpan,\n  ) {}\n\n  visit(visitor: Visitor, context: any): any {\n    return visitor.visitBlockParameter(this, context);\n  }\n}\n\nexport class LetDeclaration implements BaseNode {\n  constructor(\n    public name: string,\n    public value: string,\n    public sourceSpan: ParseSourceSpan,\n    readonly nameSpan: ParseSourceSpan,\n    public valueSpan: ParseSourceSpan,\n  ) {}\n\n  visit(visitor: Visitor, context: any): any {\n    return visitor.visitLetDeclaration(this, context);\n  }\n}\n\nexport interface Visitor {\n  // Returning a truthy value from `visit()` will prevent `visitAll()` from the call to the typed\n  // method and result returned will become the result included in `visitAll()`s result array.\n  visit?(node: Node, context: any): any;\n\n  visitElement(element: Element, context: any): any;\n  visitAttribute(attribute: Attribute, context: any): any;\n  visitText(text: Text, context: any): any;\n  visitComment(comment: Comment, context: any): any;\n  visitExpansion(expansion: Expansion, context: any): any;\n  visitExpansionCase(expansionCase: ExpansionCase, context: any): any;\n  visitBlock(block: Block, context: any): any;\n  visitBlockParameter(parameter: BlockParameter, context: any): any;\n  visitLetDeclaration(decl: LetDeclaration, context: any): any;\n  visitComponent(component: Component, context: any): any;\n  visitDirective(directive: Directive, context: any): any;\n}\n\nexport function visitAll(visitor: Visitor, nodes: Node[], context: any = null): any[] {\n  const result: any[] = [];\n\n  const visit = visitor.visit\n    ? (ast: Node) => visitor.visit!(ast, context) || ast.visit(visitor, context)\n    : (ast: Node) => ast.visit(visitor, context);\n  nodes.forEach((ast) => {\n    const astResult = visit(ast);\n    if (astResult) {\n      result.push(astResult);\n    }\n  });\n  return result;\n}\n\nexport class RecursiveVisitor implements Visitor {\n  constructor() {}\n\n  visitElement(ast: Element, context: any): any {\n    this.visitChildren(context, (visit) => {\n      visit(ast.attrs);\n      visit(ast.directives);\n      visit(ast.children);\n    });\n  }\n\n  visitAttribute(ast: Attribute, context: any): any {}\n  visitText(ast: Text, context: any): any {}\n  visitComment(ast: Comment, context: any): any {}\n\n  visitExpansion(ast: Expansion, context: any): any {\n    return this.visitChildren(context, (visit) => {\n      visit(ast.cases);\n    });\n  }\n\n  visitExpansionCase(ast: ExpansionCase, context: any): any {}\n\n  visitBlock(block: Block, context: any): any {\n    this.visitChildren(context, (visit) => {\n      visit(block.parameters);\n      visit(block.children);\n    });\n  }\n\n  visitBlockParameter(ast: BlockParameter, context: any): any {}\n\n  visitLetDeclaration(decl: LetDeclaration, context: any) {}\n\n  visitComponent(component: Component, context: any) {\n    this.visitChildren(context, (visit) => {\n      visit(component.attrs);\n      visit(component.children);\n    });\n  }\n\n  visitDirective(directive: Directive, context: any) {\n    this.visitChildren(context, (visit) => {\n      visit(directive.attrs);\n    });\n  }\n\n  private visitChildren(\n    context: any,\n    cb: (visit: <V extends Node>(children: V[] | undefined) => void) => void,\n  ) {\n    let results: any[][] = [];\n    let t = this;\n    function visit<T extends Node>(children: T[] | undefined) {\n      if (children) results.push(visitAll(t, children, context));\n    }\n    cb(visit);\n    return Array.prototype.concat.apply([], results);\n  }\n}\n"]}