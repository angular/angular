{"version":3,"file":"xml_parser.js","sourceRoot":"","sources":["xml_parser.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,EAAC,MAAM,EAAkB,MAAM,UAAU,CAAC;AACjD,OAAO,EAAC,mBAAmB,EAAC,MAAM,YAAY,CAAC;AAE/C,MAAM,OAAO,SAAU,SAAQ,MAAM;IACnC;QACE,KAAK,CAAC,mBAAmB,CAAC,CAAC;IAC7B,CAAC;IAEQ,KAAK,CAAC,MAAc,EAAE,GAAW,EAAE,UAA2B,EAAE;QACvE,kEAAkE;QAClE,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE;YAC9B,GAAG,OAAO;YACV,cAAc,EAAE,KAAK;YACrB,WAAW,EAAE,KAAK;YAClB,mBAAmB,EAAE,KAAK;SAC3B,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {TokenizeOptions} from './lexer';\nimport {Parser, ParseTreeResult} from './parser';\nimport {getXmlTagDefinition} from './xml_tags';\n\nexport class XmlParser extends Parser {\n  constructor() {\n    super(getXmlTagDefinition);\n  }\n\n  override parse(source: string, url: string, options: TokenizeOptions = {}): ParseTreeResult {\n    // Blocks and let declarations aren't supported in an XML context.\n    return super.parse(source, url, {\n      ...options,\n      tokenizeBlocks: false,\n      tokenizeLet: false,\n      selectorlessEnabled: false,\n    });\n  }\n}\n"]}