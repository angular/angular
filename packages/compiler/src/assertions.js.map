{"version":3,"file":"assertions.js","sourceRoot":"","sources":["assertions.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,MAAM,8BAA8B,GAAG;IACrC,GAAG,EAAE,+BAA+B;IACpC,OAAO,EAAE,QAAQ;IACjB,MAAM,EAAE,WAAW;IACnB,QAAQ,EAAE,iBAAiB;IAC3B,aAAa,EAAE,uBAAuB;IACtC,OAAO,EAAE,UAAU;CACpB,CAAC;AAEF,MAAM,UAAU,0BAA0B,CAAC,UAAkB,EAAE,KAAU;IACvE,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE,CAAC;QAClE,MAAM,IAAI,KAAK,CAAC,aAAa,UAAU,iCAAiC,CAAC,CAAC;IAC5E,CAAC;SAAM,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC;QACzB,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAW,CAAC;QACjC,MAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAW,CAAC;QAC/B,2CAA2C;QAC3C,8BAA8B,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YAChD,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC3C,MAAM,IAAI,KAAK,CAAC,KAAK,KAAK,OAAO,GAAG,4CAA4C,CAAC,CAAC;YACpF,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nconst UNUSABLE_INTERPOLATION_REGEXPS = [\n  /@/, // control flow reserved symbol\n  /^\\s*$/, // empty\n  /[<>]/, // html tag\n  /^[{}]$/, // i18n expansion\n  /&(#|[a-z])/i, // character reference,\n  /^\\/\\//, // comment\n];\n\nexport function assertInterpolationSymbols(identifier: string, value: any): void {\n  if (value != null && !(Array.isArray(value) && value.length == 2)) {\n    throw new Error(`Expected '${identifier}' to be an array, [start, end].`);\n  } else if (value != null) {\n    const start = value[0] as string;\n    const end = value[1] as string;\n    // Check for unusable interpolation symbols\n    UNUSABLE_INTERPOLATION_REGEXPS.forEach((regexp) => {\n      if (regexp.test(start) || regexp.test(end)) {\n        throw new Error(`['${start}', '${end}'] contains unusable interpolation symbol.`);\n      }\n    });\n  }\n}\n"]}