{
  "$schema": "../../../test_case_schema.json",
  "cases": [
    {
      "description": "should properly compile a standalone component",
      "inputFiles": [
        "component.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid component definition",
          "files": [
            "component.js"
          ]
        }
      ],
      "compilationModeFilter": [
        "full compile",
        "local compile"
      ]
    },
    {
      "description": "should properly compile a standalone directive",
      "inputFiles": [
        "directive.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid directive definition",
          "files": [
            "directive.js"
          ]
        }
      ]
    },
    {
      "description": "should properly compile a standalone pipe",
      "inputFiles": [
        "pipe.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid pipe definition",
          "files": [
            "pipe.js"
          ]
        }
      ]
    },
    {
      "description": "should generate dependencies array from imports",
      "inputFiles": [
        "imports.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid standalone component dependencies",
          "files": [
            "imports.js"
          ]
        }
      ]
    },
    {
      "description": "should support recursivity in templates",
      "inputFiles": [
        "recursive.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Recursive usage not accounted for",
          "files": [
            "recursive.js"
          ]
        }
      ]
    },
    {
      "description": "should optimize injector imports",
      "inputFiles": [
        "module_optimization.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Injector imports not optimized",
          "files": [
            "module_optimization.js"
          ]
        }
      ]
    },
    {
      "description": "should handle a forwardRef in the imports of a standalone component",
      "inputFiles": [
        "forward_ref.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid component definition",
          "files": [
            "forward_ref.js"
          ]
        }
      ]
    }
  ]
}