{
  "$schema": "../../test_case_schema.json",
  "cases": [
    {
      "description": "should define a basic NgModule (linked)",
      "inputFiles": [
        "basic_linked.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid NgModule/Injector definition",
          "files": [
            "basic_linked.js"
          ]
        }
      ],
      "compilationModeFilter": [
        "linked compile"
      ]
    },
    {
      "description": "should define a basic NgModule (full/local)",      
      "inputFiles": [
        "basic_full.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid NgModule/Injector definition",
          "files": [
            "basic_full.js"
          ]
        }
      ],
      "compilationModeFilter": [
        "full compile",
        "local compile"
      ]
    },
    {
      "description": "should define an NgModule with declarations and bootstrap",
      "inputFiles": [
        "declarations.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid NgModule/Injector definition",
          "files": [
            "declarations.js"
          ]
        }
      ]
    },
    {
      "description": "should define an NgModule with declarations and bootstrap (jit mode)",
      "inputFiles": [
        "declarations_jit_mode.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid NgModule/Injector definition",
          "files": [
            "declarations_jit_mode.js"
          ]
        }
      ],
      "compilationModeFilter": [
        "linked compile"
      ],
      "angularCompilerOptions": {
        "linkerJitMode": true
      }
    },
    {
      "description": "should define an NgModule and injector with providers",
      "inputFiles": [
        "providers.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid NgModule/Injector definition",
          "files": [
            "providers.js"
          ]
        }
      ],
      "compilationModeFilter": [
        "full compile",
        "linked compile",
        "local compile"
      ]
    },
    {
      "description": "should define NgModules with imports and exports",
      "inputFiles": [
        "imports_exports.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid NgModule/Injector definition",
          "files": [
            "imports_exports.js"
          ]
        }
      ],
      "compilationModeFilter": [
        "full compile",
        "local compile"
      ]
    },
    {
      "description": "should define NgModules with imports and exports (jit mode)",
      "inputFiles": [
        "imports_exports_jit_mode.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid NgModule/Injector definition",
          "files": [
            "imports_exports_jit_mode.js"
          ]
        }
      ],
      "compilationModeFilter": [
        "linked compile"
      ],
      "angularCompilerOptions": {
        "linkerJitMode": true
      }
    },
    {
      "description": "should not process NgModules that are marked `jit`",
      "inputFiles": [
        "no_aot.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid NgModule/Injector definition",
          "files": [
            "no_aot.js"
          ]
        }
      ],
      "compilationModeFilter": [
        "full compile",
        "linked compile",
        "local compile"
      ]
    },
    {
      "description": "should handle NgModules that extend other classes",
      "inputFiles": [
        "inheritance.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid NgModule/Injector definition",
          "files": [
            "inheritance.js"
          ]
        }
      ],
      "compilationModeFilter": [
        "full compile",
        "linked compile",
        "local compile"
      ]
    },
    {
      "description": "should handle NgModules with forward refs",
      "inputFiles": [
        "forward_refs.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid NgModule/Injector definition",
          "files": [
            "forward_refs.js"
          ]
        }
      ],
      "compilationModeFilter": [
        "linked compile"
      ],
      "angularCompilerOptions": {
        "linkerJitMode": true
      }
    },
    {
      "description": "should not pass along empty array fields to the declaration",
      "inputFiles": [
        "empty_fields.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Empty declaration exists",
          "files": [
            "empty_fields.js"
          ]
        }
      ],
      "compilationModeFilter": [
        "full compile",
        "linked compile",
        "local compile"
      ]
    },
    {
      "description": "should handle providers passed in as a variable",
      "inputFiles": [
        "variable_providers.ts"
      ],
      "expectations": [
        {
          "failureMessage": "Invalid injector definition",
          "files": [
            "variable_providers.js"
          ]
        }
      ],
      "compilationModeFilter": [
        "full compile",
        "linked compile",
        "local compile"
      ]
    }
  ]
}
