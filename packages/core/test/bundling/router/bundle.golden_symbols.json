[
  {
    "name": "APP_BASE_HREF"
  },
  {
    "name": "APP_BOOTSTRAP_LISTENER"
  },
  {
    "name": "APP_ID"
  },
  {
    "name": "APP_INITIALIZER"
  },
  {
    "name": "AbsoluteRedirect"
  },
  {
    "name": "ActivateRoutes"
  },
  {
    "name": "ActivatedRoute"
  },
  {
    "name": "ActivatedRouteSnapshot"
  },
  {
    "name": "ActivationEnd"
  },
  {
    "name": "ActivationStart"
  },
  {
    "name": "AfterRenderManager"
  },
  {
    "name": "AnonymousSubject"
  },
  {
    "name": "ApplicationInitStatus"
  },
  {
    "name": "ApplicationRef"
  },
  {
    "name": "ApplyRedirects"
  },
  {
    "name": "BOOTSTRAP_DONE"
  },
  {
    "name": "BROWSER_MODULE_PROVIDERS"
  },
  {
    "name": "BaseRouteReuseStrategy"
  },
  {
    "name": "BeforeActivateRoutes"
  },
  {
    "name": "BehaviorSubject"
  },
  {
    "name": "BrowserDomAdapter"
  },
  {
    "name": "BrowserPlatformLocation"
  },
  {
    "name": "BrowserXhr"
  },
  {
    "name": "CIRCULAR"
  },
  {
    "name": "COMPLETE_NOTIFICATION"
  },
  {
    "name": "COMPONENT_REGEX"
  },
  {
    "name": "CREATE_VIEW_TRANSITION"
  },
  {
    "name": "CSP_NONCE"
  },
  {
    "name": "CanActivate"
  },
  {
    "name": "CanDeactivate"
  },
  {
    "name": "ChainedInjector"
  },
  {
    "name": "ChangeDetectionScheduler"
  },
  {
    "name": "ChangeDetectionSchedulerImpl"
  },
  {
    "name": "ChangeDetectionStrategy"
  },
  {
    "name": "ChangeDetectorRef"
  },
  {
    "name": "ChildActivationEnd"
  },
  {
    "name": "ChildActivationStart"
  },
  {
    "name": "ChildrenOutletContexts"
  },
  {
    "name": "Compiler"
  },
  {
    "name": "ComponentFactory"
  },
  {
    "name": "ComponentFactory2"
  },
  {
    "name": "ComponentFactoryResolver"
  },
  {
    "name": "ComponentFactoryResolver2"
  },
  {
    "name": "ComponentRef"
  },
  {
    "name": "ComponentRef2"
  },
  {
    "name": "ConnectableObservable"
  },
  {
    "name": "Console"
  },
  {
    "name": "ConsumerObserver"
  },
  {
    "name": "DEFAULT_APP_ID"
  },
  {
    "name": "DEFAULT_SERIALIZER"
  },
  {
    "name": "DOCUMENT"
  },
  {
    "name": "DOCUMENT2"
  },
  {
    "name": "DefaultDomRenderer2"
  },
  {
    "name": "DefaultRouteReuseStrategy"
  },
  {
    "name": "DefaultTitleStrategy"
  },
  {
    "name": "DefaultUrlHandlingStrategy"
  },
  {
    "name": "DefaultUrlSerializer"
  },
  {
    "name": "DestroyRef"
  },
  {
    "name": "DomAdapter"
  },
  {
    "name": "DomEventsPlugin"
  },
  {
    "name": "DomRendererFactory2"
  },
  {
    "name": "EMPTY"
  },
  {
    "name": "EMPTY_ARRAY"
  },
  {
    "name": "EMPTY_OBJ"
  },
  {
    "name": "EMPTY_OBSERVER"
  },
  {
    "name": "EMPTY_PAYLOAD"
  },
  {
    "name": "EMPTY_SUBSCRIPTION"
  },
  {
    "name": "ENVIRONMENT_INITIALIZER"
  },
  {
    "name": "EVENT_MANAGER_PLUGINS"
  },
  {
    "name": "EffectScheduler"
  },
  {
    "name": "ElementRef"
  },
  {
    "name": "EmptyError"
  },
  {
    "name": "EmulatedEncapsulationDomRenderer2"
  },
  {
    "name": "EnvironmentInjector"
  },
  {
    "name": "EnvironmentNgModuleRefAdapter"
  },
  {
    "name": "ErrorHandler"
  },
  {
    "name": "EventEmitter"
  },
  {
    "name": "EventManager"
  },
  {
    "name": "EventManagerPlugin"
  },
  {
    "name": "EventType2"
  },
  {
    "name": "GenericBrowserDomAdapter"
  },
  {
    "name": "GuardsCheckEnd"
  },
  {
    "name": "GuardsCheckStart"
  },
  {
    "name": "HistoryStateManager"
  },
  {
    "name": "INITIAL_NAVIGATION"
  },
  {
    "name": "INITIAL_VALUE"
  },
  {
    "name": "INJECTOR"
  },
  {
    "name": "INJECTOR_DEF_TYPES"
  },
  {
    "name": "INJECTOR_SCOPE"
  },
  {
    "name": "INPUT_BINDER"
  },
  {
    "name": "INPUT_SIGNAL_NODE"
  },
  {
    "name": "INTERNAL_APPLICATION_ERROR_HANDLER"
  },
  {
    "name": "INTERNAL_BROWSER_PLATFORM_PROVIDERS"
  },
  {
    "name": "InjectFlags"
  },
  {
    "name": "InjectionToken"
  },
  {
    "name": "Injector"
  },
  {
    "name": "InputFlags"
  },
  {
    "name": "ItemComponent"
  },
  {
    "name": "KeyEventsPlugin"
  },
  {
    "name": "LContainerFlags"
  },
  {
    "name": "LOCALE_ID2"
  },
  {
    "name": "LQueries_"
  },
  {
    "name": "LQuery_"
  },
  {
    "name": "LifecycleHooksFeature"
  },
  {
    "name": "ListComponent"
  },
  {
    "name": "Location"
  },
  {
    "name": "LocationStrategy"
  },
  {
    "name": "MATRIX_PARAM_SEGMENT_RE"
  },
  {
    "name": "MODIFIER_KEYS"
  },
  {
    "name": "MODIFIER_KEY_GETTERS"
  },
  {
    "name": "ModuleWithComponentFactories"
  },
  {
    "name": "NAMESPACE_URIS"
  },
  {
    "name": "NAVIGATION_ERROR_HANDLER"
  },
  {
    "name": "NEW_LINE"
  },
  {
    "name": "NG_COMP_DEF"
  },
  {
    "name": "NG_DIR_DEF"
  },
  {
    "name": "NG_ELEMENT_ID"
  },
  {
    "name": "NG_ENV_ID"
  },
  {
    "name": "NG_FACTORY_DEF"
  },
  {
    "name": "NG_INJECTABLE_DEF"
  },
  {
    "name": "NG_INJECTOR_DEF"
  },
  {
    "name": "NG_INJ_DEF"
  },
  {
    "name": "NG_MOD_DEF"
  },
  {
    "name": "NG_PIPE_DEF"
  },
  {
    "name": "NG_PROV_DEF"
  },
  {
    "name": "NOT_FOUND"
  },
  {
    "name": "NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR"
  },
  {
    "name": "NOT_YET"
  },
  {
    "name": "NO_CHANGE"
  },
  {
    "name": "NULL_INJECTOR"
  },
  {
    "name": "Navigation"
  },
  {
    "name": "NavigationCancel"
  },
  {
    "name": "NavigationCancellationCode"
  },
  {
    "name": "NavigationEnd"
  },
  {
    "name": "NavigationError"
  },
  {
    "name": "NavigationResult"
  },
  {
    "name": "NavigationSkipped"
  },
  {
    "name": "NavigationSkippedCode"
  },
  {
    "name": "NavigationStart"
  },
  {
    "name": "NavigationTransitions"
  },
  {
    "name": "NgModuleFactory"
  },
  {
    "name": "NgModuleFactory2"
  },
  {
    "name": "NgModuleRef"
  },
  {
    "name": "NgModuleRef2"
  },
  {
    "name": "NgOnChangesFeatureImpl"
  },
  {
    "name": "NgZone"
  },
  {
    "name": "NgZoneChangeDetectionScheduler"
  },
  {
    "name": "NoLeftoversInUrl"
  },
  {
    "name": "NoMatch"
  },
  {
    "name": "NodeInjector"
  },
  {
    "name": "NodeInjectorDestroyRef"
  },
  {
    "name": "NodeInjectorFactory"
  },
  {
    "name": "NoneEncapsulationDomRenderer"
  },
  {
    "name": "NoopNgZone"
  },
  {
    "name": "NullInjector"
  },
  {
    "name": "ObjectUnsubscribedError"
  },
  {
    "name": "Observable"
  },
  {
    "name": "OperatorSubscriber"
  },
  {
    "name": "OutletContext"
  },
  {
    "name": "OutletInjector"
  },
  {
    "name": "PLATFORM_DESTROY_LISTENERS"
  },
  {
    "name": "PLATFORM_ID"
  },
  {
    "name": "PLATFORM_INITIALIZER"
  },
  {
    "name": "PRESERVE_HOST_CONTENT"
  },
  {
    "name": "PRIMARY_OUTLET"
  },
  {
    "name": "ParamsAsMap"
  },
  {
    "name": "PathLocationStrategy"
  },
  {
    "name": "PendingTasksInternal"
  },
  {
    "name": "PlatformLocation"
  },
  {
    "name": "Position"
  },
  {
    "name": "QUERY_PARAM_RE"
  },
  {
    "name": "QUERY_PARAM_VALUE_RE"
  },
  {
    "name": "QueryList"
  },
  {
    "name": "R3Injector"
  },
  {
    "name": "R3TemplateRef"
  },
  {
    "name": "R3ViewContainerRef"
  },
  {
    "name": "REACTIVE_LVIEW_CONSUMER_NODE"
  },
  {
    "name": "REACTIVE_NODE"
  },
  {
    "name": "REMOVE_STYLES_ON_COMPONENT_DESTROY"
  },
  {
    "name": "REQUIRED_UNSET_VALUE"
  },
  {
    "name": "ROUTER_CONFIGURATION"
  },
  {
    "name": "ROUTER_OUTLET_DATA"
  },
  {
    "name": "ROUTER_PRELOADER"
  },
  {
    "name": "ROUTER_SCROLLER"
  },
  {
    "name": "ROUTES"
  },
  {
    "name": "Recognizer"
  },
  {
    "name": "RedirectCommand"
  },
  {
    "name": "RedirectRequest"
  },
  {
    "name": "Renderer2"
  },
  {
    "name": "RendererFactory2"
  },
  {
    "name": "RendererStyleFlags2"
  },
  {
    "name": "ResolveEnd"
  },
  {
    "name": "ResolveStart"
  },
  {
    "name": "RouteConfigLoadEnd"
  },
  {
    "name": "RouteConfigLoadStart"
  },
  {
    "name": "RouteReuseStrategy"
  },
  {
    "name": "RouteTitleKey"
  },
  {
    "name": "Router"
  },
  {
    "name": "RouterConfigLoader"
  },
  {
    "name": "RouterEvent"
  },
  {
    "name": "RouterLink"
  },
  {
    "name": "RouterLinkActive"
  },
  {
    "name": "RouterOutlet"
  },
  {
    "name": "RouterState"
  },
  {
    "name": "RouterStateSnapshot"
  },
  {
    "name": "RoutesRecognized"
  },
  {
    "name": "RuntimeError"
  },
  {
    "name": "SAFE_URL_PATTERN"
  },
  {
    "name": "SCHEDULE_IN_ROOT_ZONE"
  },
  {
    "name": "SEGMENT_RE"
  },
  {
    "name": "SIGNAL"
  },
  {
    "name": "SIGNAL_NODE"
  },
  {
    "name": "SIMPLE_CHANGES_STORE"
  },
  {
    "name": "SafeSubscriber"
  },
  {
    "name": "SafeValueImpl"
  },
  {
    "name": "Sanitizer"
  },
  {
    "name": "SecurityContext"
  },
  {
    "name": "ShadowDomRenderer"
  },
  {
    "name": "SharedStylesHost"
  },
  {
    "name": "SimpleChange"
  },
  {
    "name": "StandaloneService"
  },
  {
    "name": "StateManager"
  },
  {
    "name": "Subject"
  },
  {
    "name": "Subscriber"
  },
  {
    "name": "Subscription"
  },
  {
    "name": "TEMPORARY_CONSUMER_NODE"
  },
  {
    "name": "TESTABILITY"
  },
  {
    "name": "THROW_IF_NOT_FOUND"
  },
  {
    "name": "TQueries_"
  },
  {
    "name": "TQueryMetadata_"
  },
  {
    "name": "TQuery_"
  },
  {
    "name": "TRACKED_LVIEWS"
  },
  {
    "name": "TemplateRef"
  },
  {
    "name": "Title"
  },
  {
    "name": "TitleStrategy"
  },
  {
    "name": "TracingAction"
  },
  {
    "name": "TracingService"
  },
  {
    "name": "Tree"
  },
  {
    "name": "TreeNode"
  },
  {
    "name": "USE_VALUE"
  },
  {
    "name": "UnsubscriptionError"
  },
  {
    "name": "UrlHandlingStrategy"
  },
  {
    "name": "UrlParser"
  },
  {
    "name": "UrlSegment"
  },
  {
    "name": "UrlSegmentGroup"
  },
  {
    "name": "UrlSerializer"
  },
  {
    "name": "UrlTree"
  },
  {
    "name": "VE_ViewContainerRef"
  },
  {
    "name": "ViewContainerRef"
  },
  {
    "name": "ViewEncapsulation"
  },
  {
    "name": "ViewEngineTemplateRef"
  },
  {
    "name": "ViewRef"
  },
  {
    "name": "ZONELESS_ENABLED"
  },
  {
    "name": "ZONELESS_SCHEDULER_DISABLED"
  },
  {
    "name": "ZoneAwareEffectScheduler"
  },
  {
    "name": "ZoneStablePendingTask"
  },
  {
    "name": "_DOM"
  },
  {
    "name": "_Injector"
  },
  {
    "name": "_NullComponentFactoryResolver"
  },
  {
    "name": "__asyncValues"
  },
  {
    "name": "__await"
  },
  {
    "name": "__defProp"
  },
  {
    "name": "__forward_ref__"
  },
  {
    "name": "__publicField"
  },
  {
    "name": "_a"
  },
  {
    "name": "_applyRootElementTransformImpl"
  },
  {
    "name": "_bind"
  },
  {
    "name": "_currentInjector"
  },
  {
    "name": "_global"
  },
  {
    "name": "_injectImplementation"
  },
  {
    "name": "_isRefreshingViews"
  },
  {
    "name": "_keyMap"
  },
  {
    "name": "_locateOrCreateAnchorNode"
  },
  {
    "name": "_locateOrCreateElementNode"
  },
  {
    "name": "_locateOrCreateTextNode"
  },
  {
    "name": "_platformInjector"
  },
  {
    "name": "_stripIndexHtml"
  },
  {
    "name": "_wasLastNodeCreated"
  },
  {
    "name": "activeConsumer"
  },
  {
    "name": "addEmptyPathsToChildrenIfNeeded"
  },
  {
    "name": "addPropertyBinding"
  },
  {
    "name": "addToArray"
  },
  {
    "name": "addToEndOfViewTree"
  },
  {
    "name": "advanceActivatedRoute"
  },
  {
    "name": "allocExpando"
  },
  {
    "name": "allocLFrame"
  },
  {
    "name": "allowSanitizationBypassAndThrow"
  },
  {
    "name": "angularZoneInstanceIdProperty"
  },
  {
    "name": "appendChild"
  },
  {
    "name": "applyNodes"
  },
  {
    "name": "applyProjectionRecursive"
  },
  {
    "name": "applyToElementOrContainer"
  },
  {
    "name": "applyValueToInputField"
  },
  {
    "name": "applyView"
  },
  {
    "name": "arrRemove"
  },
  {
    "name": "assertConsumerNode"
  },
  {
    "name": "assertNotDestroyed"
  },
  {
    "name": "assertProducerNode"
  },
  {
    "name": "attachPatchData"
  },
  {
    "name": "baseElement"
  },
  {
    "name": "bind"
  },
  {
    "name": "bindingUpdated"
  },
  {
    "name": "bloomHasToken"
  },
  {
    "name": "booleanAttribute"
  },
  {
    "name": "bootstrap"
  },
  {
    "name": "callHook"
  },
  {
    "name": "callHookInternal"
  },
  {
    "name": "callHooks"
  },
  {
    "name": "captureNodeBindings"
  },
  {
    "name": "catchError"
  },
  {
    "name": "checkStable"
  },
  {
    "name": "classIndexOf"
  },
  {
    "name": "cleanUpView"
  },
  {
    "name": "collectNativeNodes"
  },
  {
    "name": "collectNativeNodesInLContainer"
  },
  {
    "name": "collectQueryResults"
  },
  {
    "name": "combineLatest"
  },
  {
    "name": "compare"
  },
  {
    "name": "computeStaticStyling"
  },
  {
    "name": "concat"
  },
  {
    "name": "concatMap"
  },
  {
    "name": "concatStringsWithSpace"
  },
  {
    "name": "config"
  },
  {
    "name": "configureViewWithDirective"
  },
  {
    "name": "consumerBeforeComputation"
  },
  {
    "name": "consumerDestroy"
  },
  {
    "name": "consumerIsLive"
  },
  {
    "name": "consumerMarkDirty"
  },
  {
    "name": "consumerPollProducersForChange"
  },
  {
    "name": "containsSegmentGroup"
  },
  {
    "name": "containsSegmentGroupHelper"
  },
  {
    "name": "containsTree"
  },
  {
    "name": "context"
  },
  {
    "name": "convertToBitFlags"
  },
  {
    "name": "convertToParamMap"
  },
  {
    "name": "createChildrenForEmptyPaths"
  },
  {
    "name": "createContainerRef"
  },
  {
    "name": "createContentQuery"
  },
  {
    "name": "createElementNode"
  },
  {
    "name": "createElementRef"
  },
  {
    "name": "createEmptyState"
  },
  {
    "name": "createEnvironmentInjector"
  },
  {
    "name": "createErrorClass"
  },
  {
    "name": "createInjector"
  },
  {
    "name": "createInjectorWithoutInjectorInstances"
  },
  {
    "name": "createInputSignal"
  },
  {
    "name": "createInvalidObservableTypeError"
  },
  {
    "name": "createLFrame"
  },
  {
    "name": "createLView"
  },
  {
    "name": "createLinkElement"
  },
  {
    "name": "createNewSegmentChildren"
  },
  {
    "name": "createNewSegmentGroup"
  },
  {
    "name": "createNode"
  },
  {
    "name": "createNodeInjector"
  },
  {
    "name": "createNotification"
  },
  {
    "name": "createOperatorSubscriber"
  },
  {
    "name": "createOrReusePlatformInjector"
  },
  {
    "name": "createResultForNode"
  },
  {
    "name": "createRoot"
  },
  {
    "name": "createSegmentGroupFromRoute"
  },
  {
    "name": "createStyleElement"
  },
  {
    "name": "createTView"
  },
  {
    "name": "createTemplateRef"
  },
  {
    "name": "createUrlTreeFromSegmentGroup"
  },
  {
    "name": "deactivateRouteAndItsChildren"
  },
  {
    "name": "decode"
  },
  {
    "name": "decodeQuery"
  },
  {
    "name": "deepForEach"
  },
  {
    "name": "deepForEachProvider"
  },
  {
    "name": "defaultEquals"
  },
  {
    "name": "defaultErrorFactory"
  },
  {
    "name": "defaultIfEmpty"
  },
  {
    "name": "defaultUrlMatcher"
  },
  {
    "name": "defer"
  },
  {
    "name": "destroyLView"
  },
  {
    "name": "detachMovedView"
  },
  {
    "name": "detachView"
  },
  {
    "name": "detachViewFromDOM"
  },
  {
    "name": "detectChangesInChildComponents"
  },
  {
    "name": "detectChangesInComponent"
  },
  {
    "name": "detectChangesInEmbeddedViews"
  },
  {
    "name": "detectChangesInView"
  },
  {
    "name": "detectChangesInViewIfAttached"
  },
  {
    "name": "detectChangesInViewIfRequired"
  },
  {
    "name": "detectChangesInternal"
  },
  {
    "name": "diPublicInInjector"
  },
  {
    "name": "emptyPathMatch"
  },
  {
    "name": "encodeUriQuery"
  },
  {
    "name": "encodeUriSegment"
  },
  {
    "name": "encodeUriString"
  },
  {
    "name": "enterDI"
  },
  {
    "name": "enterView"
  },
  {
    "name": "epoch"
  },
  {
    "name": "equalArraysOrString"
  },
  {
    "name": "equalParamsAndUrlSegments"
  },
  {
    "name": "equalPath"
  },
  {
    "name": "errorContext"
  },
  {
    "name": "exactMatchOptions"
  },
  {
    "name": "execFinalizer"
  },
  {
    "name": "executeCheckHooks"
  },
  {
    "name": "executeContentQueries"
  },
  {
    "name": "executeInitAndCheckHooks"
  },
  {
    "name": "executeListenerWithErrorHandling"
  },
  {
    "name": "executeSchedule"
  },
  {
    "name": "executeTemplate"
  },
  {
    "name": "executeViewQueryFn"
  },
  {
    "name": "extractDefListOrFactory"
  },
  {
    "name": "extractDirectiveDef"
  },
  {
    "name": "filter"
  },
  {
    "name": "finalize"
  },
  {
    "name": "findAttrIndexInNode"
  },
  {
    "name": "findNode"
  },
  {
    "name": "findPath"
  },
  {
    "name": "first"
  },
  {
    "name": "flattenRouteTree"
  },
  {
    "name": "forEachSingleProvider"
  },
  {
    "name": "forwardRef"
  },
  {
    "name": "freeConsumers"
  },
  {
    "name": "from"
  },
  {
    "name": "fromAsyncIterable"
  },
  {
    "name": "generateInitialInputs"
  },
  {
    "name": "getAllRouteGuards"
  },
  {
    "name": "getBeforeNodeForView"
  },
  {
    "name": "getBindingsEnabled"
  },
  {
    "name": "getBootstrapListener"
  },
  {
    "name": "getChildRouteGuards"
  },
  {
    "name": "getClosestRouteInjector"
  },
  {
    "name": "getClosureSafeProperty"
  },
  {
    "name": "getComponentDef"
  },
  {
    "name": "getComponentLViewByIndex"
  },
  {
    "name": "getConstant"
  },
  {
    "name": "getCurrentQueryIndex"
  },
  {
    "name": "getCurrentTNode"
  },
  {
    "name": "getCurrentTNodePlaceholderOk"
  },
  {
    "name": "getDOM"
  },
  {
    "name": "getData"
  },
  {
    "name": "getDataKeys"
  },
  {
    "name": "getDeclarationTNode"
  },
  {
    "name": "getDirectiveDef"
  },
  {
    "name": "getFactoryDef"
  },
  {
    "name": "getFactoryOf"
  },
  {
    "name": "getFirstLContainer"
  },
  {
    "name": "getFirstNativeNode"
  },
  {
    "name": "getIdxOfMatchingSelector"
  },
  {
    "name": "getInherited"
  },
  {
    "name": "getInitialLViewFlagsFromDef"
  },
  {
    "name": "getInjectImplementation"
  },
  {
    "name": "getInjectableDef"
  },
  {
    "name": "getInjectorDef"
  },
  {
    "name": "getInjectorIndex"
  },
  {
    "name": "getLView"
  },
  {
    "name": "getLViewParent"
  },
  {
    "name": "getNativeByTNode"
  },
  {
    "name": "getNearestLContainer"
  },
  {
    "name": "getNextLContainer"
  },
  {
    "name": "getNgDirectiveDef"
  },
  {
    "name": "getNgModuleDef"
  },
  {
    "name": "getNodeInjectable"
  },
  {
    "name": "getNullInjector"
  },
  {
    "name": "getOrCreateComponentTView"
  },
  {
    "name": "getOrCreateInjectable"
  },
  {
    "name": "getOrCreateLViewCleanup"
  },
  {
    "name": "getOrCreateNodeInjectorForNode"
  },
  {
    "name": "getOrCreateTNode"
  },
  {
    "name": "getOrCreateTViewCleanup"
  },
  {
    "name": "getOrCreateViewRefs"
  },
  {
    "name": "getOutlet"
  },
  {
    "name": "getOwnDefinition"
  },
  {
    "name": "getParentInjectorIndex"
  },
  {
    "name": "getParentInjectorLocation"
  },
  {
    "name": "getParentInjectorView"
  },
  {
    "name": "getPipeDef"
  },
  {
    "name": "getProjectionNodes"
  },
  {
    "name": "getPromiseCtor"
  },
  {
    "name": "getQueryResults"
  },
  {
    "name": "getResolve"
  },
  {
    "name": "getSanitizer"
  },
  {
    "name": "getSelectedIndex"
  },
  {
    "name": "getSimpleChangesStore"
  },
  {
    "name": "getSymbolIterator"
  },
  {
    "name": "getTNode"
  },
  {
    "name": "getTNodeFromLView"
  },
  {
    "name": "getTQuery"
  },
  {
    "name": "getTView"
  },
  {
    "name": "getTokenOrFunctionIdentity"
  },
  {
    "name": "getViewRefs"
  },
  {
    "name": "handleError"
  },
  {
    "name": "handleStoppedNotification"
  },
  {
    "name": "handleUnhandledError"
  },
  {
    "name": "hasApplyArgsData"
  },
  {
    "name": "hasEmptyPathConfig"
  },
  {
    "name": "hasInSkipHydrationBlockFlag"
  },
  {
    "name": "hasLift"
  },
  {
    "name": "hasParentInjector"
  },
  {
    "name": "hasStaticTitle"
  },
  {
    "name": "hasTagAndTypeMatch"
  },
  {
    "name": "icuContainerIterate"
  },
  {
    "name": "identity"
  },
  {
    "name": "importProvidersFrom"
  },
  {
    "name": "inNotificationPhase"
  },
  {
    "name": "includeViewProviders"
  },
  {
    "name": "incrementInitPhaseFlags"
  },
  {
    "name": "initFeatures"
  },
  {
    "name": "initializeDirectives"
  },
  {
    "name": "inject"
  },
  {
    "name": "injectArgs"
  },
  {
    "name": "injectChangeDetectorRef"
  },
  {
    "name": "injectDestroyRef"
  },
  {
    "name": "injectElementRef"
  },
  {
    "name": "injectInjectorOnly"
  },
  {
    "name": "injectRootLimpMode"
  },
  {
    "name": "injectTemplateRef"
  },
  {
    "name": "injectViewContainerRef"
  },
  {
    "name": "injectableDefOrInjectorDefFactory"
  },
  {
    "name": "innerFrom"
  },
  {
    "name": "input"
  },
  {
    "name": "inputFunction"
  },
  {
    "name": "inputRequiredFunction"
  },
  {
    "name": "insertBloom"
  },
  {
    "name": "instructionState"
  },
  {
    "name": "internalImportProvidersFrom"
  },
  {
    "name": "internalProvideZoneChangeDetection"
  },
  {
    "name": "invokeDirectivesHostBindings"
  },
  {
    "name": "invokeHostBindingsInCreationMode"
  },
  {
    "name": "isAngularZoneProperty"
  },
  {
    "name": "isApplicationBootstrapConfig"
  },
  {
    "name": "isArrayLike"
  },
  {
    "name": "isAsyncIterable"
  },
  {
    "name": "isCommandWithOutlets"
  },
  {
    "name": "isComponentDef"
  },
  {
    "name": "isComponentHost"
  },
  {
    "name": "isConsumerNode"
  },
  {
    "name": "isContentQueryHost"
  },
  {
    "name": "isCssClassMatching"
  },
  {
    "name": "isCurrentTNodeParent"
  },
  {
    "name": "isDirectiveHost"
  },
  {
    "name": "isEmptyError"
  },
  {
    "name": "isEnvironmentProviders"
  },
  {
    "name": "isForwardRef"
  },
  {
    "name": "isFunction"
  },
  {
    "name": "isFunction2"
  },
  {
    "name": "isInlineTemplate"
  },
  {
    "name": "isInteropObservable"
  },
  {
    "name": "isIterable"
  },
  {
    "name": "isLContainer"
  },
  {
    "name": "isLView"
  },
  {
    "name": "isMatrixParams"
  },
  {
    "name": "isNameOnlyAttributeMarker"
  },
  {
    "name": "isNavigationCancelingError"
  },
  {
    "name": "isNodeMatchingSelector"
  },
  {
    "name": "isNodeMatchingSelectorList"
  },
  {
    "name": "isPlatformServer"
  },
  {
    "name": "isPositive"
  },
  {
    "name": "isPromise"
  },
  {
    "name": "isPromise2"
  },
  {
    "name": "isReadableStreamLike"
  },
  {
    "name": "isRefreshingViews"
  },
  {
    "name": "isRootView"
  },
  {
    "name": "isSubscription"
  },
  {
    "name": "isTemplateNode"
  },
  {
    "name": "isTypeProvider"
  },
  {
    "name": "isUrlTree"
  },
  {
    "name": "isValueProvider"
  },
  {
    "name": "iterator"
  },
  {
    "name": "joinWithSlash"
  },
  {
    "name": "last"
  },
  {
    "name": "last3"
  },
  {
    "name": "lastNodeWasCreated"
  },
  {
    "name": "leaveDI"
  },
  {
    "name": "leaveView"
  },
  {
    "name": "leaveViewLight"
  },
  {
    "name": "locateDirectiveOrProvider"
  },
  {
    "name": "lookupTokenUsingModuleInjector"
  },
  {
    "name": "lookupTokenUsingNodeInjector"
  },
  {
    "name": "makeRecord"
  },
  {
    "name": "map"
  },
  {
    "name": "markAncestorsForTraversal"
  },
  {
    "name": "markAsComponentHost"
  },
  {
    "name": "markViewDirty"
  },
  {
    "name": "markViewForRefresh"
  },
  {
    "name": "markedFeatures"
  },
  {
    "name": "match"
  },
  {
    "name": "matchSegments"
  },
  {
    "name": "matchWithChecks"
  },
  {
    "name": "materializeViewResults"
  },
  {
    "name": "matrixParamsMatch"
  },
  {
    "name": "maybeSchedule"
  },
  {
    "name": "maybeUnwrapDefaultExport"
  },
  {
    "name": "maybeUnwrapFn"
  },
  {
    "name": "maybeWrapInNotSelector"
  },
  {
    "name": "mergeAll"
  },
  {
    "name": "mergeEmptyPathMatches"
  },
  {
    "name": "mergeHostAttribute"
  },
  {
    "name": "mergeHostAttrs"
  },
  {
    "name": "mergeMap"
  },
  {
    "name": "nativeAppendChild"
  },
  {
    "name": "nativeAppendOrInsertBefore"
  },
  {
    "name": "nativeInsertBefore"
  },
  {
    "name": "nativeParentNode"
  },
  {
    "name": "navigationCancelingError"
  },
  {
    "name": "nextBindingIndex"
  },
  {
    "name": "nextNgElementId"
  },
  {
    "name": "ngOnChangesSetInput"
  },
  {
    "name": "ngZoneInstanceId"
  },
  {
    "name": "noMatch"
  },
  {
    "name": "noMatch2"
  },
  {
    "name": "noSideEffects"
  },
  {
    "name": "nodeChildrenAsMap"
  },
  {
    "name": "nonNull"
  },
  {
    "name": "noop"
  },
  {
    "name": "noop2"
  },
  {
    "name": "normalizeQueryParams"
  },
  {
    "name": "notFoundValueOrThrow"
  },
  {
    "name": "observable"
  },
  {
    "name": "observeOn"
  },
  {
    "name": "of"
  },
  {
    "name": "onEnter"
  },
  {
    "name": "onLeave"
  },
  {
    "name": "operate"
  },
  {
    "name": "paramCompareMap"
  },
  {
    "name": "parseAndConvertBindingsForDefinition"
  },
  {
    "name": "pathCompareMap"
  },
  {
    "name": "pipeFromArray"
  },
  {
    "name": "policy"
  },
  {
    "name": "popScheduler"
  },
  {
    "name": "prioritizedGuardValue"
  },
  {
    "name": "processInjectorTypesWithProviders"
  },
  {
    "name": "producerAccessed"
  },
  {
    "name": "producerAddLiveConsumer"
  },
  {
    "name": "producerMarkClean"
  },
  {
    "name": "producerNotifyConsumers"
  },
  {
    "name": "producerRemoveLiveConsumerAtIndex"
  },
  {
    "name": "producerUpdateValueVersion"
  },
  {
    "name": "readableStreamLikeToAsyncGenerator"
  },
  {
    "name": "redirectIfUrlTree"
  },
  {
    "name": "redirectingNavigationError"
  },
  {
    "name": "refCount"
  },
  {
    "name": "refreshContentQueries"
  },
  {
    "name": "refreshView"
  },
  {
    "name": "registerPostOrderHooks"
  },
  {
    "name": "rememberChangeHistoryAndInvokeOnChangesHook"
  },
  {
    "name": "remove"
  },
  {
    "name": "removeElements"
  },
  {
    "name": "removeFromArray"
  },
  {
    "name": "renderComponent"
  },
  {
    "name": "renderStringify"
  },
  {
    "name": "renderView"
  },
  {
    "name": "replaceSegment"
  },
  {
    "name": "reportUnhandledError"
  },
  {
    "name": "requiresRefreshOrTraversal"
  },
  {
    "name": "resetPreOrderHookFlags"
  },
  {
    "name": "resolveForwardRef"
  },
  {
    "name": "rootRoute"
  },
  {
    "name": "routes"
  },
  {
    "name": "runEffectsInView"
  },
  {
    "name": "runInInjectionContext"
  },
  {
    "name": "saveNameToExportMap"
  },
  {
    "name": "scheduleAsyncIterable"
  },
  {
    "name": "scheduleCallbackWithMicrotask"
  },
  {
    "name": "scheduleCallbackWithRafRace"
  },
  {
    "name": "searchTokensOnInjector"
  },
  {
    "name": "serializeNode"
  },
  {
    "name": "serializePath"
  },
  {
    "name": "serializePaths"
  },
  {
    "name": "serializeSegment"
  },
  {
    "name": "setActiveConsumer"
  },
  {
    "name": "setBindingRootForHostBindings"
  },
  {
    "name": "setCurrentDirectiveIndex"
  },
  {
    "name": "setCurrentInjector"
  },
  {
    "name": "setCurrentQueryIndex"
  },
  {
    "name": "setCurrentTNode"
  },
  {
    "name": "setDirectiveInputsWhichShadowsStyling"
  },
  {
    "name": "setIncludeViewProviders"
  },
  {
    "name": "setInjectImplementation"
  },
  {
    "name": "setInputsForProperty"
  },
  {
    "name": "setInputsFromAttrs"
  },
  {
    "name": "setIsRefreshingViews"
  },
  {
    "name": "setRouterState"
  },
  {
    "name": "setSelectedIndex"
  },
  {
    "name": "setUpAttributes"
  },
  {
    "name": "setupStaticAttributes"
  },
  {
    "name": "shallowEqual"
  },
  {
    "name": "shimStylesContent"
  },
  {
    "name": "shouldAddViewToDom"
  },
  {
    "name": "shouldSearchParent"
  },
  {
    "name": "split"
  },
  {
    "name": "squashSegmentGroup"
  },
  {
    "name": "standardizeConfig"
  },
  {
    "name": "storeLViewOnDestroy"
  },
  {
    "name": "stringify"
  },
  {
    "name": "stringify11"
  },
  {
    "name": "stringifyCSSSelector"
  },
  {
    "name": "stripTrailingSlash"
  },
  {
    "name": "subscribeOn"
  },
  {
    "name": "subsetMatchOptions"
  },
  {
    "name": "switchMap"
  },
  {
    "name": "switchTap"
  },
  {
    "name": "symbolIterator"
  },
  {
    "name": "take"
  },
  {
    "name": "takeLast"
  },
  {
    "name": "tap"
  },
  {
    "name": "throwError2"
  },
  {
    "name": "throwIfEmpty"
  },
  {
    "name": "throwInvalidWriteToSignalErrorFn"
  },
  {
    "name": "throwProviderNotFoundError"
  },
  {
    "name": "timeoutProvider"
  },
  {
    "name": "toRefArray"
  },
  {
    "name": "trackMovedView"
  },
  {
    "name": "tree"
  },
  {
    "name": "trustedScriptURLFromStringBypass"
  },
  {
    "name": "uniqueIdCounter"
  },
  {
    "name": "unregisterLView"
  },
  {
    "name": "unwrapElementRef"
  },
  {
    "name": "unwrapRNode"
  },
  {
    "name": "unwrapSafeValue"
  },
  {
    "name": "updateAncestorTraversalFlagsOnAttach"
  },
  {
    "name": "updateMicroTaskStatus"
  },
  {
    "name": "updateSegmentGroup"
  },
  {
    "name": "updateSegmentGroupChildren"
  },
  {
    "name": "viewAttachedToChangeDetector"
  },
  {
    "name": "viewShouldHaveReactiveConsumer"
  },
  {
    "name": "walkProviderTree"
  },
  {
    "name": "wasLastNodeCreated"
  },
  {
    "name": "wrapIntoObservable"
  },
  {
    "name": "wrapListener"
  },
  {
    "name": "writeDirectClass"
  },
  {
    "name": "writeToDirectiveInput"
  },
  {
    "name": "{getPrototypeOf:getPrototypeOf,prototype:objectProto,keys:getKeys}"
  },
  {
    "name": "{isArray:isArray2}"
  },
  {
    "name": "{isArray:isArray}"
  },
  {
    "name": "ɵEmptyOutletComponent"
  },
  {
    "name": "ɵɵInputTransformsFeature"
  },
  {
    "name": "ɵɵNgOnChangesFeature"
  },
  {
    "name": "ɵɵattribute"
  },
  {
    "name": "ɵɵdefineComponent"
  },
  {
    "name": "ɵɵdefineDirective"
  },
  {
    "name": "ɵɵdefineInjectable"
  },
  {
    "name": "ɵɵdirectiveInject"
  },
  {
    "name": "ɵɵelement"
  },
  {
    "name": "ɵɵelementEnd"
  },
  {
    "name": "ɵɵelementStart"
  },
  {
    "name": "ɵɵgetInheritedFactory"
  },
  {
    "name": "ɵɵinject"
  },
  {
    "name": "ɵɵlistener"
  },
  {
    "name": "ɵɵsanitizeResourceUrl"
  },
  {
    "name": "ɵɵsanitizeUrl"
  },
  {
    "name": "ɵɵtext"
  },
  {
    "name": "ɵɵtextInterpolate1"
  }
]