{"version":3,"file":"test_bed_common.js","sourceRoot":"","sources":["test_bed_common.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EACL,cAAc,EAEd,mBAAmB,IAAI,kBAAkB,GAC1C,MAAM,gBAAgB,CAAC;AAExB,2DAA2D;AAC3D,MAAM,CAAC,MAAM,0CAA0C,GAAG,IAAI,CAAC;AAE/D,qEAAqE;AACrE,MAAM,CAAC,MAAM,iCAAiC,GAAG,KAAK,CAAC;AAEvD,uEAAuE;AACvE,MAAM,CAAC,MAAM,mCAAmC,GAAG,KAAK,CAAC;AAEzD,kFAAkF;AAClF,MAAM,CAAC,MAAM,4BAA4B,GAAG,kBAAkB,CAAC,WAAW,CAAC;AAE3E,kDAAkD;AAClD,MAAM,CAAC,MAAM,0BAA0B,GAAG,KAAK,CAAC;AAEhD;;;;GAIG;AACH,MAAM,OAAO,qBAAqB;IAChC,iBAAiB,CAAC,aAAqB,EAAE,OAAgB,IAAG,CAAC;IAC7D,qBAAqB,KAAK,CAAC;CAC5B;AAED;;GAEG;AACH,MAAM,CAAC,MAAM,0BAA0B,GAAG,IAAI,cAAc,CAAU,4BAA4B,CAAC,CAAC;AAEpG;;GAEG;AACH,MAAM,CAAC,MAAM,wBAAwB,GAAG,IAAI,cAAc,CAAU,0BAA0B,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  InjectionToken,\n  SchemaMetadata,\n  ÉµDeferBlockBehavior as DeferBlockBehavior,\n} from '../../src/core';\n\n/** Whether test modules should be torn down by default. */\nexport const TEARDOWN_TESTING_MODULE_ON_DESTROY_DEFAULT = true;\n\n/** Whether unknown elements in templates should throw by default. */\nexport const THROW_ON_UNKNOWN_ELEMENTS_DEFAULT = false;\n\n/** Whether unknown properties in templates should throw by default. */\nexport const THROW_ON_UNKNOWN_PROPERTIES_DEFAULT = false;\n\n/** Whether defer blocks should use manual triggering or play through normally. */\nexport const DEFER_BLOCK_DEFAULT_BEHAVIOR = DeferBlockBehavior.Playthrough;\n\n/** Whether animations are enabled or disabled. */\nexport const ANIMATIONS_ENABLED_DEFAULT = false;\n\n/**\n * An abstract class for inserting the root test component element in a platform independent way.\n *\n * @publicApi\n */\nexport class TestComponentRenderer {\n  insertRootElement(rootElementId: string, tagName?: string) {}\n  removeAllRootElements?() {}\n}\n\n/**\n * @publicApi\n */\nexport const ComponentFixtureAutoDetect = new InjectionToken<boolean>('ComponentFixtureAutoDetect');\n\n/**\n * @publicApi\n */\nexport const ComponentFixtureNoNgZone = new InjectionToken<boolean>('ComponentFixtureNoNgZone');\n\n/**\n * @publicApi\n */\nexport interface TestModuleMetadata {\n  providers?: any[];\n  declarations?: any[];\n  imports?: any[];\n  schemas?: Array<SchemaMetadata | any[]>;\n  teardown?: ModuleTeardownOptions;\n  /**\n   * Whether NG0304 runtime errors should be thrown when unknown elements are present in component's\n   * template. Defaults to `false`, where the error is simply logged. If set to `true`, the error is\n   * thrown.\n   * @see [NG8001](/errors/NG8001) for the description of the problem and how to fix it\n   */\n  errorOnUnknownElements?: boolean;\n  /**\n   * Whether errors should be thrown when unknown properties are present in component's template.\n   * Defaults to `false`, where the error is simply logged.\n   * If set to `true`, the error is thrown.\n   * @see [NG8002](/errors/NG8002) for the description of the error and how to fix it\n   */\n  errorOnUnknownProperties?: boolean;\n\n  /**\n   * Whether errors that happen during application change detection should be rethrown.\n   *\n   * When `true`, errors that are caught during application change detection will\n   * be reported to the `ErrorHandler` and rethrown to prevent them from going\n   * unnoticed in tests.\n   *\n   * When `false`, errors are only forwarded to the `ErrorHandler`, which by default\n   * simply logs them to the console.\n   *\n   * Defaults to `true`.\n   */\n  rethrowApplicationErrors?: boolean;\n\n  /**\n   * Whether defer blocks should behave with manual triggering or play through normally.\n   * Defaults to `manual`.\n   */\n  deferBlockBehavior?: DeferBlockBehavior;\n\n  /**\n   * Whether to infer the tag name of test components from their selectors.\n   * Otherwise `div` will be used as the tag name for test components.\n   */\n  inferTagName?: boolean;\n\n  /**\n   * Whether animate.enter / animate.leave should trigger as normal or be disabled.\n   * Defaults to `false`.\n   */\n  animationsEnabled?: boolean;\n}\n\n/**\n * @publicApi\n */\nexport interface TestEnvironmentOptions {\n  /**\n   * Configures the test module teardown behavior in `TestBed`.\n   */\n  teardown?: ModuleTeardownOptions;\n  /**\n   * Whether errors should be thrown when unknown elements are present in component's template.\n   * Defaults to `false`, where the error is simply logged.\n   * If set to `true`, the error is thrown.\n   * @see [NG8001](/errors/NG8001) for the description of the error and how to fix it\n   */\n  errorOnUnknownElements?: boolean;\n  /**\n   * Whether errors should be thrown when unknown properties are present in component's template.\n   * Defaults to `false`, where the error is simply logged.\n   * If set to `true`, the error is thrown.\n   * @see [NG8002](/errors/NG8002) for the description of the error and how to fix it\n   */\n  errorOnUnknownProperties?: boolean;\n}\n\n/**\n * Configures the test module teardown behavior in `TestBed`.\n * @publicApi\n */\nexport interface ModuleTeardownOptions {\n  /** Whether the test module should be destroyed after every test. Defaults to `true`. */\n  destroyAfterEach: boolean;\n\n  /** Whether errors during test module destruction should be re-thrown. Defaults to `true`. */\n  rethrowErrors?: boolean;\n}\n"]}