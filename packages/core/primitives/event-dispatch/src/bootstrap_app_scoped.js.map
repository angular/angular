{"version":3,"file":"bootstrap_app_scoped.js","sourceRoot":"","sources":["bootstrap_app_scoped.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,EAEL,SAAS,EACT,uBAAuB,EACvB,mBAAmB,EACnB,kBAAkB,EAClB,uBAAuB,GACxB,MAAM,sBAAsB,CAAC;AAG9B;;;GAGG;AACH,MAAM,UAAU,oCAAoC,CAClD,SAAsB,EACtB,KAAa,EACb,gBAA0B,EAC1B,iBAA2B,EAC3B,gBAA4C,MAAM;IAElD,MAAM,iBAAiB,GAAG,uBAAuB,CAAC,SAAS,CAAC,CAAC;IAC7D,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;QAC1B,aAAa,CAAC,MAAM,GAAG,EAAE,CAAC;IAC5B,CAAC;IACD,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,iBAAiB,CAAC;IAChD,SAAS,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;IAC/C,SAAS,CAAC,iBAAiB,EAAE,iBAAiB,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC;AACvE,CAAC;AAED,kGAAkG;AAClG,MAAM,UAAU,4BAA4B,CAC1C,KAAa,EACb,gBAA4C,MAAM;IAElD,OAAO,mBAAmB,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5D,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,2BAA2B,CACzC,WAAwB,EACxB,KAAa,EACb,UAA0C,EAC1C,gBAA4C,MAAM;IAElD,kBAAkB,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAAC;AAChE,CAAC;AAED,2CAA2C;AAC3C,MAAM,UAAU,gCAAgC,CAC9C,KAAa,EACb,gBAA4C,MAAM;IAElD,uBAAuB,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACzD,CAAC;AAED,sCAAsC;AACtC,MAAM,UAAU,gCAAgC,CAC9C,KAAa,EACb,gBAA4C,MAAM;IAElD,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;QAC1B,OAAO;IACT,CAAC;IACD,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;AAC1C,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Restriction} from './restriction';\nimport {\n  EarlyJsactionDataContainer,\n  addEvents,\n  createEarlyJsactionData,\n  getQueuedEventInfos,\n  registerDispatcher,\n  removeAllEventListeners,\n} from './earlyeventcontract';\nimport {EventInfo} from './event_info';\n\n/**\n * Creates an `EarlyJsactionData`, adds events to it, and populates it on a nested object on\n * the window.\n */\nexport function bootstrapAppScopedEarlyEventContract(\n  container: HTMLElement,\n  appId: string,\n  bubbleEventTypes: string[],\n  captureEventTypes: string[],\n  dataContainer: EarlyJsactionDataContainer = window,\n) {\n  const earlyJsactionData = createEarlyJsactionData(container);\n  if (!dataContainer._ejsas) {\n    dataContainer._ejsas = {};\n  }\n  dataContainer._ejsas[appId] = earlyJsactionData;\n  addEvents(earlyJsactionData, bubbleEventTypes);\n  addEvents(earlyJsactionData, captureEventTypes, /* capture= */ true);\n}\n\n/** Get the queued `EventInfo` objects that were dispatched before a dispatcher was registered. */\nexport function getAppScopedQueuedEventInfos(\n  appId: string,\n  dataContainer: EarlyJsactionDataContainer = window,\n) {\n  return getQueuedEventInfos(dataContainer._ejsas?.[appId]);\n}\n\n/**\n * Registers a dispatcher function on the `EarlyJsactionData` present on the nested object on the\n * window.\n */\nexport function registerAppScopedDispatcher(\n  restriction: Restriction,\n  appId: string,\n  dispatcher: (eventInfo: EventInfo) => void,\n  dataContainer: EarlyJsactionDataContainer = window,\n) {\n  registerDispatcher(dataContainer._ejsas?.[appId], dispatcher);\n}\n\n/** Removes all event listener handlers. */\nexport function removeAllAppScopedEventListeners(\n  appId: string,\n  dataContainer: EarlyJsactionDataContainer = window,\n) {\n  removeAllEventListeners(dataContainer._ejsas?.[appId]);\n}\n\n/** Clear the early event contract. */\nexport function clearAppScopedEarlyEventContract(\n  appId: string,\n  dataContainer: EarlyJsactionDataContainer = window,\n) {\n  if (!dataContainer._ejsas) {\n    return;\n  }\n  dataContainer._ejsas[appId] = undefined;\n}\n"]}