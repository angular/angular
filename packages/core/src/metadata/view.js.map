{"version":3,"file":"view.js","sourceRoot":"","sources":["view.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH;;;;;;;;;;;;GAYG;AACH,MAAM,CAAN,IAAY,iBAkCX;AAlCD,WAAY,iBAAiB;IAC3B,wEAAwE;IACxE,8EAA8E;IAE9E;;;;;;OAMG;IACH,iEAAY,CAAA;IAEZ,4FAA4F;IAE5F;;;;OAIG;IACH,yDAAQ,CAAA;IAER;;;;OAIG;IACH,mEAAa,CAAA;IACb;;;;OAIG;IACH,mFAAqB,CAAA;AACvB,CAAC,EAlCW,iBAAiB,KAAjB,iBAAiB,QAkC5B","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n/**\n * Defines the CSS styles encapsulation policies for the {@link /api/core/Component Component} decorator's\n * `encapsulation` option.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/ts/metadata/encapsulation.ts region='longform'}\n *\n * @publicApi\n */\nexport enum ViewEncapsulation {\n  // TODO: consider making `ViewEncapsulation` a `const enum` instead. See\n  // https://github.com/angular/angular/issues/44119 for additional information.\n\n  /**\n   * Emulates a native Shadow DOM encapsulation behavior by adding a specific attribute to the\n   * component's host element and applying the same attribute to all the CSS selectors provided\n   * via {@link Component#styles styles} or {@link Component#styleUrls styleUrls}.\n   *\n   * This is the default option.\n   */\n  Emulated = 0,\n\n  // Historically the 1 value was for `Native` encapsulation which has been removed as of v11.\n\n  /**\n   * Doesn't provide any sort of CSS style encapsulation, meaning that all the styles provided\n   * via {@link Component#styles styles} or {@link Component#styleUrls styleUrls} are applicable\n   * to any HTML element of the application regardless of their host Component.\n   */\n  None = 2,\n\n  /**\n   * Uses the browser's native Shadow DOM API to encapsulate CSS styles, meaning that it creates\n   * a ShadowRoot for the component's host element which is then used to encapsulate\n   * all the Component's styling.\n   */\n  ShadowDom = 3,\n  /**\n   * Similar to `ShadowDom`, but prevents any external styles from leaking into the\n   * component's ShadowRoot. This is useful when you want to ensure that the component's\n   * styles are completely isolated from the rest of the application, including global styles.\n   */\n  IsolatedShadowDom = 4,\n}\n"]}