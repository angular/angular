{"version":3,"file":"iframe_attrs_validation.js","sourceRoot":"","sources":["iframe_attrs_validation.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAC,YAAY,EAAmB,MAAM,WAAW,CAAC;AACzD,OAAO,EAAC,0BAA0B,EAAC,MAAM,4CAA4C,CAAC;AAGtF,OAAO,EAAC,QAAQ,EAAC,MAAM,4BAA4B,CAAC;AACpD,OAAO,EAAC,gBAAgB,EAAC,MAAM,kCAAkC,CAAC;AAClE,OAAO,EAAC,QAAQ,EAAE,gBAAgB,EAAC,MAAM,kBAAkB,CAAC;AAC5D,OAAO,EAAC,gBAAgB,EAAC,MAAM,4BAA4B,CAAC;AAC5D,OAAO,EAAC,qBAAqB,EAAC,MAAM,gCAAgC,CAAC;AAErE;;;;;;;;GAQG;AACH,MAAM,UAAU,yBAAyB,CAAC,SAAc,EAAE,OAAe,EAAE,QAAgB;IACzF,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;IACzB,MAAM,KAAK,GAAG,gBAAgB,EAAG,CAAC;IAClC,MAAM,OAAO,GAAG,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAwB,CAAC;IAEtE,4EAA4E;IAC5E,uCAAuC;IACvC,IAAI,KAAK,CAAC,IAAI,8BAAsB,IAAI,OAAO,CAAC,WAAW,EAAE,KAAK,QAAQ,EAAE,CAAC;QAC3E,MAAM,MAAM,GAAG,OAA4B,CAAC;QAE5C,iFAAiF;QACjF,iFAAiF;QACjF,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC;QAChB,MAAM,CAAC,MAAM,GAAG,qBAAqB,CAAC,EAAE,CAAsB,CAAC;QAE/D,8CAA8C;QAC9C,gBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC;QAE1C,MAAM,YAAY,GAChB,SAAS;YACT,mCAAmC,QAAQ,iBAAiB;gBAC1D,8BAA8B,0BAA0B,CAAC,KAAK,CAAC,IAAI;gBACnE,+BAA+B,QAAQ,+BAA+B;gBACtE,gCAAgC;gBAChC,6BAA6B,QAAQ,mCAAmC;gBACxE,4CAA4C,CAAC;QACjD,MAAM,IAAI,YAAY,kDAAuC,YAAY,CAAC,CAAC;IAC7E,CAAC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {getTemplateLocationDetails} from '../render3/instructions/element_validation';\nimport {TNodeType} from '../render3/interfaces/node';\nimport {RComment, RElement} from '../render3/interfaces/renderer_dom';\nimport {RENDERER} from '../render3/interfaces/view';\nimport {nativeRemoveNode} from '../render3/dom_node_manipulation';\nimport {getLView, getSelectedTNode} from '../render3/state';\nimport {getNativeByTNode} from '../render3/util/view_utils';\nimport {trustedHTMLFromString} from '../util/security/trusted_types';\n\n/**\n * Validation function invoked at runtime for each binding that might potentially\n * represent a security-sensitive attribute of an <iframe>.\n * See `IFRAME_SECURITY_SENSITIVE_ATTRS` in the\n * `packages/compiler/src/schema/dom_security_schema.ts` script for the full list\n * of such attributes.\n *\n * @codeGenApi\n */\nexport function ɵɵvalidateIframeAttribute(attrValue: any, tagName: string, attrName: string) {\n  const lView = getLView();\n  const tNode = getSelectedTNode()!;\n  const element = getNativeByTNode(tNode, lView) as RElement | RComment;\n\n  // Restrict any dynamic bindings of security-sensitive attributes/properties\n  // on an <iframe> for security reasons.\n  if (tNode.type === TNodeType.Element && tagName.toLowerCase() === 'iframe') {\n    const iframe = element as HTMLIFrameElement;\n\n    // Unset previously applied `src` and `srcdoc` if we come across a situation when\n    // a security-sensitive attribute is set later via an attribute/property binding.\n    iframe.src = '';\n    iframe.srcdoc = trustedHTMLFromString('') as unknown as string;\n\n    // Also remove the <iframe> from the document.\n    nativeRemoveNode(lView[RENDERER], iframe);\n\n    const errorMessage =\n      ngDevMode &&\n      `Angular has detected that the \\`${attrName}\\` was applied ` +\n        `as a binding to an <iframe>${getTemplateLocationDetails(lView)}. ` +\n        `For security reasons, the \\`${attrName}\\` can be set on an <iframe> ` +\n        `as a static attribute only. \\n` +\n        `To fix this, switch the \\`${attrName}\\` binding to a static attribute ` +\n        `in a template or in host bindings section.`;\n    throw new RuntimeError(RuntimeErrorCode.UNSAFE_IFRAME_ATTRS, errorMessage);\n  }\n  return attrValue;\n}\n"]}