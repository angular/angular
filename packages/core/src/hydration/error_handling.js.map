{"version":3,"file":"error_handling.js","sourceRoot":"","sources":["error_handling.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {getDeclarationComponentDef} from '../render3/instructions/element_validation';\nimport {TNode, TNodeType} from '../render3/interfaces/node';\nimport {RNode} from '../render3/interfaces/renderer_dom';\nimport {HOST, LView, TVIEW} from '../render3/interfaces/view';\nimport {getParentRElement} from '../render3/node_manipulation';\nimport {unwrapRNode} from '../render3/util/view_utils';\n\nimport {markRNodeAsHavingHydrationMismatch} from './utils';\n\nconst AT_THIS_LOCATION = '<-- AT THIS LOCATION';\n\n/**\n * Retrieves a user friendly string for a given TNodeType for use in\n * friendly error messages\n *\n * @param tNodeType\n * @returns\n */\nfunction getFriendlyStringFromTNodeType(tNodeType: TNodeType): string {\n  switch (tNodeType) {\n    case TNodeType.Container:\n      return 'view container';\n    case TNodeType.Element:\n      return 'element';\n    case TNodeType.ElementContainer:\n      return 'ng-container';\n    case TNodeType.Icu:\n      return 'icu';\n    case TNodeType.Placeholder:\n      return 'i18n';\n    case TNodeType.Projection:\n      return 'projection';\n    case TNodeType.Text:\n      return 'text';\n    case TNodeType.LetDeclaration:\n      return '@let';\n    default:\n      // This should not happen as we cover all possible TNode types above.\n      return '<unknown>';\n  }\n}\n\n/**\n * Validates that provided nodes match during the hydration process.\n */\nexport function validateMatchingNode(\n  node: RNode | null,\n  nodeType: number,\n  tagName: string | null,\n  lView: LView,\n  tNode: TNode,\n  isViewContainerAnchor = false,\n): void {\n  if (\n    !node ||\n    (node as Node).nodeType !== nodeType ||\n    ((node as Node).nodeType === Node.ELEMENT_NODE &&\n      (node as HTMLElement).tagName.toLowerCase() !== tagName?.toLowerCase())\n  ) {\n    const expectedNode = shortRNodeDescription(nodeType, tagName, null);\n    let header = `During hydration Angular expected ${expectedNode} but `;\n\n    const hostComponentDef = getDeclarationComponentDef(lView);\n    const componentClassName = hostComponentDef?.type?.name;\n\n    const expectedDom = describeExpectedDom(lView, tNode, isViewContainerAnchor);\n    const expected = `Angular expected this DOM:\\n\\n${expectedDom}\\n\\n`;\n\n    let actual = '';\n    const componentHostElement = unwrapRNode(lView[HOST]!);\n    if (!node) {\n      // No node found during hydration.\n      header += `the node was not found.\\n\\n`;\n\n      // Since the node is missing, we use the closest node to attach the error to\n      markRNodeAsHavingHydrationMismatch(componentHostElement, expectedDom);\n    } else {\n      const actualNode = shortRNodeDescription(\n        (node as Node).nodeType,\n        (node as HTMLElement).tagName ?? null,\n        (node as HTMLElement).textContent ?? null,\n      );\n\n      header += `found ${actualNode}.\\n\\n`;\n      const actualDom = describeDomFromNode(node);\n      actual = `Actual DOM is:\\n\\n${actualDom}\\n\\n`;\n\n      // DevTools only report hydration issues on the component level, so we attach extra debug\n      // info to a component host element to make it available to DevTools.\n      markRNodeAsHavingHydrationMismatch(componentHostElement, expectedDom, actualDom);\n    }\n\n    const footer = getHydrationErrorFooter(componentClassName);\n    const message = header + expected + actual + getHydrationAttributeNote() + footer;\n    throw new RuntimeError(RuntimeErrorCode.HYDRATION_NODE_MISMATCH, message);\n  }\n}\n\n/**\n * Validates that a given node has sibling nodes\n */\nexport function validateSiblingNodeExists(node: RNode | null): void {\n  validateNodeExists(node);\n  if (!node!.nextSibling) {\n    const header = 'During hydration Angular expected more sibling nodes to be present.\\n\\n';\n    const actual = `Actual DOM is:\\n\\n${describeDomFromNode(node!)}\\n\\n`;\n    const footer = getHydrationErrorFooter();\n\n    const message = header + actual + footer;\n\n    markRNodeAsHavingHydrationMismatch(node!, '', actual);\n    throw new RuntimeError(RuntimeErrorCode.HYDRATION_MISSING_SIBLINGS, message);\n  }\n}\n\n/**\n * Validates that a node exists or throws\n */\nexport function validateNodeExists(\n  node: RNode | null,\n  lView: LView | null = null,\n  tNode: TNode | null = null,\n): void {\n  if (!node) {\n    const header =\n      'During hydration, Angular expected an element to be present at this location.\\n\\n';\n    let expected = '';\n    let footer = '';\n    if (lView !== null && tNode !== null) {\n      expected = describeExpectedDom(lView, tNode, false);\n      footer = getHydrationErrorFooter();\n\n      // Since the node is missing, we use the closest node to attach the error to\n      markRNodeAsHavingHydrationMismatch(unwrapRNode(lView[HOST]!), expected, '');\n    }\n\n    throw new RuntimeError(\n      RuntimeErrorCode.HYDRATION_MISSING_NODE,\n      `${header}${expected}\\n\\n${footer}`,\n    );\n  }\n}\n\n/**\n * Builds the hydration error message when a node is not found\n *\n * @param lView the LView where the node exists\n * @param tNode the TNode\n */\nexport function nodeNotFoundError(lView: LView, tNode: TNode): Error {\n  const header = 'During serialization, Angular was unable to find an element in the DOM:\\n\\n';\n  const expected = `${describeExpectedDom(lView, tNode, false)}\\n\\n`;\n  const footer = getHydrationErrorFooter();\n\n  throw new RuntimeError(RuntimeErrorCode.HYDRATION_MISSING_NODE, header + expected + footer);\n}\n\n/**\n * Builds a hydration error message when a node is not found at a path location\n *\n * @param host the Host Node\n * @param path the path to the node\n */\nexport function nodeNotFoundAtPathError(host: Node, path: string): Error {\n  const header =\n    `During hydration Angular was unable to locate a node ` +\n    `using the \"${path}\" path, starting from the ${describeRNode(host)} node.\\n\\n`;\n  const footer = getHydrationErrorFooter();\n\n  markRNodeAsHavingHydrationMismatch(host);\n  throw new RuntimeError(RuntimeErrorCode.HYDRATION_MISSING_NODE, header + footer);\n}\n\n/**\n * Builds the hydration error message in the case that dom nodes are created outside of\n * the Angular context and are being used as projected nodes\n *\n * @param lView the LView\n * @param tNode the TNode\n * @returns an error\n */\nexport function unsupportedProjectionOfDomNodes(rNode: RNode): Error {\n  const header =\n    'During serialization, Angular detected DOM nodes ' +\n    'that were created outside of Angular context and provided as projectable nodes ' +\n    '(likely via `ViewContainerRef.createComponent` or `createComponent` APIs). ' +\n    'Hydration is not supported for such cases, consider refactoring the code to avoid ' +\n    'this pattern or using `ngSkipHydration` on the host element of the component.\\n\\n';\n  const actual = `${describeDomFromNode(rNode)}\\n\\n`;\n  const message = header + actual + getHydrationAttributeNote();\n  return new RuntimeError(RuntimeErrorCode.UNSUPPORTED_PROJECTION_DOM_NODES, message);\n}\n\n/**\n * Builds the hydration error message in the case that ngSkipHydration was used on a\n * node that is not a component host element or host binding\n *\n * @param rNode the HTML Element\n * @returns an error\n */\nexport function invalidSkipHydrationHost(rNode: RNode): Error {\n  const header =\n    'The `ngSkipHydration` flag is applied on a node ' +\n    \"that doesn't act as a component host. Hydration can be \" +\n    'skipped only on per-component basis.\\n\\n';\n  const actual = `${describeDomFromNode(rNode)}\\n\\n`;\n  const footer = 'Please move the `ngSkipHydration` attribute to the component host element.\\n\\n';\n  const message = header + actual + footer;\n  return new RuntimeError(RuntimeErrorCode.INVALID_SKIP_HYDRATION_HOST, message);\n}\n\n// Stringification methods\n\n/**\n * Stringifies a given TNode's attributes\n *\n * @param tNode a provided TNode\n * @returns string\n */\nfunction stringifyTNodeAttrs(tNode: TNode): string {\n  const results = [];\n  if (tNode.attrs) {\n    for (let i = 0; i < tNode.attrs.length; ) {\n      const attrName = tNode.attrs[i++];\n      // Once we reach the first flag, we know that the list of\n      // attributes is over.\n      if (typeof attrName == 'number') {\n        break;\n      }\n      const attrValue = tNode.attrs[i++];\n      results.push(`${attrName}=\"${shorten(attrValue as string)}\"`);\n    }\n  }\n  return results.join(' ');\n}\n\n/**\n * The list of internal attributes that should be filtered out while\n * producing an error message.\n */\nconst internalAttrs = new Set(['ngh', 'ng-version', 'ng-server-context']);\n\n/**\n * Stringifies an HTML Element's attributes\n *\n * @param rNode an HTML Element\n * @returns string\n */\nfunction stringifyRNodeAttrs(rNode: HTMLElement): string {\n  const results = [];\n  for (let i = 0; i < rNode.attributes.length; i++) {\n    const attr = rNode.attributes[i];\n    if (internalAttrs.has(attr.name)) continue;\n    results.push(`${attr.name}=\"${shorten(attr.value)}\"`);\n  }\n  return results.join(' ');\n}\n\n// Methods for Describing the DOM\n\n/**\n * Converts a tNode to a helpful readable string value for use in error messages\n *\n * @param tNode a given TNode\n * @param innerContent the content of the node\n * @returns string\n */\nfunction describeTNode(tNode: TNode, innerContent: string = '…'): string {\n  switch (tNode.type) {\n    case TNodeType.Text:\n      const content = tNode.value ? `(${tNode.value})` : '';\n      return `#text${content}`;\n    case TNodeType.Element:\n      const attrs = stringifyTNodeAttrs(tNode);\n      const tag = tNode.value.toLowerCase();\n      return `<${tag}${attrs ? ' ' + attrs : ''}>${innerContent}</${tag}>`;\n    case TNodeType.ElementContainer:\n      return '<!-- ng-container -->';\n    case TNodeType.Container:\n      return '<!-- container -->';\n    default:\n      const typeAsString = getFriendlyStringFromTNodeType(tNode.type);\n      return `#node(${typeAsString})`;\n  }\n}\n\n/**\n * Converts an RNode to a helpful readable string value for use in error messages\n *\n * @param rNode a given RNode\n * @param innerContent the content of the node\n * @returns string\n */\nfunction describeRNode(rNode: RNode, innerContent: string = '…'): string {\n  const node = rNode as HTMLElement;\n  switch (node.nodeType) {\n    case Node.ELEMENT_NODE:\n      const tag = node.tagName!.toLowerCase();\n      const attrs = stringifyRNodeAttrs(node);\n      return `<${tag}${attrs ? ' ' + attrs : ''}>${innerContent}</${tag}>`;\n    case Node.TEXT_NODE:\n      const content = node.textContent ? shorten(node.textContent) : '';\n      return `#text${content ? `(${content})` : ''}`;\n    case Node.COMMENT_NODE:\n      return `<!-- ${shorten(node.textContent ?? '')} -->`;\n    default:\n      return `#node(${node.nodeType})`;\n  }\n}\n\n/**\n * Builds the string containing the expected DOM present given the LView and TNode\n * values for a readable error message\n *\n * @param lView the lView containing the DOM\n * @param tNode the tNode\n * @param isViewContainerAnchor boolean\n * @returns string\n */\nfunction describeExpectedDom(lView: LView, tNode: TNode, isViewContainerAnchor: boolean): string {\n  const spacer = '  ';\n  let content = '';\n  if (tNode.prev) {\n    content += spacer + '…\\n';\n    content += spacer + describeTNode(tNode.prev) + '\\n';\n  } else if (tNode.type && tNode.type & TNodeType.AnyContainer) {\n    content += spacer + '…\\n';\n  }\n  if (isViewContainerAnchor) {\n    content += spacer + describeTNode(tNode) + '\\n';\n    content += spacer + `<!-- container -->  ${AT_THIS_LOCATION}\\n`;\n  } else {\n    content += spacer + describeTNode(tNode) + `  ${AT_THIS_LOCATION}\\n`;\n  }\n  content += spacer + '…\\n';\n\n  const parentRNode = tNode.type ? getParentRElement(lView[TVIEW], tNode, lView) : null;\n  if (parentRNode) {\n    content = describeRNode(parentRNode as unknown as Node, '\\n' + content);\n  }\n  return content;\n}\n\n/**\n * Builds the string containing the DOM present around a given RNode for a\n * readable error message\n *\n * @param node the RNode\n * @returns string\n */\nfunction describeDomFromNode(node: RNode): string {\n  const spacer = '  ';\n  let content = '';\n  const currentNode = node as HTMLElement;\n  if (currentNode.previousSibling) {\n    content += spacer + '…\\n';\n    content += spacer + describeRNode(currentNode.previousSibling) + '\\n';\n  }\n  content += spacer + describeRNode(currentNode) + `  ${AT_THIS_LOCATION}\\n`;\n  if (node.nextSibling) {\n    content += spacer + '…\\n';\n  }\n  if (node.parentNode) {\n    content = describeRNode(currentNode.parentNode as Node, '\\n' + content);\n  }\n  return content;\n}\n\n/**\n * Shortens the description of a given RNode by its type for readability\n *\n * @param nodeType the type of node\n * @param tagName the node tag name\n * @param textContent the text content in the node\n * @returns string\n */\nfunction shortRNodeDescription(\n  nodeType: number,\n  tagName: string | null,\n  textContent: string | null,\n): string {\n  switch (nodeType) {\n    case Node.ELEMENT_NODE:\n      return `<${tagName!.toLowerCase()}>`;\n    case Node.TEXT_NODE:\n      const content = textContent ? ` (with the \"${shorten(textContent)}\" content)` : '';\n      return `a text node${content}`;\n    case Node.COMMENT_NODE:\n      return 'a comment node';\n    default:\n      return `#node(nodeType=${nodeType})`;\n  }\n}\n\n/**\n * Builds the footer hydration error message\n *\n * @param componentClassName the name of the component class\n * @returns string\n */\nfunction getHydrationErrorFooter(componentClassName?: string): string {\n  const componentInfo = componentClassName ? `the \"${componentClassName}\"` : 'corresponding';\n  return (\n    `To fix this problem:\\n` +\n    `  * check ${componentInfo} component for hydration-related issues\\n` +\n    `  * check to see if your template has valid HTML structure\\n` +\n    `  * or skip hydration by adding the \\`ngSkipHydration\\` attribute ` +\n    `to its host node in a template\\n\\n`\n  );\n}\n\n/**\n * An attribute related note for hydration errors\n */\nfunction getHydrationAttributeNote(): string {\n  return (\n    'Note: attributes are only displayed to better represent the DOM' +\n    ' but have no effect on hydration mismatches.\\n\\n'\n  );\n}\n\n// Node string utility functions\n\n/**\n * Strips all newlines out of a given string\n *\n * @param input a string to be cleared of new line characters\n * @returns\n */\nfunction stripNewlines(input: string): string {\n  return input.replace(/\\s+/gm, '');\n}\n\n/**\n * Reduces a string down to a maximum length of characters with ellipsis for readability\n *\n * @param input a string input\n * @param maxLength a maximum length in characters\n * @returns string\n */\nfunction shorten(input: string | null, maxLength = 50): string {\n  if (!input) {\n    return '';\n  }\n  input = stripNewlines(input);\n  return input.length > maxLength ? `${input.substring(0, maxLength - 1)}…` : input;\n}\n"]}