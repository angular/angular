{"version":3,"file":"property.js","sourceRoot":"","sources":["property.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,MAAM,UAAU,sBAAsB,CAAI,wBAA2B;IACnE,KAAK,IAAI,GAAG,IAAI,wBAAwB,EAAE,CAAC;QACzC,IAAI,wBAAwB,CAAC,GAAG,CAAC,KAAM,sBAA8B,EAAE,CAAC;YACtE,OAAO,GAAG,CAAC;QACb,CAAC;IACH,CAAC;IACD,sEAAsE;IACtE,0CAA0C;IAC1C,MAAM,KAAK,CACT,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS;QAC3C,CAAC,CAAC,mDAAmD;QACrD,CAAC,CAAC,EAAE,CACP,CAAC;AACJ,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,cAAc,CAAC,MAA+B,EAAE,MAA+B;IAC7F,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC;YAC9D,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC;IACH,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nexport function getClosureSafeProperty<T>(objWithPropertyToExtract: T): string {\n  for (let key in objWithPropertyToExtract) {\n    if (objWithPropertyToExtract[key] === (getClosureSafeProperty as any)) {\n      return key;\n    }\n  }\n  // Cannot change it to `RuntimeError` because the `util` target cannot\n  // circularly depend on the `core` target.\n  throw Error(\n    typeof ngDevMode !== 'undefined' && ngDevMode\n      ? 'Could not find renamed property on target object.'\n      : '',\n  );\n}\n\n/**\n * Sets properties on a target object from a source object, but only if\n * the property doesn't already exist on the target object.\n * @param target The target to set properties on\n * @param source The source of the property keys and values to set\n */\nexport function fillProperties(target: Record<string, unknown>, source: Record<string, unknown>) {\n  for (const key in source) {\n    if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n"]}