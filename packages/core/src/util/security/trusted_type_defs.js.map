{"version":3,"file":"trusted_type_defs.js","sourceRoot":"","sources":["trusted_type_defs.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n/**\n * @fileoverview\n * While Angular only uses Trusted Types internally for the time being,\n * references to Trusted Types could leak into our core.d.ts, which would force\n * anyone compiling against @angular/core to provide the @types/trusted-types\n * package in their compilation unit.\n *\n * Until https://github.com/microsoft/TypeScript/issues/30024 is resolved, we\n * will keep Angular's public API surface free of references to Trusted Types.\n * For internal and semi-private APIs that need to reference Trusted Types, the\n * minimal type definitions for the Trusted Types API provided by this module\n * should be used instead. They are marked as \"declare\" to prevent them from\n * being renamed by compiler optimization.\n *\n * Adapted from\n * https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/trusted-types/index.d.ts\n * but restricted to the API surface used within Angular.\n */\n\nexport type TrustedHTML = string & {\n  __brand__: 'TrustedHTML';\n};\nexport type TrustedScript = string & {\n  __brand__: 'TrustedScript';\n};\nexport type TrustedScriptURL = string & {\n  __brand__: 'TrustedScriptURL';\n};\n\nexport interface TrustedTypePolicyFactory {\n  createPolicy(\n    policyName: string,\n    policyOptions: {\n      createHTML?: (input: string) => string;\n      createScript?: (input: string) => string;\n      createScriptURL?: (input: string) => string;\n    },\n  ): TrustedTypePolicy;\n  getAttributeType(tagName: string, attribute: string): string | null;\n}\n\nexport interface TrustedTypePolicy {\n  createHTML(input: string): TrustedHTML;\n  createScript(input: string): TrustedScript;\n  createScriptURL(input: string): TrustedScriptURL;\n}\n"]}