{"version":3,"file":"apply_value_input_field.js","sourceRoot":"","sources":["apply_value_input_field.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAIH,MAAM,UAAU,sBAAsB,CACpC,QAAW,EACX,eAAyD,EACzD,WAAmB,EACnB,KAAc;IAEd,IAAI,eAAe,KAAK,IAAI,EAAE,CAAC;QAC7B,eAAe,CAAC,uBAAuB,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;IAClE,CAAC;SAAM,CAAC;QACL,QAAgB,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;IACzC,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {InputSignalNode} from '../authoring/input/input_signal_node';\n\nexport function applyValueToInputField<T>(\n  instance: T,\n  inputSignalNode: null | InputSignalNode<unknown, unknown>,\n  privateName: string,\n  value: unknown,\n) {\n  if (inputSignalNode !== null) {\n    inputSignalNode.applyValueToInputSignal(inputSignalNode, value);\n  } else {\n    (instance as any)[privateName] = value;\n  }\n}\n"]}