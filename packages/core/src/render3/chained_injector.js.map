{"version":3,"file":"chained_injector.js","sourceRoot":"","sources":["chained_injector.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAKH,OAAO,EAAC,qCAAqC,EAAC,MAAM,wBAAwB,CAAC;AAE7E;;;GAGG;AACH,MAAM,OAAO,eAAe;IAC1B,YACS,QAAkB,EAClB,cAAwB;QADxB,aAAQ,GAAR,QAAQ,CAAU;QAClB,mBAAc,GAAd,cAAc,CAAU;IAC9B,CAAC;IAEJ,GAAG,CAAI,KAAuB,EAAE,aAAiB,EAAE,OAAuB;QACxE,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAC7B,KAAK,EACL,qCAAqC,EACrC,OAAO,CACR,CAAC;QAEF,IACE,KAAK,KAAK,qCAAqC;YAC/C,aAAa,KAAM,qCAAsD,EACzE,CAAC;YACD,uDAAuD;YACvD,mBAAmB;YACnB,sDAAsD;YACtD,8CAA8C;YAC9C,8DAA8D;YAC9D,OAAO,KAAU,CAAC;QACpB,CAAC;QAED,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAChE,CAAC;CACF","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Injector} from '../di/injector';\nimport {InjectOptions} from '../di/interface/injector';\nimport {ProviderToken} from '../di/provider_token';\nimport {NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR} from '../view/provider_flags';\n\n/**\n * Injector that looks up a value using a specific injector, before falling back to the module\n * injector. Used primarily when creating components or embedded views dynamically.\n */\nexport class ChainedInjector implements Injector {\n  constructor(\n    public injector: Injector,\n    public parentInjector: Injector,\n  ) {}\n\n  get<T>(token: ProviderToken<T>, notFoundValue?: T, options?: InjectOptions): T {\n    const value = this.injector.get<T | typeof NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR>(\n      token,\n      NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR,\n      options,\n    );\n\n    if (\n      value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n      notFoundValue === (NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as unknown as T)\n    ) {\n      // Return the value from the root element injector when\n      // - it provides it\n      //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n      // - the module injector should not be checked\n      //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n      return value as T;\n    }\n\n    return this.parentInjector.get(token, notFoundValue, options);\n  }\n}\n"]}