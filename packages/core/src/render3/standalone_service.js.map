{"version":3,"file":"standalone_service.js","sourceRoot":"","sources":["standalone_service.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,OAAO,EAAC,QAAQ,IAAI,MAAM,EAAC,MAAM,8BAA8B,CAAC;AAChE,OAAO,EAAC,kBAAkB,IAAI,gBAAgB,EAAC,MAAM,sBAAsB,CAAC;AAC5E,OAAO,EAAC,2BAA2B,EAAC,MAAM,2BAA2B,CAAC;AACtE,OAAO,EAAC,mBAAmB,EAAC,MAAM,mBAAmB,CAAC;AAGtD,OAAO,EAAC,yBAAyB,EAAC,MAAM,iBAAiB,CAAC;AAE1D;;;;GAIG;AACH,MAAM,OAAO,iBAAiB;IAG5B,YAAoB,SAA8B;QAA9B,cAAS,GAAT,SAAS,CAAqB;QAFlD,oBAAe,GAAG,IAAI,GAAG,EAAqD,CAAC;IAE1B,CAAC;IAEtD,6BAA6B,CAAC,YAAmC;QAC/D,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;YAC7B,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC;YAC5C,MAAM,SAAS,GAAG,2BAA2B,CAAC,KAAK,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;YACxE,MAAM,kBAAkB,GACtB,SAAS,CAAC,MAAM,GAAG,CAAC;gBAClB,CAAC,CAAC,yBAAyB,CACvB,CAAC,SAAS,CAAC,EACX,IAAI,CAAC,SAAS,EACd,cAAc,YAAY,CAAC,IAAI,CAAC,IAAI,GAAG,CACxC;gBACH,CAAC,CAAC,IAAI,CAAC;YACX,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;QAC7D,CAAC;QAED,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC;IACjD,CAAC;IAED,WAAW;QACT,IAAI,CAAC;YACH,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,EAAE,CAAC;gBACrD,IAAI,QAAQ,KAAK,IAAI,EAAE,CAAC;oBACtB,QAAQ,CAAC,OAAO,EAAE,CAAC;gBACrB,CAAC;YACH,CAAC;QACH,CAAC;gBAAS,CAAC;YACT,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAC/B,CAAC;IACH,CAAC;;AAED,kBAAkB;AACX,uBAAK,GAA6C,gBAAgB,CAAC;IACxE,KAAK,EAAE,iBAAiB;IACxB,UAAU,EAAE,aAAa;IACzB,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,iBAAiB,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;CAClE,CAAC,AAJU,CAIT","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\nimport {ɵɵinject as inject} from '../di/injector_compatibility';\nimport {ɵɵdefineInjectable as defineInjectable} from '../di/interface/defs';\nimport {internalImportProvidersFrom} from '../di/provider_collection';\nimport {EnvironmentInjector} from '../di/r3_injector';\nimport {OnDestroy} from '../interface/lifecycle_hooks';\nimport {ComponentDef} from './interfaces/definition';\nimport {createEnvironmentInjector} from './ng_module_ref';\n\n/**\n * A service used by the framework to create instances of standalone injectors. Those injectors are\n * created on demand in case of dynamic component instantiation and contain ambient providers\n * collected from the imports graph rooted at a given standalone component.\n */\nexport class StandaloneService implements OnDestroy {\n  cachedInjectors = new Map<ComponentDef<unknown>, EnvironmentInjector | null>();\n\n  constructor(private _injector: EnvironmentInjector) {}\n\n  getOrCreateStandaloneInjector(componentDef: ComponentDef<unknown>): EnvironmentInjector | null {\n    if (!componentDef.standalone) {\n      return null;\n    }\n\n    if (!this.cachedInjectors.has(componentDef)) {\n      const providers = internalImportProvidersFrom(false, componentDef.type);\n      const standaloneInjector =\n        providers.length > 0\n          ? createEnvironmentInjector(\n              [providers],\n              this._injector,\n              `Standalone[${componentDef.type.name}]`,\n            )\n          : null;\n      this.cachedInjectors.set(componentDef, standaloneInjector);\n    }\n\n    return this.cachedInjectors.get(componentDef)!;\n  }\n\n  ngOnDestroy() {\n    try {\n      for (const injector of this.cachedInjectors.values()) {\n        if (injector !== null) {\n          injector.destroy();\n        }\n      }\n    } finally {\n      this.cachedInjectors.clear();\n    }\n  }\n\n  /** @nocollapse */\n  static ɵprov = /** @pureOrBreakMyCode */ /* @__PURE__ */ defineInjectable({\n    token: StandaloneService,\n    providedIn: 'environment',\n    factory: () => new StandaloneService(inject(EnvironmentInjector)),\n  });\n}\n"]}