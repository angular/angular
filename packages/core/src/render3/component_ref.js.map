{"version":3,"file":"component_ref.js","sourceRoot":"","sources":["component_ref.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAC,iBAAiB,EAAC,MAAM,0BAA0B,CAAC;AAG3D,OAAO,EACL,wBAAwB,GAEzB,MAAM,oDAAoD,CAAC;AAE5D,OAAO,EAAC,mBAAmB,EAAC,MAAM,mBAAmB,CAAC;AACtD,OAAO,EAAC,YAAY,EAAmB,MAAM,WAAW,CAAC;AAEzD,OAAO,EACL,gBAAgB,IAAI,wBAAwB,EAC5C,YAAY,IAAI,oBAAoB,GACrC,MAAM,6BAA6B,CAAC;AACrC,OAAO,EAAC,wBAAwB,IAAI,gCAAgC,EAAC,MAAM,sCAAsC,CAAC;AAClH,OAAO,EAAC,gBAAgB,EAAa,MAAM,uBAAuB,CAAC;AAEnE,OAAO,EAAC,gBAAgB,EAAC,MAAM,eAAe,CAAC;AAC/C,OAAO,EAAC,SAAS,EAAC,MAAM,2BAA2B,CAAC;AAEpD,OAAO,EAAC,mBAAmB,EAAC,MAAM,UAAU,CAAC;AAC7C,OAAO,EAAC,eAAe,EAAC,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAC,eAAe,EAAE,eAAe,EAAE,sBAAsB,EAAC,MAAM,eAAe,CAAC;AACvF,OAAO,EAAC,WAAW,EAAC,MAAM,6BAA6B,CAAC;AACxD,OAAO,EAAC,YAAY,EAAC,MAAM,MAAM,CAAC;AAClC,OAAO,EAAC,0BAA0B,EAAC,MAAM,mCAAmC,CAAC;AAC7E,OAAO,EAAC,aAAa,EAAC,MAAM,gCAAgC,CAAC;AAC7D,OAAO,EAAC,UAAU,EAAC,MAAM,uBAAuB,CAAC;AACjD,OAAO,EACL,yBAAyB,EACzB,iBAAiB,EACjB,uBAAuB,GACxB,MAAM,uBAAuB,CAAC;AAE/B,OAAO,EAAC,UAAU,EAAC,MAAM,0BAA0B,CAAC;AASpD,OAAO,EACL,OAAO,EACP,aAAa,EAKb,KAAK,GAEN,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAAC,iBAAiB,EAAE,aAAa,EAAC,MAAM,cAAc,CAAC;AAE9D,OAAO,EAAC,qBAAqB,EAAC,MAAM,oBAAoB,CAAC;AACzD,OAAO,EAAC,eAAe,EAAC,MAAM,oBAAoB,CAAC;AACnD,OAAO,EAAC,iBAAiB,EAAE,qBAAqB,EAAC,MAAM,yBAAyB,CAAC;AACjF,OAAO,EAAC,eAAe,EAAC,MAAM,6BAA6B,CAAC;AAE5D,OAAO,EACL,kCAAkC,EAClC,wBAAwB,GACzB,MAAM,yBAAyB,CAAC;AACjC,OAAO,EAAC,QAAQ,EAAC,MAAM,YAAY,CAAC;AAEpC,OAAO,EAAC,qBAAqB,EAAC,MAAM,2BAA2B,CAAC;AAChE,OAAO,EAAC,SAAS,EAAE,SAAS,EAAC,MAAM,SAAS,CAAC;AAC7C,OAAO,EAAC,0BAA0B,EAAE,iBAAiB,EAAC,MAAM,wBAAwB,CAAC;AACrF,OAAO,EAAC,wBAAwB,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AACrE,OAAO,EAAC,+BAA+B,EAAE,4BAA4B,EAAC,MAAM,iBAAiB,CAAC;AAC9F,OAAO,EAAC,OAAO,EAAC,MAAM,YAAY,CAAC;AACnC,OAAO,EAAC,WAAW,EAAE,WAAW,EAAE,2BAA2B,EAAC,MAAM,qBAAqB,CAAC;AAC1F,OAAO,EAAC,OAAO,EAAkD,MAAM,oBAAoB,CAAC;AAC5F,OAAO,EAAC,qBAAqB,EAAE,6BAA6B,EAAC,MAAM,eAAe,CAAC;AAEnF,MAAM,OAAO,wBAAyB,SAAQ,gCAAgC;IAC5E;;OAEG;IACH,YAAoB,QAA2B;QAC7C,KAAK,EAAE,CAAC;QADU,aAAQ,GAAR,QAAQ,CAAmB;IAE/C,CAAC;IAEQ,uBAAuB,CAAI,SAAkB;QACpD,SAAS,IAAI,mBAAmB,CAAC,SAAS,CAAC,CAAC;QAC5C,MAAM,YAAY,GAAG,eAAe,CAAC,SAAS,CAAE,CAAC;QACjD,OAAO,IAAI,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3D,CAAC;CACF;AAED,SAAS,eAAe,CAAI,GAA8B;IACxD,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QACnC,MAAM,CAAC,QAAQ,EAAE,KAAK,EAAE,SAAS,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;QAC/C,MAAM,SAAS,GAAqC;YAClD,QAAQ,EAAE,QAAQ;YAClB,YAAY,EAAE,IAAI;YAClB,QAAQ,EAAE,CAAC,KAAK,GAAG,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC;SACjD,CAAC;QACF,IAAI,SAAS,EAAE,CAAC;YACd,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC;QAClC,CAAC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,gBAAgB,CAAI,GAA+B;IAC1D,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;AACrF,CAAC;AAED,SAAS,0BAA0B,CAAC,YAAmC;IACrE,kDAAkD;IAClD,IACE,CAAC,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,CAAC;QAC/C,YAAY,CAAC,SAAS,EAAE,qBAAqB,EAC7C,CAAC;QACD,IAAI,WAAW,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC;YACrD,MAAM,IAAI,YAAY,2DAEpB,0DAA0D,0BAA0B,CAClF,YAAY,CAAC,IAAI,CAClB,yYAAyY,CAC3Y,CAAC;QACJ,CAAC;IACH,CAAC;AACH,CAAC;AAED,SAAS,sBAAsB,CAC7B,YAAmC,EACnC,mBAAuE,EACvE,QAAkB;IAElB,IAAI,uBAAuB,GACzB,mBAAmB,YAAY,mBAAmB;QAChD,CAAC,CAAC,mBAAmB;QACrB,CAAC,CAAC,mBAAmB,EAAE,QAAQ,CAAC;IAEpC,IAAI,uBAAuB,IAAI,YAAY,CAAC,qBAAqB,KAAK,IAAI,EAAE,CAAC;QAC3E,uBAAuB;YACrB,YAAY,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,IAAI,uBAAuB,CAAC;IAC3F,CAAC;IAED,MAAM,gBAAgB,GAAG,uBAAuB;QAC9C,CAAC,CAAC,IAAI,eAAe,CAAC,QAAQ,EAAE,uBAAuB,CAAC;QACxD,CAAC,CAAC,QAAQ,CAAC;IACb,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AAED,SAAS,0BAA0B,CAAC,iBAA2B;IAC7D,MAAM,eAAe,GAAG,iBAAiB,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;IACtE,IAAI,eAAe,KAAK,IAAI,EAAE,CAAC;QAC7B,MAAM,IAAI,YAAY,gDAEpB,SAAS;YACP,gEAAgE;gBAC9D,+CAA+C;gBAC/C,iFAAiF,CACtF,CAAC;IACJ,CAAC;IAED,MAAM,SAAS,GAAG,iBAAiB,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACzD,MAAM,wBAAwB,GAAG,iBAAiB,CAAC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAC;IAEvF,IAAI,SAAS,GAAG,KAAK,CAAC;IACtB,IAAI,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,EAAE,CAAC;QAClD,SAAS,GAAG,iBAAiB,CAAC,GAAG,CAAC,qBAAqB,EAAE,6BAA6B,CAAC,CAAC;IAC1F,CAAC;IAED,OAAO;QACL,eAAe;QACf,SAAS;QACT,wBAAwB;QACxB,SAAS;KACV,CAAC;AACJ,CAAC;AAED,SAAS,iBAAiB,CAAC,YAAmC,EAAE,QAAkB;IAChF,sFAAsF;IACtF,sFAAsF;IACtF,YAAY;IACZ,MAAM,OAAO,GAAG,0BAA0B,CAAC,YAAY,CAAC,CAAC;IACzD,MAAM,SAAS,GACb,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,KAAK,MAAM,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC;IACpF,OAAO,iBAAiB,CAAC,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;AACzD,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,0BAA0B,CAAC,YAAmC;IAC5E,mDAAmD;IACnD,oDAAoD;IACpD,OAAO,CAAE,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAY,IAAI,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;AAC3E,CAAC;AAED;;GAEG;AACH,MAAM,OAAO,gBAAoB,SAAQ,wBAA2B;IAelE,IAAa,MAAM;QAMjB,IAAI,CAAC,YAAY,KAAjB,IAAI,CAAC,YAAY,GAAK,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAC;QAChE,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,IAAa,OAAO;QAClB,IAAI,CAAC,aAAa,KAAlB,IAAI,CAAC,aAAa,GAAK,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAC;QACnE,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED;;;OAGG;IACH,YACU,YAA+B,EAC/B,QAA2B;QAEnC,KAAK,EAAE,CAAC;QAHA,iBAAY,GAAZ,YAAY,CAAmB;QAC/B,aAAQ,GAAR,QAAQ,CAAmB;QA/B7B,iBAAY,GAOT,IAAI,CAAC;QACR,kBAAa,GAAsD,IAAI,CAAC;QA0B9E,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC,IAAI,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,wBAAwB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QACjE,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,kBAAkB,IAAI,EAAE,CAAC;QAChE,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,QAAQ,CAAC;IACpC,CAAC;IAEQ,MAAM,CACb,QAAkB,EAClB,gBAAsC,EACtC,kBAAwB,EACxB,mBAAwE,EACxE,UAA+D,EAC/D,iBAA6B;QAE7B,QAAQ,8CAAqC,CAAC;QAE9C,MAAM,YAAY,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;YACjC,SAAS,IAAI,0BAA0B,CAAC,MAAM,CAAC,CAAC;YAEhD,MAAM,SAAS,GAAG,eAAe,CAAC,kBAAkB,EAAE,MAAM,EAAE,iBAAiB,EAAE,UAAU,CAAC,CAAC;YAC7F,MAAM,gBAAgB,GAAG,sBAAsB,CAC7C,MAAM,EACN,mBAAmB,IAAI,IAAI,CAAC,QAAQ,EACpC,QAAQ,CACT,CAAC;YAEF,MAAM,WAAW,GAAG,0BAA0B,CAAC,gBAAgB,CAAC,CAAC;YACjE,MAAM,YAAY,GAAG,WAAW,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAC9E,MAAM,WAAW,GAAG,kBAAkB;gBACpC,CAAC,CAAC,iBAAiB,CACf,YAAY,EACZ,kBAAkB,EAClB,MAAM,CAAC,aAAa,EACpB,gBAAgB,CACjB;gBACH,CAAC,CAAC,iBAAiB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;YAC5C,MAAM,gBAAgB,GACpB,iBAAiB,EAAE,IAAI,CAAC,cAAc,CAAC;gBACvC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,UAAU,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YAEtF,MAAM,SAAS,GAAG,WAAW,CAC3B,IAAI,EACJ,SAAS,EACT,IAAI,EACJ,8BAAoB,2BAA2B,CAAC,MAAM,CAAC,EACvD,IAAI,EACJ,IAAI,EACJ,WAAW,EACX,YAAY,EACZ,gBAAgB,EAChB,IAAI,EACJ,qBAAqB,CAAC,WAAW,EAAE,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAC5E,CAAC;YAEF,SAAS,CAAC,aAAa,CAAC,GAAG,WAAW,CAAC;YAEvC,4CAA4C;YAC5C,sFAAsF;YACtF,8EAA8E;YAC9E,2FAA2F;YAC3F,sCAAsC;YACtC,SAAS,CAAC,SAAS,CAAC,CAAC;YAErB,IAAI,aAAa,GAAiB,IAAI,CAAC;YAEvC,IAAI,CAAC;gBACH,MAAM,SAAS,GAAG,4BAA4B,CAC5C,aAAa,EACb,SAAS,6BAET,OAAO,EACP,GAAG,EAAE,CAAC,SAAS,CAAC,iBAAiB,EACjC,IAAI,EACJ,CAAC,CACF,CAAC;gBAEF,2BAA2B;gBAC3B,qBAAqB,CAAC,YAAY,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;gBAC5D,eAAe,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;gBAExC,2FAA2F;gBAC3F,yBAAyB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;gBAC3D,qBAAqB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;gBACvD,+BAA+B,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;gBAEtD,IAAI,gBAAgB,KAAK,SAAS,EAAE,CAAC;oBACnC,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;gBACrE,CAAC;gBAED,aAAa,GAAG,wBAAwB,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;gBAErE,uCAAuC;gBACvC,SAAS,CAAC,OAAO,CAAC,GAAG,aAAa,CAAC,OAAO,CAAM,CAAC;gBAEjD,UAAU,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;YACzC,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACX,mDAAmD;gBACnD,qDAAqD;gBACrD,IAAI,aAAa,KAAK,IAAI,EAAE,CAAC;oBAC3B,eAAe,CAAC,aAAa,CAAC,CAAC;gBACjC,CAAC;gBACD,eAAe,CAAC,SAAS,CAAC,CAAC;gBAC3B,MAAM,CAAC,CAAC;YACV,CAAC;oBAAS,CAAC;gBACT,QAAQ,4CAAmC,CAAC;gBAC5C,SAAS,EAAE,CAAC;YACd,CAAC;YAED,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC;QAC7E,CAAC;gBAAS,CAAC;YACT,iBAAiB,CAAC,YAAY,CAAC,CAAC;QAClC,CAAC;IACH,CAAC;CACF;AAED,SAAS,eAAe,CACtB,kBAAuB,EACvB,YAAmC,EACnC,iBAAwC,EACxC,UAA0E;IAE1E,MAAM,WAAW,GAAG,kBAAkB;QACpC,CAAC,CAAC,CAAC,YAAY,EAAE,mBAAmB,CAAC;QACrC,CAAC,CAAC,oFAAoF;YACpF,kCAAkC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,IAAI,gBAAgB,GAAqB,IAAI,CAAC;IAC9C,IAAI,cAAc,GAAqB,IAAI,CAAC;IAC5C,IAAI,cAAc,GAAG,CAAC,CAAC;IAEvB,IAAI,iBAAiB,EAAE,CAAC;QACtB,KAAK,MAAM,OAAO,IAAI,iBAAsC,EAAE,CAAC;YAC7D,cAAc,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC;YAEhD,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;gBAClB,OAA2B,CAAC,SAAS,GAAG,CAAC,CAAC;gBAC3C,CAAC,gBAAgB,KAAhB,gBAAgB,GAAK,EAAE,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1C,CAAC;YAED,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;gBAClB,OAA2B,CAAC,SAAS,GAAG,CAAC,CAAC;gBAC3C,CAAC,cAAc,KAAd,cAAc,GAAK,EAAE,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACxC,CAAC;QACH,CAAC;IACH,CAAC;IAED,IAAI,UAAU,EAAE,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC3C,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE,CAAC;gBACpC,KAAK,MAAM,OAAO,IAAI,SAAS,CAAC,QAA6B,EAAE,CAAC;oBAC9D,cAAc,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC;oBAChD,MAAM,kBAAkB,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjC,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;wBAClB,OAA2B,CAAC,SAAS,GAAG,kBAAkB,CAAC;wBAC5D,CAAC,gBAAgB,KAAhB,gBAAgB,GAAK,EAAE,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC1C,CAAC;oBAED,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;wBAClB,OAA2B,CAAC,SAAS,GAAG,kBAAkB,CAAC;wBAC5D,CAAC,cAAc,KAAd,cAAc,GAAK,EAAE,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACxC,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAED,MAAM,iBAAiB,GAA4B,CAAC,YAAY,CAAC,CAAC;IAClE,IAAI,UAAU,EAAE,CAAC;QACf,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE,CAAC;YACnC,MAAM,aAAa,GAAG,OAAO,SAAS,KAAK,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;YACnF,MAAM,YAAY,GAAG,SAAS;gBAC5B,CAAC,CAAC,sBAAsB,CAAC,aAAa,CAAC;gBACvC,CAAC,CAAC,eAAe,CAAC,aAAa,CAAE,CAAC;YAEpC,IAAI,SAAS,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;gBAC1C,MAAM,IAAI,YAAY,oDAEpB,OAAO,iBAAiB,CAAC,aAAa,CAAC,mCAAmC;oBACxE,yDAAyD,CAC5D,CAAC;YACJ,CAAC;YAED,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAED,MAAM,SAAS,GAAG,WAAW,yBAE3B,IAAI,EACJ,oBAAoB,CAAC,gBAAgB,EAAE,cAAc,CAAC,EACtD,CAAC,EACD,cAAc,EACd,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,CAAC,WAAW,CAAC,EACb,IAAI,CACL,CAAC;IAEF,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,SAAS,oBAAoB,CAC3B,gBAAkC,EAClC,cAAgC;IAEhC,IAAI,CAAC,gBAAgB,IAAI,CAAC,cAAc,EAAE,CAAC;QACzC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,CAAC,KAAK,EAAE,EAAE;QACf,IAAI,KAAK,6BAAqB,IAAI,gBAAgB,EAAE,CAAC;YACnD,KAAK,MAAM,OAAO,IAAI,gBAAqC,EAAE,CAAC;gBAC5D,OAAO,CAAC,MAAO,EAAE,CAAC;YACpB,CAAC;QACH,CAAC;QAED,IAAI,KAAK,6BAAqB,IAAI,cAAc,EAAE,CAAC;YACjD,KAAK,MAAM,OAAO,IAAI,cAAmC,EAAE,CAAC;gBAC1D,OAAO,CAAC,MAAO,EAAE,CAAC;YACpB,CAAC;QACH,CAAC;IACH,CAAC,CAAC;AACJ,CAAC;AAED,SAAS,cAAc,CAAC,OAAgB;IACtC,MAAM,IAAI,GAAI,OAA2B,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;IACxD,OAAO,IAAI,KAAK,OAAO,IAAI,IAAI,KAAK,QAAQ,CAAC;AAC/C,CAAC;AAED;;;;;;;GAOG;AACH,MAAM,OAAO,YAAgB,SAAQ,oBAAuB;IAS1D,YACE,aAAsB,EACL,UAAiB,EACjB,iBAA0B;QAE3C,KAAK,EAAE,CAAC;QAHS,eAAU,GAAV,UAAU,CAAO;QACjB,sBAAiB,GAAjB,iBAAiB,CAAS;QANrC,wBAAmB,GAAgC,IAAI,CAAC;QAS9D,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,aAAa,CAAiB,CAAC;QACzE,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAC1D,IAAI,CAAC,QAAQ,GAAG,wBAAwB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,OAAO,CAAM,CAAC;QACtF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,OAAO,CAClD,UAAU,EACV,SAAS,CAAC,yBAAyB,CACpC,CAAC;QACF,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACrC,CAAC;IAEQ,QAAQ,CAAC,IAAY,EAAE,KAAc;QAC5C,IAAI,IAAI,CAAC,iBAAiB,IAAI,SAAS,EAAE,CAAC;YACxC,MAAM,IAAI,YAAY,oDAEpB,sGAAsG,CACvG,CAAC;QACJ,CAAC;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,mBAAmB,KAAxB,IAAI,CAAC,mBAAmB,GAAK,IAAI,GAAG,EAAE,EAAC;QACvC,2DAA2D;QAC3D,2EAA2E;QAC3E,IACE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC;YAClC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,EACpD,CAAC;YACD,OAAO;QACT,CAAC;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QAC9B,MAAM,WAAW,GAAG,uBAAuB,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACrF,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC1C,MAAM,mBAAmB,GAAG,wBAAwB,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACzE,aAAa,CAAC,mBAAmB,sCAA8B,CAAC;QAEhE,IAAI,SAAS,IAAI,CAAC,WAAW,EAAE,CAAC;YAC9B,MAAM,eAAe,GAAG,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC9D,IAAI,OAAO,GAAG,2BAA2B,IAAI,mBAAmB,eAAe,eAAe,CAAC;YAC/F,OAAO,IAAI,uBAAuB,IAAI,qGAAqG,CAAC;YAC5I,0BAA0B,CAAC,OAAO,CAAC,CAAC;QACtC,CAAC;IACH,CAAC;IAED,IAAa,QAAQ;QACnB,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACxD,CAAC;IAEQ,OAAO;QACd,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAEQ,SAAS,CAAC,QAAoB;QACrC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;CACF;AAED,0FAA0F;AAC1F,SAAS,YAAY,CACnB,KAAmB,EACnB,kBAA4B,EAC5B,gBAAyB;IAEzB,MAAM,UAAU,GAA+B,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC;IACvE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACnD,MAAM,YAAY,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACzC,yFAAyF;QACzF,sFAAsF;QACtF,gCAAgC;QAChC,0FAA0F;QAC1F,gDAAgD;QAChD,UAAU,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACjG,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {setActiveConsumer} from '../../primitives/signals';\n\nimport {ChangeDetectorRef} from '../change_detection/change_detector_ref';\nimport {\n  ChangeDetectionScheduler,\n  NotificationSource,\n} from '../change_detection/scheduling/zoneless_scheduling';\nimport {Injector} from '../di/injector';\nimport {EnvironmentInjector} from '../di/r3_injector';\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {Type} from '../interface/type';\nimport {\n  ComponentFactory as AbstractComponentFactory,\n  ComponentRef as AbstractComponentRef,\n} from '../linker/component_factory';\nimport {ComponentFactoryResolver as AbstractComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {createElementRef, ElementRef} from '../linker/element_ref';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {RendererFactory2} from '../render/api';\nimport {Sanitizer} from '../sanitization/sanitizer';\n\nimport {assertComponentType} from './assert';\nimport {attachPatchData} from './context_discovery';\nimport {getComponentDef, getDirectiveDef, getDirectiveDefOrThrow} from './def_getters';\nimport {depsTracker} from './deps_tracker/deps_tracker';\nimport {NodeInjector} from './di';\nimport {reportUnknownPropertyError} from './instructions/element_validation';\nimport {markViewDirty} from './instructions/mark_view_dirty';\nimport {renderView} from './instructions/render';\nimport {\n  createDirectivesInstances,\n  locateHostElement,\n  setAllInputsForProperty,\n} from './instructions/shared';\nimport {ComponentDef, ComponentTemplate, DirectiveDef, RenderFlags} from './interfaces/definition';\nimport {InputFlags} from './interfaces/input_flags';\nimport {\n  TContainerNode,\n  TElementContainerNode,\n  TElementNode,\n  TNode,\n  TNodeType,\n} from './interfaces/node';\nimport {RElement, RNode} from './interfaces/renderer_dom';\nimport {\n  CONTEXT,\n  HEADER_OFFSET,\n  LView,\n  LViewEnvironment,\n  LViewFlags,\n  TView,\n  TVIEW,\n  TViewType,\n} from './interfaces/view';\nimport {MATH_ML_NAMESPACE, SVG_NAMESPACE} from './namespaces';\n\nimport {retrieveHydrationInfo} from '../hydration/utils';\nimport {ChainedInjector} from './chained_injector';\nimport {createElementNode, setupStaticAttributes} from './dom_node_manipulation';\nimport {unregisterLView} from './interfaces/lview_tracking';\nimport {Renderer} from './interfaces/renderer';\nimport {\n  extractAttrsAndClassesFromSelector,\n  stringifyCSSSelectorList,\n} from './node_selector_matcher';\nimport {profiler} from './profiler';\nimport {ProfilerEvent} from './profiler_types';\nimport {executeContentQueries} from './queries/query_execution';\nimport {enterView, leaveView} from './state';\nimport {debugStringifyTypeForError, stringifyForError} from './util/stringify_utils';\nimport {getComponentLViewByIndex, getTNode} from './util/view_utils';\nimport {directiveHostEndFirstCreatePass, directiveHostFirstCreatePass} from './view/elements';\nimport {ViewRef} from './view_ref';\nimport {createLView, createTView, getInitialLViewFlagsFromDef} from './view/construction';\nimport {BINDING, Binding, BindingInternal, DirectiveWithBindings} from './dynamic_bindings';\nimport {NG_REFLECT_ATTRS_FLAG, NG_REFLECT_ATTRS_FLAG_DEFAULT} from '../ng_reflect';\n\nexport class ComponentFactoryResolver extends AbstractComponentFactoryResolver {\n  /**\n   * @param ngModule The NgModuleRef to which all resolved factories are bound.\n   */\n  constructor(private ngModule?: NgModuleRef<any>) {\n    super();\n  }\n\n  override resolveComponentFactory<T>(component: Type<T>): AbstractComponentFactory<T> {\n    ngDevMode && assertComponentType(component);\n    const componentDef = getComponentDef(component)!;\n    return new ComponentFactory(componentDef, this.ngModule);\n  }\n}\n\nfunction toInputRefArray<T>(map: DirectiveDef<T>['inputs']): ComponentFactory<T>['inputs'] {\n  return Object.keys(map).map((name) => {\n    const [propName, flags, transform] = map[name];\n    const inputData: ComponentFactory<T>['inputs'][0] = {\n      propName: propName,\n      templateName: name,\n      isSignal: (flags & InputFlags.SignalBased) !== 0,\n    };\n    if (transform) {\n      inputData.transform = transform;\n    }\n    return inputData;\n  });\n}\n\nfunction toOutputRefArray<T>(map: DirectiveDef<T>['outputs']): ComponentFactory<T>['outputs'] {\n  return Object.keys(map).map((name) => ({propName: map[name], templateName: name}));\n}\n\nfunction verifyNotAnOrphanComponent(componentDef: ComponentDef<unknown>) {\n  // TODO(pk): create assert that verifies ngDevMode\n  if (\n    (typeof ngJitMode === 'undefined' || ngJitMode) &&\n    componentDef.debugInfo?.forbidOrphanRendering\n  ) {\n    if (depsTracker.isOrphanComponent(componentDef.type)) {\n      throw new RuntimeError(\n        RuntimeErrorCode.RUNTIME_DEPS_ORPHAN_COMPONENT,\n        `Orphan component found! Trying to render the component ${debugStringifyTypeForError(\n          componentDef.type,\n        )} without first loading the NgModule that declares it. It is recommended to make this component standalone in order to avoid this error. If this is not possible now, import the component's NgModule in the appropriate NgModule, or the standalone component in which you are trying to render this component. If this is a lazy import, load the NgModule lazily as well and use its module injector.`,\n      );\n    }\n  }\n}\n\nfunction createRootViewInjector(\n  componentDef: ComponentDef<unknown>,\n  environmentInjector: EnvironmentInjector | NgModuleRef<any> | undefined,\n  injector: Injector,\n): Injector {\n  let realEnvironmentInjector =\n    environmentInjector instanceof EnvironmentInjector\n      ? environmentInjector\n      : environmentInjector?.injector;\n\n  if (realEnvironmentInjector && componentDef.getStandaloneInjector !== null) {\n    realEnvironmentInjector =\n      componentDef.getStandaloneInjector(realEnvironmentInjector) || realEnvironmentInjector;\n  }\n\n  const rootViewInjector = realEnvironmentInjector\n    ? new ChainedInjector(injector, realEnvironmentInjector)\n    : injector;\n  return rootViewInjector;\n}\n\nfunction createRootLViewEnvironment(rootLViewInjector: Injector): LViewEnvironment {\n  const rendererFactory = rootLViewInjector.get(RendererFactory2, null);\n  if (rendererFactory === null) {\n    throw new RuntimeError(\n      RuntimeErrorCode.RENDERER_NOT_FOUND,\n      ngDevMode &&\n        'Angular was not able to inject a renderer (RendererFactory2). ' +\n          'Likely this is due to a broken DI hierarchy. ' +\n          'Make sure that any injector used to create this component has a correct parent.',\n    );\n  }\n\n  const sanitizer = rootLViewInjector.get(Sanitizer, null);\n  const changeDetectionScheduler = rootLViewInjector.get(ChangeDetectionScheduler, null);\n\n  let ngReflect = false;\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    ngReflect = rootLViewInjector.get(NG_REFLECT_ATTRS_FLAG, NG_REFLECT_ATTRS_FLAG_DEFAULT);\n  }\n\n  return {\n    rendererFactory,\n    sanitizer,\n    changeDetectionScheduler,\n    ngReflect,\n  };\n}\n\nfunction createHostElement(componentDef: ComponentDef<unknown>, renderer: Renderer): RElement {\n  // Determine a tag name used for creating host elements when this component is created\n  // dynamically. Default to 'div' if this component did not specify any tag name in its\n  // selector.\n  const tagName = inferTagNameFromDefinition(componentDef);\n  const namespace =\n    tagName === 'svg' ? SVG_NAMESPACE : tagName === 'math' ? MATH_ML_NAMESPACE : null;\n  return createElementNode(renderer, tagName, namespace);\n}\n\n/**\n * Infers the tag name that should be used for a component based on its definition.\n * @param componentDef Definition for which to resolve the tag name.\n */\nexport function inferTagNameFromDefinition(componentDef: ComponentDef<unknown>): string {\n  // Take the tag name from the first selector in the\n  // definition. If there is none, fall back to `div`.\n  return ((componentDef.selectors[0][0] as string) || 'div').toLowerCase();\n}\n\n/**\n * ComponentFactory interface implementation.\n */\nexport class ComponentFactory<T> extends AbstractComponentFactory<T> {\n  override selector: string;\n  override componentType: Type<any>;\n  override ngContentSelectors: string[];\n  isBoundToModule: boolean;\n  private cachedInputs:\n    | {\n        propName: string;\n        templateName: string;\n        isSignal: boolean;\n        transform?: (value: any) => any;\n      }[]\n    | null = null;\n  private cachedOutputs: {propName: string; templateName: string}[] | null = null;\n\n  override get inputs(): {\n    propName: string;\n    templateName: string;\n    isSignal: boolean;\n    transform?: (value: any) => any;\n  }[] {\n    this.cachedInputs ??= toInputRefArray(this.componentDef.inputs);\n    return this.cachedInputs;\n  }\n\n  override get outputs(): {propName: string; templateName: string}[] {\n    this.cachedOutputs ??= toOutputRefArray(this.componentDef.outputs);\n    return this.cachedOutputs;\n  }\n\n  /**\n   * @param componentDef The component definition.\n   * @param ngModule The NgModuleRef to which the factory is bound.\n   */\n  constructor(\n    private componentDef: ComponentDef<any>,\n    private ngModule?: NgModuleRef<any>,\n  ) {\n    super();\n    this.componentType = componentDef.type;\n    this.selector = stringifyCSSSelectorList(componentDef.selectors);\n    this.ngContentSelectors = componentDef.ngContentSelectors ?? [];\n    this.isBoundToModule = !!ngModule;\n  }\n\n  override create(\n    injector: Injector,\n    projectableNodes?: any[][] | undefined,\n    rootSelectorOrNode?: any,\n    environmentInjector?: NgModuleRef<any> | EnvironmentInjector | undefined,\n    directives?: (Type<unknown> | DirectiveWithBindings<unknown>)[],\n    componentBindings?: Binding[],\n  ): AbstractComponentRef<T> {\n    profiler(ProfilerEvent.DynamicComponentStart);\n\n    const prevConsumer = setActiveConsumer(null);\n    try {\n      const cmpDef = this.componentDef;\n      ngDevMode && verifyNotAnOrphanComponent(cmpDef);\n\n      const rootTView = createRootTView(rootSelectorOrNode, cmpDef, componentBindings, directives);\n      const rootViewInjector = createRootViewInjector(\n        cmpDef,\n        environmentInjector || this.ngModule,\n        injector,\n      );\n\n      const environment = createRootLViewEnvironment(rootViewInjector);\n      const hostRenderer = environment.rendererFactory.createRenderer(null, cmpDef);\n      const hostElement = rootSelectorOrNode\n        ? locateHostElement(\n            hostRenderer,\n            rootSelectorOrNode,\n            cmpDef.encapsulation,\n            rootViewInjector,\n          )\n        : createHostElement(cmpDef, hostRenderer);\n      const hasInputBindings =\n        componentBindings?.some(isInputBinding) ||\n        directives?.some((d) => typeof d !== 'function' && d.bindings.some(isInputBinding));\n\n      const rootLView = createLView<T>(\n        null,\n        rootTView,\n        null,\n        LViewFlags.IsRoot | getInitialLViewFlagsFromDef(cmpDef),\n        null,\n        null,\n        environment,\n        hostRenderer,\n        rootViewInjector,\n        null,\n        retrieveHydrationInfo(hostElement, rootViewInjector, true /* isRootView */),\n      );\n\n      rootLView[HEADER_OFFSET] = hostElement;\n\n      // rootView is the parent when bootstrapping\n      // TODO(misko): it looks like we are entering view here but we don't really need to as\n      // `renderView` does that. However as the code is written it is needed because\n      // `createRootComponentView` and `createRootComponent` both read global state. Fixing those\n      // issues would allow us to drop this.\n      enterView(rootLView);\n\n      let componentView: LView | null = null;\n\n      try {\n        const hostTNode = directiveHostFirstCreatePass(\n          HEADER_OFFSET,\n          rootLView,\n          TNodeType.Element,\n          '#host',\n          () => rootTView.directiveRegistry,\n          true,\n          0,\n        );\n\n        // ---- element instruction\n        setupStaticAttributes(hostRenderer, hostElement, hostTNode);\n        attachPatchData(hostElement, rootLView);\n\n        // TODO(pk): this logic is similar to the instruction code where a node can have directives\n        createDirectivesInstances(rootTView, rootLView, hostTNode);\n        executeContentQueries(rootTView, hostTNode, rootLView);\n        directiveHostEndFirstCreatePass(rootTView, hostTNode);\n\n        if (projectableNodes !== undefined) {\n          projectNodes(hostTNode, this.ngContentSelectors, projectableNodes);\n        }\n\n        componentView = getComponentLViewByIndex(hostTNode.index, rootLView);\n\n        // TODO(pk): why do we need this logic?\n        rootLView[CONTEXT] = componentView[CONTEXT] as T;\n\n        renderView(rootTView, rootLView, null);\n      } catch (e) {\n        // Stop tracking the views if creation failed since\n        // the consumer won't have a way to dereference them.\n        if (componentView !== null) {\n          unregisterLView(componentView);\n        }\n        unregisterLView(rootLView);\n        throw e;\n      } finally {\n        profiler(ProfilerEvent.DynamicComponentEnd);\n        leaveView();\n      }\n\n      return new ComponentRef(this.componentType, rootLView, !!hasInputBindings);\n    } finally {\n      setActiveConsumer(prevConsumer);\n    }\n  }\n}\n\nfunction createRootTView(\n  rootSelectorOrNode: any,\n  componentDef: ComponentDef<unknown>,\n  componentBindings: Binding[] | undefined,\n  directives: (Type<unknown> | DirectiveWithBindings<unknown>)[] | undefined,\n): TView {\n  const tAttributes = rootSelectorOrNode\n    ? ['ng-version', '0.0.0-PLACEHOLDER']\n    : // Extract attributes and classes from the first selector only to match VE behavior.\n      extractAttrsAndClassesFromSelector(componentDef.selectors[0]);\n  let creationBindings: Binding[] | null = null;\n  let updateBindings: Binding[] | null = null;\n  let varsToAllocate = 0;\n\n  if (componentBindings) {\n    for (const binding of componentBindings as BindingInternal[]) {\n      varsToAllocate += binding[BINDING].requiredVars;\n\n      if (binding.create) {\n        (binding as BindingInternal).targetIdx = 0;\n        (creationBindings ??= []).push(binding);\n      }\n\n      if (binding.update) {\n        (binding as BindingInternal).targetIdx = 0;\n        (updateBindings ??= []).push(binding);\n      }\n    }\n  }\n\n  if (directives) {\n    for (let i = 0; i < directives.length; i++) {\n      const directive = directives[i];\n      if (typeof directive !== 'function') {\n        for (const binding of directive.bindings as BindingInternal[]) {\n          varsToAllocate += binding[BINDING].requiredVars;\n          const targetDirectiveIdx = i + 1;\n          if (binding.create) {\n            (binding as BindingInternal).targetIdx = targetDirectiveIdx;\n            (creationBindings ??= []).push(binding);\n          }\n\n          if (binding.update) {\n            (binding as BindingInternal).targetIdx = targetDirectiveIdx;\n            (updateBindings ??= []).push(binding);\n          }\n        }\n      }\n    }\n  }\n\n  const directivesToApply: DirectiveDef<unknown>[] = [componentDef];\n  if (directives) {\n    for (const directive of directives) {\n      const directiveType = typeof directive === 'function' ? directive : directive.type;\n      const directiveDef = ngDevMode\n        ? getDirectiveDefOrThrow(directiveType)\n        : getDirectiveDef(directiveType)!;\n\n      if (ngDevMode && !directiveDef.standalone) {\n        throw new RuntimeError(\n          RuntimeErrorCode.TYPE_IS_NOT_STANDALONE,\n          `The ${stringifyForError(directiveType)} directive must be standalone in ` +\n            `order to be applied to a dynamically-created component.`,\n        );\n      }\n\n      directivesToApply.push(directiveDef);\n    }\n  }\n\n  const rootTView = createTView(\n    TViewType.Root,\n    null,\n    getRootTViewTemplate(creationBindings, updateBindings),\n    1,\n    varsToAllocate,\n    directivesToApply,\n    null,\n    null,\n    null,\n    [tAttributes],\n    null,\n  );\n\n  return rootTView;\n}\n\nfunction getRootTViewTemplate(\n  creationBindings: Binding[] | null,\n  updateBindings: Binding[] | null,\n): ComponentTemplate<unknown> | null {\n  if (!creationBindings && !updateBindings) {\n    return null;\n  }\n\n  return (flags) => {\n    if (flags & RenderFlags.Create && creationBindings) {\n      for (const binding of creationBindings as BindingInternal[]) {\n        binding.create!();\n      }\n    }\n\n    if (flags & RenderFlags.Update && updateBindings) {\n      for (const binding of updateBindings as BindingInternal[]) {\n        binding.update!();\n      }\n    }\n  };\n}\n\nfunction isInputBinding(binding: Binding): boolean {\n  const kind = (binding as BindingInternal)[BINDING].kind;\n  return kind === 'input' || kind === 'twoWay';\n}\n\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nexport class ComponentRef<T> extends AbstractComponentRef<T> {\n  override instance: T;\n  override hostView: ViewRef<T>;\n  override changeDetectorRef: ChangeDetectorRef;\n  override componentType: Type<T>;\n  override location: ElementRef;\n  private previousInputValues: Map<string, unknown> | null = null;\n  private _tNode: TElementNode | TContainerNode | TElementContainerNode;\n\n  constructor(\n    componentType: Type<T>,\n    private readonly _rootLView: LView,\n    private readonly _hasInputBindings: boolean,\n  ) {\n    super();\n    this._tNode = getTNode(_rootLView[TVIEW], HEADER_OFFSET) as TElementNode;\n    this.location = createElementRef(this._tNode, _rootLView);\n    this.instance = getComponentLViewByIndex(this._tNode.index, _rootLView)[CONTEXT] as T;\n    this.hostView = this.changeDetectorRef = new ViewRef<T>(\n      _rootLView,\n      undefined /* _cdRefInjectingView */,\n    );\n    this.componentType = componentType;\n  }\n\n  override setInput(name: string, value: unknown): void {\n    if (this._hasInputBindings && ngDevMode) {\n      throw new RuntimeError(\n        RuntimeErrorCode.INVALID_SET_INPUT_CALL,\n        'Cannot call `setInput` on a component that is using the `inputBinding` or `twoWayBinding` functions.',\n      );\n    }\n\n    const tNode = this._tNode;\n    this.previousInputValues ??= new Map();\n    // Do not set the input if it is the same as the last value\n    // This behavior matches `bindingUpdated` when binding inputs in templates.\n    if (\n      this.previousInputValues.has(name) &&\n      Object.is(this.previousInputValues.get(name), value)\n    ) {\n      return;\n    }\n\n    const lView = this._rootLView;\n    const hasSetInput = setAllInputsForProperty(tNode, lView[TVIEW], lView, name, value);\n    this.previousInputValues.set(name, value);\n    const childComponentLView = getComponentLViewByIndex(tNode.index, lView);\n    markViewDirty(childComponentLView, NotificationSource.SetInput);\n\n    if (ngDevMode && !hasSetInput) {\n      const cmpNameForError = stringifyForError(this.componentType);\n      let message = `Can't set value of the '${name}' input on the '${cmpNameForError}' component. `;\n      message += `Make sure that the '${name}' property is declared as an input using the input() or model() function or the @Input() decorator.`;\n      reportUnknownPropertyError(message);\n    }\n  }\n\n  override get injector(): Injector {\n    return new NodeInjector(this._tNode, this._rootLView);\n  }\n\n  override destroy(): void {\n    this.hostView.destroy();\n  }\n\n  override onDestroy(callback: () => void): void {\n    this.hostView.onDestroy(callback);\n  }\n}\n\n/** Projects the `projectableNodes` that were specified when creating a root component. */\nfunction projectNodes(\n  tNode: TElementNode,\n  ngContentSelectors: string[],\n  projectableNodes: any[][],\n) {\n  const projection: (TNode | RNode[] | null)[] = (tNode.projection = []);\n  for (let i = 0; i < ngContentSelectors.length; i++) {\n    const nodesforSlot = projectableNodes[i];\n    // Projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n    // complex checks down the line.\n    // We also normalize the length of the passed in projectable nodes (to match the number of\n    // <ng-container> slots defined by a component).\n    projection.push(nodesforSlot != null && nodesforSlot.length ? Array.from(nodesforSlot) : null);\n  }\n}\n"]}