{"version":3,"file":"public_definitions.js","sourceRoot":"","sources":["public_definitions.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n// This file contains types that will be published to npm in library typings files.\n\n// Formatting does horrible things to these declarations.\n\n/**\n * @publicApi\n */\nexport type ɵɵDirectiveDeclaration<\n  T,\n  Selector extends string,\n  ExportAs extends string[],\n  // `string` keys are for backwards compatibility with pre-16 versions.\n  InputMap extends {\n    [key: string]: string | {alias: string | null; required: boolean; isSignal?: boolean};\n  },\n  OutputMap extends {[key: string]: string},\n  QueryFields extends string[],\n  // Optional as this was added to align the `IsStandalone` parameters\n  // between directive and component declarations.\n  NgContentSelectors extends never = never,\n  // Optional as this was added in Angular v14. All pre-existing directives\n  // are not standalone.\n  IsStandalone extends boolean = false,\n  HostDirectives = never,\n  IsSignal extends boolean = false,\n> = unknown;\n\n/**\n * @publicApi\n */\nexport type ɵɵComponentDeclaration<\n  T,\n  Selector extends String,\n  ExportAs extends string[],\n  // `string` keys are for backwards compatibility with pre-16 versions.\n  InputMap extends {[key: string]: string | {alias: string | null; required: boolean}},\n  OutputMap extends {[key: string]: string},\n  QueryFields extends string[],\n  NgContentSelectors extends string[],\n  // Optional as this was added in Angular v14. All pre-existing components\n  // are not standalone.\n  IsStandalone extends boolean = false,\n  HostDirectives = never,\n  IsSignal extends boolean = false,\n> = unknown;\n\n/**\n * @publicApi\n */\nexport type ɵɵNgModuleDeclaration<T, Declarations, Imports, Exports> = unknown;\n\n/**\n * @publicApi\n */\nexport type ɵɵPipeDeclaration<\n  T,\n  Name extends string,\n  // Optional as this was added in Angular v14. All pre-existing directives\n  // are not standalone.\n  IsStandalone extends boolean = false,\n> = unknown;\n\n/**\n * @publicApi\n */\nexport type ɵɵInjectorDeclaration<T> = unknown;\n\n/**\n * @publicApi\n */\nexport type ɵɵFactoryDeclaration<T, CtorDependencies extends CtorDependency[]> = unknown;\n\n/**\n * An object literal of this type is used to represent the metadata of a constructor dependency.\n * The type itself is never referred to from generated code.\n *\n * @publicApi\n */\nexport type CtorDependency = {\n  /**\n   * If an `@Attribute` decorator is used, this represents the injected attribute's name. If the\n   * attribute name is a dynamic expression instead of a string literal, this will be the unknown\n   * type.\n   */\n  attribute?: string | unknown;\n\n  /**\n   * If `@Optional()` is used, this key is set to true.\n   */\n  optional?: true;\n\n  /**\n   * If `@Host` is used, this key is set to true.\n   */\n  host?: true;\n\n  /**\n   * If `@Self` is used, this key is set to true.\n   */\n  self?: true;\n\n  /**\n   * If `@SkipSelf` is used, this key is set to true.\n   */\n  skipSelf?: true;\n} | null;\n"]}