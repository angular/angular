{"version":3,"file":"directive.js","sourceRoot":"","sources":["directive.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  getCompilerFacade,\n  JitCompilerUsage,\n  R3DirectiveMetadataFacade,\n} from '../../compiler/compiler_facade';\nimport {\n  R3ComponentMetadataFacade,\n  R3QueryMetadataFacade,\n} from '../../compiler/compiler_facade_interface';\nimport {resolveForwardRef} from '../../di/forward_ref';\nimport {getReflect, reflectDependencies} from '../../di/jit/util';\nimport {Type} from '../../interface/type';\nimport type {Query} from '../../metadata/di';\nimport type {Component, Directive, Input} from '../../metadata/directives';\nimport {\n  componentNeedsResolution,\n  maybeQueueResolutionOfComponentResources,\n} from '../../metadata/resource_loading';\nimport {ViewEncapsulation} from '../../metadata/view';\nimport {flatten} from '../../util/array_utils';\nimport {EMPTY_ARRAY, EMPTY_OBJ} from '../../util/empty';\nimport {initNgDevMode} from '../../util/ng_dev_mode';\nimport {getComponentDef, getDirectiveDef, getNgModuleDef, getPipeDef} from '../def_getters';\nimport {depsTracker} from '../deps_tracker/deps_tracker';\nimport {NG_COMP_DEF, NG_DIR_DEF, NG_FACTORY_DEF} from '../fields';\nimport {ComponentDef, ComponentType, DirectiveDefList, PipeDefList} from '../interfaces/definition';\nimport {stringifyForError} from '../util/stringify_utils';\n\nimport {angularCoreEnv} from './environment';\nimport {getJitOptions} from './jit_options';\nimport {\n  flushModuleScopingQueueAsMuchAsPossible,\n  patchComponentDefWithScope,\n  transitiveScopesFor,\n} from './module';\nimport {isComponent, verifyStandaloneImport} from './util';\n\n/**\n * Keep track of the compilation depth to avoid reentrancy issues during JIT compilation. This\n * matters in the following scenario:\n *\n * Consider a component 'A' that extends component 'B', both declared in module 'M'. During\n * the compilation of 'A' the definition of 'B' is requested to capture the inheritance chain,\n * potentially triggering compilation of 'B'. If this nested compilation were to trigger\n * `flushModuleScopingQueueAsMuchAsPossible` it may happen that module 'M' is still pending in the\n * queue, resulting in 'A' and 'B' to be patched with the NgModule scope. As the compilation of\n * 'A' is still in progress, this would introduce a circular dependency on its compilation. To avoid\n * this issue, the module scope queue is only flushed for compilations at the depth 0, to ensure\n * all compilations have finished.\n */\nlet compilationDepth = 0;\n\n/**\n * Compile an Angular component according to its decorator metadata, and patch the resulting\n * component def (ɵcmp) onto the component type.\n *\n * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n * until the global queue has been resolved with a call to `resolveComponentResources`.\n */\nexport function compileComponent(type: Type<any>, metadata: Component): void {\n  // Initialize ngDevMode. This must be the first statement in compileComponent.\n  // See the `initNgDevMode` docstring for more information.\n  (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n\n  let ngComponentDef: ComponentDef<unknown> | null = null;\n\n  // Metadata may have resources which need to be resolved.\n  maybeQueueResolutionOfComponentResources(type, metadata);\n\n  // Note that we're using the same function as `Directive`, because that's only subset of metadata\n  // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n  // because we'd have to resolve the asynchronous templates.\n  addDirectiveFactoryDef(type, metadata);\n\n  Object.defineProperty(type, NG_COMP_DEF, {\n    get: () => {\n      if (ngComponentDef === null) {\n        const compiler = getCompilerFacade({\n          usage: JitCompilerUsage.Decorator,\n          kind: 'component',\n          type: type,\n        });\n\n        if (componentNeedsResolution(metadata)) {\n          const error = [`Component '${type.name}' is not resolved:`];\n          if (metadata.templateUrl) {\n            error.push(` - templateUrl: ${metadata.templateUrl}`);\n          }\n          if (metadata.styleUrls && metadata.styleUrls.length) {\n            error.push(` - styleUrls: ${JSON.stringify(metadata.styleUrls)}`);\n          }\n          if (metadata.styleUrl) {\n            error.push(` - styleUrl: ${metadata.styleUrl}`);\n          }\n          error.push(`Did you run and wait for 'resolveComponentResources()'?`);\n          throw new Error(error.join('\\n'));\n        }\n\n        // This const was called `jitOptions` previously but had to be renamed to `options` because\n        // of a bug with Terser that caused optimized JIT builds to throw a `ReferenceError`.\n        // This bug was investigated in https://github.com/angular/angular-cli/issues/17264.\n        // We should not rename it back until https://github.com/terser/terser/issues/615 is fixed.\n        const options = getJitOptions();\n        let preserveWhitespaces = metadata.preserveWhitespaces;\n        if (preserveWhitespaces === undefined) {\n          if (options !== null && options.preserveWhitespaces !== undefined) {\n            preserveWhitespaces = options.preserveWhitespaces;\n          } else {\n            preserveWhitespaces = false;\n          }\n        }\n        let encapsulation = metadata.encapsulation;\n        if (encapsulation === undefined) {\n          if (options !== null && options.defaultEncapsulation !== undefined) {\n            encapsulation = options.defaultEncapsulation;\n          } else {\n            encapsulation = ViewEncapsulation.Emulated;\n          }\n        }\n\n        const templateUrl = metadata.templateUrl || `ng:///${type.name}/template.html`;\n        const baseMeta = directiveMetadata(type, metadata);\n        const meta: R3ComponentMetadataFacade = {\n          ...baseMeta,\n          typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl),\n          template: metadata.template || '',\n          preserveWhitespaces,\n          styles:\n            typeof metadata.styles === 'string'\n              ? [metadata.styles]\n              : metadata.styles || EMPTY_ARRAY,\n          animations: metadata.animations,\n          // JIT components are always compiled against an empty set of `declarations`. Instead, the\n          // `directiveDefs` and `pipeDefs` are updated at a later point:\n          //  * for NgModule-based components, they're set when the NgModule which declares the\n          //    component resolves in the module scoping queue\n          //  * for standalone components, they're set just below, after `compileComponent`.\n          declarations: [],\n          changeDetection: metadata.changeDetection,\n          encapsulation,\n          viewProviders: metadata.viewProviders || null,\n          // We can't inspect whether any of the dependencies are actually directives, because they\n          // get patched on after compilation. That's why in JIT mode we consider that any\n          // dependency might be a directive dependency.\n          hasDirectiveDependencies:\n            !baseMeta.isStandalone || (metadata.imports != null && metadata.imports.length > 0),\n        };\n\n        compilationDepth++;\n        try {\n          if (meta.usesInheritance) {\n            addDirectiveDefToUndecoratedParents(type);\n          }\n          ngComponentDef = compiler.compileComponent(\n            angularCoreEnv,\n            templateUrl,\n            meta,\n          ) as ComponentDef<unknown>;\n\n          if (meta.isStandalone) {\n            // Patch the component definition for standalone components with `directiveDefs` and\n            // `pipeDefs` functions which lazily compute the directives/pipes available in the\n            // standalone component. Also set `dependencies` to the lazily resolved list of imports.\n            const imports: Type<any>[] = flatten(metadata.imports || EMPTY_ARRAY);\n            const {directiveDefs, pipeDefs} = getStandaloneDefFunctions(type, imports);\n            ngComponentDef.directiveDefs = directiveDefs;\n            ngComponentDef.pipeDefs = pipeDefs;\n            ngComponentDef.dependencies = () => imports.map(resolveForwardRef);\n          }\n        } finally {\n          // Ensure that the compilation depth is decremented even when the compilation failed.\n          compilationDepth--;\n        }\n\n        if (compilationDepth === 0) {\n          // When NgModule decorator executed, we enqueued the module definition such that\n          // it would only dequeue and add itself as module scope to all of its declarations,\n          // but only if  if all of its declarations had resolved. This call runs the check\n          // to see if any modules that are in the queue can be dequeued and add scope to\n          // their declarations.\n          flushModuleScopingQueueAsMuchAsPossible();\n        }\n\n        // If component compilation is async, then the @NgModule annotation which declares the\n        // component may execute and set an ngSelectorScope property on the component type. This\n        // allows the component to patch itself with directiveDefs from the module after it\n        // finishes compiling.\n        if (hasSelectorScope(type)) {\n          const scopes = transitiveScopesFor(type.ngSelectorScope);\n          patchComponentDefWithScope(ngComponentDef, scopes);\n        }\n\n        if (metadata.schemas) {\n          if (meta.isStandalone) {\n            ngComponentDef.schemas = metadata.schemas;\n          } else {\n            throw new Error(\n              `The 'schemas' was specified for the ${stringifyForError(\n                type,\n              )} but is only valid on a component that is standalone.`,\n            );\n          }\n        } else if (meta.isStandalone) {\n          ngComponentDef.schemas = [];\n        }\n      }\n      return ngComponentDef;\n    },\n    set: (def: ComponentDef<unknown> | null) => {\n      ngComponentDef = def;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\n/**\n * Build memoized `directiveDefs` and `pipeDefs` functions for the component definition of a\n * standalone component, which process `imports` and filter out directives and pipes. The use of\n * memoized functions here allows for the delayed resolution of any `forwardRef`s present in the\n * component's `imports`.\n */\nfunction getStandaloneDefFunctions(\n  type: Type<any>,\n  imports: Type<any>[],\n): {\n  directiveDefs: () => DirectiveDefList;\n  pipeDefs: () => PipeDefList;\n} {\n  let cachedDirectiveDefs: DirectiveDefList | null = null;\n  let cachedPipeDefs: PipeDefList | null = null;\n  const directiveDefs = () => {\n    if (ngDevMode) {\n      for (const rawDep of imports) {\n        verifyStandaloneImport(rawDep, type);\n      }\n    }\n\n    if (!isComponent(type)) {\n      return [];\n    }\n\n    const scope = depsTracker.getStandaloneComponentScope(type, imports);\n\n    return [...scope.compilation.directives]\n      .map((p) => (getComponentDef(p) || getDirectiveDef(p))!)\n      .filter((d) => d !== null);\n  };\n\n  const pipeDefs = () => {\n    if (ngDevMode) {\n      for (const rawDep of imports) {\n        verifyStandaloneImport(rawDep, type);\n      }\n    }\n\n    if (!isComponent(type)) {\n      return [];\n    }\n\n    const scope = depsTracker.getStandaloneComponentScope(type, imports);\n\n    return [...scope.compilation.pipes].map((p) => getPipeDef(p)!).filter((d) => d !== null);\n  };\n\n  return {\n    directiveDefs,\n    pipeDefs,\n  };\n}\n\nfunction hasSelectorScope<T>(\n  component: Type<T>,\n): component is Type<T> & {ngSelectorScope: Type<any>} {\n  return (component as {ngSelectorScope?: any}).ngSelectorScope !== undefined;\n}\n\n/**\n * Compile an Angular directive according to its decorator metadata, and patch the resulting\n * directive def onto the component type.\n *\n * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n * will resolve when compilation completes and the directive becomes usable.\n */\nexport function compileDirective(type: Type<any>, directive: Directive | null): void {\n  let ngDirectiveDef: any = null;\n\n  addDirectiveFactoryDef(type, directive || {});\n\n  Object.defineProperty(type, NG_DIR_DEF, {\n    get: () => {\n      if (ngDirectiveDef === null) {\n        // `directive` can be null in the case of abstract directives as a base class\n        // that use `@Directive()` with no selector. In that case, pass empty object to the\n        // `directiveMetadata` function instead of null.\n        const meta = getDirectiveMetadata(type, directive || {});\n        const compiler = getCompilerFacade({\n          usage: JitCompilerUsage.Decorator,\n          kind: 'directive',\n          type,\n        });\n        ngDirectiveDef = compiler.compileDirective(\n          angularCoreEnv,\n          meta.sourceMapUrl,\n          meta.metadata,\n        );\n      }\n      return ngDirectiveDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\nfunction getDirectiveMetadata(type: Type<any>, metadata: Directive) {\n  const name = type && type.name;\n  const sourceMapUrl = `ng:///${name}/ɵdir.js`;\n  const compiler = getCompilerFacade({usage: JitCompilerUsage.Decorator, kind: 'directive', type});\n  const facade = directiveMetadata(type as ComponentType<any>, metadata);\n  facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n  if (facade.usesInheritance) {\n    addDirectiveDefToUndecoratedParents(type);\n  }\n  return {metadata: facade, sourceMapUrl};\n}\n\nfunction addDirectiveFactoryDef(type: Type<any>, metadata: Directive | Component) {\n  let ngFactoryDef: any = null;\n\n  Object.defineProperty(type, NG_FACTORY_DEF, {\n    get: () => {\n      if (ngFactoryDef === null) {\n        const meta = getDirectiveMetadata(type, metadata);\n        const compiler = getCompilerFacade({\n          usage: JitCompilerUsage.Decorator,\n          kind: 'directive',\n          type,\n        });\n        ngFactoryDef = compiler.compileFactory(angularCoreEnv, `ng:///${type.name}/ɵfac.js`, {\n          name: meta.metadata.name,\n          type: meta.metadata.type,\n          typeArgumentCount: 0,\n          deps: reflectDependencies(type),\n          target: compiler.FactoryTarget.Directive,\n        });\n      }\n      return ngFactoryDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\nexport function extendsDirectlyFromObject(type: Type<any>): boolean {\n  return Object.getPrototypeOf(type.prototype) === Object.prototype;\n}\n\n/**\n * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n * `Component`).\n */\nexport function directiveMetadata(type: Type<any>, metadata: Directive): R3DirectiveMetadataFacade {\n  // Reflect inputs and outputs.\n  const reflect = getReflect();\n  const propMetadata = reflect.ownPropMetadata(type);\n\n  return {\n    name: type.name,\n    type: type,\n    selector: metadata.selector !== undefined ? metadata.selector : null,\n    host: metadata.host || EMPTY_OBJ,\n    propMetadata: propMetadata,\n    inputs: metadata.inputs || EMPTY_ARRAY,\n    outputs: metadata.outputs || EMPTY_ARRAY,\n    queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n    lifecycle: {usesOnChanges: reflect.hasLifecycleHook(type, 'ngOnChanges')},\n    typeSourceSpan: null!,\n    usesInheritance: !extendsDirectlyFromObject(type),\n    exportAs: extractExportAs(metadata.exportAs),\n    providers: metadata.providers || null,\n    viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n    isStandalone: metadata.standalone === undefined ? true : !!metadata.standalone,\n    isSignal: !!metadata.signals,\n    hostDirectives:\n      metadata.hostDirectives?.map((directive) =>\n        typeof directive === 'function' ? {directive} : directive,\n      ) || null,\n  };\n}\n\n/**\n * Adds a directive definition to all parent classes of a type that don't have an Angular decorator.\n */\nfunction addDirectiveDefToUndecoratedParents(type: Type<any>) {\n  const objPrototype = Object.prototype;\n  let parent = Object.getPrototypeOf(type.prototype).constructor;\n\n  // Go up the prototype until we hit `Object`.\n  while (parent && parent !== objPrototype) {\n    // Since inheritance works if the class was annotated already, we only need to add\n    // the def if there are no annotations and the def hasn't been created already.\n    if (\n      !getDirectiveDef(parent) &&\n      !getComponentDef(parent) &&\n      shouldAddAbstractDirective(parent)\n    ) {\n      compileDirective(parent, null);\n    }\n    parent = Object.getPrototypeOf(parent);\n  }\n}\n\nfunction convertToR3QueryPredicate(selector: any): any | string[] {\n  return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n}\n\nexport function convertToR3QueryMetadata(propertyName: string, ann: Query): R3QueryMetadataFacade {\n  return {\n    propertyName: propertyName,\n    predicate: convertToR3QueryPredicate(ann.selector),\n    descendants: ann.descendants,\n    first: ann.first,\n    read: ann.read ? ann.read : null,\n    static: !!ann.static,\n    emitDistinctChangesOnly: !!ann.emitDistinctChangesOnly,\n    isSignal: !!ann.isSignal,\n  };\n}\nfunction extractQueriesMetadata(\n  type: Type<any>,\n  propMetadata: {[key: string]: any[]},\n  isQueryAnn: (ann: any) => ann is Query,\n): R3QueryMetadataFacade[] {\n  const queriesMeta: R3QueryMetadataFacade[] = [];\n  for (const field in propMetadata) {\n    if (propMetadata.hasOwnProperty(field)) {\n      const annotations = propMetadata[field];\n      annotations.forEach((ann) => {\n        if (isQueryAnn(ann)) {\n          if (!ann.selector) {\n            throw new Error(\n              `Can't construct a query for the property \"${field}\" of ` +\n                `\"${stringifyForError(type)}\" since the query selector wasn't defined.`,\n            );\n          }\n          if (annotations.some(isInputAnnotation)) {\n            throw new Error(`Cannot combine @Input decorators with query decorators`);\n          }\n          queriesMeta.push(convertToR3QueryMetadata(field, ann));\n        }\n      });\n    }\n  }\n  return queriesMeta;\n}\n\nfunction extractExportAs(exportAs: string | undefined): string[] | null {\n  return exportAs === undefined ? null : splitByComma(exportAs);\n}\n\nfunction isContentQuery(value: any): value is Query {\n  const name = value.ngMetadataName;\n  return name === 'ContentChild' || name === 'ContentChildren';\n}\n\nfunction isViewQuery(value: any): value is Query {\n  const name = value.ngMetadataName;\n  return name === 'ViewChild' || name === 'ViewChildren';\n}\n\nfunction isInputAnnotation(value: any): value is Input {\n  return value.ngMetadataName === 'Input';\n}\n\nfunction splitByComma(value: string): string[] {\n  return value.split(',').map((piece) => piece.trim());\n}\n\nconst LIFECYCLE_HOOKS = [\n  'ngOnChanges',\n  'ngOnInit',\n  'ngOnDestroy',\n  'ngDoCheck',\n  'ngAfterViewInit',\n  'ngAfterViewChecked',\n  'ngAfterContentInit',\n  'ngAfterContentChecked',\n];\n\nfunction shouldAddAbstractDirective(type: Type<any>): boolean {\n  const reflect = getReflect();\n\n  if (LIFECYCLE_HOOKS.some((hookName) => reflect.hasLifecycleHook(type, hookName))) {\n    return true;\n  }\n\n  const propMetadata = reflect.propMetadata(type);\n\n  for (const field in propMetadata) {\n    const annotations = propMetadata[field];\n\n    for (let i = 0; i < annotations.length; i++) {\n      const current = annotations[i];\n      const metadataName = current.ngMetadataName;\n\n      if (\n        isInputAnnotation(current) ||\n        isContentQuery(current) ||\n        isViewQuery(current) ||\n        metadataName === 'Output' ||\n        metadataName === 'HostBinding' ||\n        metadataName === 'HostListener'\n      ) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n"]}