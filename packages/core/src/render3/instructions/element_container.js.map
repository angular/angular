{"version":3,"file":"element_container.js","sourceRoot":"","sources":["element_container.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\nimport {validateMatchingNode, validateNodeExists} from '../../hydration/error_handling';\nimport {locateNextRNode, siblingAfter} from '../../hydration/node_lookup_utils';\nimport {\n  canHydrateNode,\n  getNgContainerSize,\n  markRNodeAsClaimedByHydration,\n  setSegmentHead,\n} from '../../hydration/utils';\nimport {assertDefined, assertNumber} from '../../util/assert';\nimport {assertTNodeCreationIndex} from '../assert';\nimport {createCommentNode} from '../dom_node_manipulation';\nimport {TElementContainerNode, TNode, TNodeType} from '../interfaces/node';\nimport {RComment} from '../interfaces/renderer_dom';\nimport {isDirectiveHost} from '../interfaces/type_checks';\nimport {HEADER_OFFSET, HYDRATION, LView, RENDERER, TVIEW, TView} from '../interfaces/view';\nimport {assertTNodeType} from '../node_assert';\nimport {executeContentQueries} from '../queries/query_execution';\nimport {\n  getBindingsEnabled,\n  getCurrentTNode,\n  getLView,\n  getTView,\n  lastNodeWasCreated,\n} from '../state';\nimport {\n  directiveHostEndFirstCreatePass,\n  directiveHostFirstCreatePass,\n  domOnlyFirstCreatePass,\n} from '../view/elements';\nimport {\n  createDirectivesInstances,\n  elementLikeEndShared,\n  elementLikeStartShared,\n  findDirectiveDefMatches,\n  saveResolvedLocalsInData,\n} from './shared';\n\n/**\n * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n * The instruction must later be followed by `elementContainerEnd()` call.\n *\n * @param index Index of the element in the LView array\n * @param attrsIndex Index of the container attributes in the `consts` array.\n * @param localRefsIndex Index of the container's local references in the `consts` array.\n * @returns This function returns itself so that it may be chained.\n *\n * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n * matching purposes and setting initial inputs of directives.\n *\n * @codeGenApi\n */\nexport function ɵɵelementContainerStart(\n  index: number,\n  attrsIndex?: number | null,\n  localRefsIndex?: number,\n): typeof ɵɵelementContainerStart {\n  const lView = getLView();\n  ngDevMode && assertTNodeCreationIndex(lView, index);\n\n  const tView = lView[TVIEW];\n  const adjustedIndex = index + HEADER_OFFSET;\n  const tNode = tView.firstCreatePass\n    ? directiveHostFirstCreatePass(\n        adjustedIndex,\n        lView,\n        TNodeType.ElementContainer,\n        'ng-container',\n        findDirectiveDefMatches,\n        getBindingsEnabled(),\n        attrsIndex,\n        localRefsIndex,\n      )\n    : (tView.data[adjustedIndex] as TElementContainerNode);\n\n  elementLikeStartShared(tNode, lView, index, 'ng-container', _locateOrCreateElementContainerNode);\n\n  if (isDirectiveHost(tNode)) {\n    const tView = lView[TVIEW];\n    createDirectivesInstances(tView, lView, tNode);\n    executeContentQueries(tView, tNode, lView);\n  }\n\n  if (localRefsIndex != null) {\n    saveResolvedLocalsInData(lView, tNode);\n  }\n\n  return ɵɵelementContainerStart;\n}\n\n/**\n * Mark the end of the <ng-container>.\n * @returns This function returns itself so that it may be chained.\n *\n * @codeGenApi\n */\nexport function ɵɵelementContainerEnd(): typeof ɵɵelementContainerEnd {\n  const tView = getTView();\n  const initialTNode = getCurrentTNode()!;\n  ngDevMode && assertDefined(initialTNode, 'No parent node to close.');\n  const currentTNode = elementLikeEndShared(initialTNode);\n\n  if (tView.firstCreatePass) {\n    directiveHostEndFirstCreatePass(tView, currentTNode);\n  }\n\n  ngDevMode && assertTNodeType(currentTNode, TNodeType.ElementContainer);\n  return ɵɵelementContainerEnd;\n}\n\n/**\n * Creates an empty logical container using {@link elementContainerStart}\n * and {@link elementContainerEnd}\n *\n * @param index Index of the element in the LView array\n * @param attrsIndex Index of the container attributes in the `consts` array.\n * @param localRefsIndex Index of the container's local references in the `consts` array.\n * @returns This function returns itself so that it may be chained.\n *\n * @codeGenApi\n */\nexport function ɵɵelementContainer(\n  index: number,\n  attrsIndex?: number | null,\n  localRefsIndex?: number,\n): typeof ɵɵelementContainer {\n  ɵɵelementContainerStart(index, attrsIndex, localRefsIndex);\n  ɵɵelementContainerEnd();\n  return ɵɵelementContainer;\n}\n\n/**\n * Creates a DOM-only logical container for other nodes (<ng-container>) backed by a comment node\n * in the DOM. The host node will *not* match any directives.\n *\n * @param index Index of the element in the LView array\n * @param attrsIndex Index of the container attributes in the `consts` array.\n * @param localRefsIndex Index of the container's local references in the `consts` array.\n * @returns This function returns itself so that it may be chained.\n *\n * @codeGenApi\n */\nexport function ɵɵdomElementContainerStart(\n  index: number,\n  attrsIndex?: number | null,\n  localRefsIndex?: number,\n): typeof ɵɵdomElementContainerStart {\n  const lView = getLView();\n  ngDevMode && assertTNodeCreationIndex(lView, index);\n\n  const tView = lView[TVIEW];\n  const adjustedIndex = index + HEADER_OFFSET;\n  const tNode = tView.firstCreatePass\n    ? domOnlyFirstCreatePass(\n        adjustedIndex,\n        tView,\n        TNodeType.ElementContainer,\n        'ng-container',\n        attrsIndex,\n        localRefsIndex,\n      )\n    : (tView.data[adjustedIndex] as TElementContainerNode);\n\n  elementLikeStartShared(tNode, lView, index, 'ng-container', _locateOrCreateElementContainerNode);\n\n  if (localRefsIndex != null) {\n    saveResolvedLocalsInData(lView, tNode);\n  }\n\n  return ɵɵdomElementContainerStart;\n}\n\n/**\n * Mark the end of a directiveless <ng-container>.\n * @returns This function returns itself so that it may be chained.\n *\n * @codeGenApi\n */\nexport function ɵɵdomElementContainerEnd(): typeof ɵɵelementContainerEnd {\n  const initialTNode = getCurrentTNode()!;\n  ngDevMode && assertDefined(initialTNode, 'No parent node to close.');\n  const currentTNode = elementLikeEndShared(initialTNode);\n  ngDevMode && assertTNodeType(currentTNode, TNodeType.ElementContainer);\n  return ɵɵelementContainerEnd;\n}\n\n/**\n * Creates an empty logical container using {@link domElementContainerStart}\n * and {@link domElementContainerEnd}\n *\n * @param index Index of the element in the LView array\n * @param attrsIndex Index of the container attributes in the `consts` array.\n * @param localRefsIndex Index of the container's local references in the `consts` array.\n * @returns This function returns itself so that it may be chained.\n *\n * @codeGenApi\n */\nexport function ɵɵdomElementContainer(\n  index: number,\n  attrsIndex?: number | null,\n  localRefsIndex?: number,\n): typeof ɵɵdomElementContainer {\n  ɵɵdomElementContainerStart(index, attrsIndex, localRefsIndex);\n  ɵɵdomElementContainerEnd();\n  return ɵɵdomElementContainer;\n}\n\nlet _locateOrCreateElementContainerNode: typeof locateOrCreateElementContainerNode = (\n  tView: TView,\n  lView: LView,\n  tNode: TNode,\n  commentText: string,\n  index: number,\n) => {\n  lastNodeWasCreated(true);\n  return createCommentNode(lView[RENDERER], ngDevMode ? commentText : '');\n};\n\n/**\n * Enables hydration code path (to lookup existing elements in DOM)\n * in addition to the regular creation mode of comment nodes that\n * represent <ng-container>'s anchor.\n */\nfunction locateOrCreateElementContainerNode(\n  tView: TView,\n  lView: LView,\n  tNode: TNode,\n  commentText: string,\n  index: number,\n): RComment {\n  let comment: RComment;\n  const isNodeCreationMode = !canHydrateNode(lView, tNode);\n\n  lastNodeWasCreated(isNodeCreationMode);\n\n  // Regular creation mode.\n  if (isNodeCreationMode) {\n    return createCommentNode(lView[RENDERER], ngDevMode ? commentText : '');\n  }\n\n  // Hydration mode, looking up existing elements in DOM.\n  const hydrationInfo = lView[HYDRATION]!;\n  const currentRNode = locateNextRNode(hydrationInfo, tView, lView, tNode)!;\n  ngDevMode && validateNodeExists(currentRNode, lView, tNode);\n\n  const ngContainerSize = getNgContainerSize(hydrationInfo, index) as number;\n  ngDevMode &&\n    assertNumber(\n      ngContainerSize,\n      'Unexpected state: hydrating an <ng-container>, ' + 'but no hydration info is available.',\n    );\n\n  setSegmentHead(hydrationInfo, index, currentRNode);\n  comment = siblingAfter<RComment>(ngContainerSize, currentRNode)!;\n\n  if (ngDevMode) {\n    validateMatchingNode(comment, Node.COMMENT_NODE, null, lView, tNode);\n    markRNodeAsClaimedByHydration(comment);\n  }\n\n  return comment;\n}\n\nexport function enableLocateOrCreateElementContainerNodeImpl() {\n  _locateOrCreateElementContainerNode = locateOrCreateElementContainerNode;\n}\n"]}