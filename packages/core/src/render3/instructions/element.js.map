{"version":3,"file":"element.js","sourceRoot":"","sources":["element.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  invalidSkipHydrationHost,\n  validateMatchingNode,\n  validateNodeExists,\n} from '../../hydration/error_handling';\nimport {locateNextRNode} from '../../hydration/node_lookup_utils';\nimport {\n  hasSkipHydrationAttrOnRElement,\n  hasSkipHydrationAttrOnTNode,\n} from '../../hydration/skip_hydration';\nimport {\n  canHydrateNode,\n  getSerializedContainerViews,\n  markRNodeAsClaimedByHydration,\n  markRNodeAsSkippedByHydration,\n  setSegmentHead,\n} from '../../hydration/utils';\nimport {assertDefined} from '../../util/assert';\nimport {assertTNodeCreationIndex} from '../assert';\nimport {clearElementContents, createElementNode} from '../dom_node_manipulation';\nimport {hasClassInput, hasStyleInput, TElementNode, TNode, TNodeType} from '../interfaces/node';\nimport {RElement} from '../interfaces/renderer_dom';\nimport {isComponentHost, isDirectiveHost} from '../interfaces/type_checks';\nimport {HEADER_OFFSET, HYDRATION, LView, RENDERER, TVIEW, TView} from '../interfaces/view';\nimport {assertTNodeType} from '../node_assert';\nimport {executeContentQueries} from '../queries/query_execution';\nimport {\n  decreaseElementDepthCount,\n  enterSkipHydrationBlock,\n  getBindingsEnabled,\n  getCurrentTNode,\n  getLView,\n  getNamespace,\n  getTView,\n  isSkipHydrationRootTNode,\n  lastNodeWasCreated,\n  leaveSkipHydrationBlock,\n} from '../state';\nimport {\n  directiveHostEndFirstCreatePass,\n  directiveHostFirstCreatePass,\n  domOnlyFirstCreatePass,\n} from '../view/elements';\n\nimport {validateElementIsKnown} from './element_validation';\nimport {setDirectiveInputsWhichShadowsStyling} from './property';\nimport {\n  createDirectivesInstances,\n  elementLikeEndShared,\n  elementLikeStartShared,\n  findDirectiveDefMatches,\n  saveResolvedLocalsInData,\n} from './shared';\n\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the LView array\n * @param name Name of the DOM Node\n * @param attrsIndex Index of the element's attributes in the `consts` array.\n * @param localRefsIndex Index of the element's local references in the `consts` array.\n * @returns This function returns itself so that it may be chained.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n *\n * @codeGenApi\n */\nexport function ɵɵelementStart(\n  index: number,\n  name: string,\n  attrsIndex?: number | null,\n  localRefsIndex?: number,\n): typeof ɵɵelementStart {\n  const lView = getLView();\n\n  ngDevMode && assertTNodeCreationIndex(lView, index);\n\n  const tView = lView[TVIEW];\n  const adjustedIndex = index + HEADER_OFFSET;\n  const tNode = tView.firstCreatePass\n    ? directiveHostFirstCreatePass(\n        adjustedIndex,\n        lView,\n        TNodeType.Element,\n        name,\n        findDirectiveDefMatches,\n        getBindingsEnabled(),\n        attrsIndex,\n        localRefsIndex,\n      )\n    : (tView.data[adjustedIndex] as TElementNode);\n\n  elementLikeStartShared(tNode, lView, index, name, _locateOrCreateElementNode);\n\n  if (isDirectiveHost(tNode)) {\n    const tView = lView[TVIEW];\n    createDirectivesInstances(tView, lView, tNode);\n    executeContentQueries(tView, tNode, lView);\n  }\n\n  if (localRefsIndex != null) {\n    saveResolvedLocalsInData(lView, tNode);\n  }\n\n  if (ngDevMode && lView[TVIEW].firstCreatePass) {\n    validateElementIsKnown(lView, tNode);\n  }\n\n  return ɵɵelementStart;\n}\n\n/**\n * Mark the end of the element.\n * @returns This function returns itself so that it may be chained.\n *\n * @codeGenApi\n */\nexport function ɵɵelementEnd(): typeof ɵɵelementEnd {\n  const tView = getTView();\n  const initialTNode = getCurrentTNode()!;\n  ngDevMode && assertDefined(initialTNode, 'No parent node to close.');\n\n  const currentTNode = elementLikeEndShared(initialTNode);\n  ngDevMode && assertTNodeType(currentTNode, TNodeType.AnyRNode);\n\n  if (tView.firstCreatePass) {\n    directiveHostEndFirstCreatePass(tView, currentTNode);\n  }\n\n  if (isSkipHydrationRootTNode(currentTNode)) {\n    leaveSkipHydrationBlock();\n  }\n\n  decreaseElementDepthCount();\n\n  if (currentTNode.classesWithoutHost != null && hasClassInput(currentTNode)) {\n    setDirectiveInputsWhichShadowsStyling(\n      tView,\n      currentTNode,\n      getLView(),\n      currentTNode.classesWithoutHost,\n      true,\n    );\n  }\n\n  if (currentTNode.stylesWithoutHost != null && hasStyleInput(currentTNode)) {\n    setDirectiveInputsWhichShadowsStyling(\n      tView,\n      currentTNode,\n      getLView(),\n      currentTNode.stylesWithoutHost,\n      false,\n    );\n  }\n  return ɵɵelementEnd;\n}\n\n/**\n * Creates an empty element using {@link elementStart} and {@link elementEnd}\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrsIndex Index of the element's attributes in the `consts` array.\n * @param localRefsIndex Index of the element's local references in the `consts` array.\n * @returns This function returns itself so that it may be chained.\n *\n * @codeGenApi\n */\nexport function ɵɵelement(\n  index: number,\n  name: string,\n  attrsIndex?: number | null,\n  localRefsIndex?: number,\n): typeof ɵɵelement {\n  ɵɵelementStart(index, name, attrsIndex, localRefsIndex);\n  ɵɵelementEnd();\n  return ɵɵelement;\n}\n\n/**\n * Create DOM element that cannot have any directives.\n *\n * @param index Index of the element in the LView array\n * @param name Name of the DOM Node\n * @param attrsIndex Index of the element's attributes in the `consts` array.\n * @param localRefsIndex Index of the element's local references in the `consts` array.\n * @returns This function returns itself so that it may be chained.\n *\n * @codeGenApi\n */\nexport function ɵɵdomElementStart(\n  index: number,\n  name: string,\n  attrsIndex?: number | null,\n  localRefsIndex?: number,\n): typeof ɵɵdomElementStart {\n  const lView = getLView();\n\n  ngDevMode && assertTNodeCreationIndex(lView, index);\n\n  const tView = lView[TVIEW];\n  const adjustedIndex = index + HEADER_OFFSET;\n  const tNode = tView.firstCreatePass\n    ? domOnlyFirstCreatePass(\n        adjustedIndex,\n        tView,\n        TNodeType.Element,\n        name,\n        attrsIndex,\n        localRefsIndex,\n      )\n    : (tView.data[adjustedIndex] as TElementNode);\n\n  elementLikeStartShared(tNode, lView, index, name, _locateOrCreateElementNode);\n\n  if (localRefsIndex != null) {\n    saveResolvedLocalsInData(lView, tNode);\n  }\n\n  if (ngDevMode && lView[TVIEW].firstCreatePass) {\n    validateElementIsKnown(lView, tNode);\n  }\n\n  return ɵɵdomElementStart;\n}\n\n/**\n * Mark the end of the directiveless element.\n * @returns This function returns itself so that it may be chained.\n *\n * @codeGenApi\n */\nexport function ɵɵdomElementEnd(): typeof ɵɵdomElementEnd {\n  const initialTNode = getCurrentTNode()!;\n  ngDevMode && assertDefined(initialTNode, 'No parent node to close.');\n\n  const currentTNode = elementLikeEndShared(initialTNode);\n  ngDevMode && assertTNodeType(currentTNode, TNodeType.AnyRNode);\n\n  if (isSkipHydrationRootTNode(currentTNode)) {\n    leaveSkipHydrationBlock();\n  }\n\n  decreaseElementDepthCount();\n\n  return ɵɵdomElementEnd;\n}\n\n/**\n * Creates an empty element using {@link domElementStart} and {@link domElementEnd}\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrsIndex Index of the element's attributes in the `consts` array.\n * @param localRefsIndex Index of the element's local references in the `consts` array.\n * @returns This function returns itself so that it may be chained.\n *\n * @codeGenApi\n */\nexport function ɵɵdomElement(\n  index: number,\n  name: string,\n  attrsIndex?: number | null,\n  localRefsIndex?: number,\n): typeof ɵɵdomElement {\n  ɵɵdomElementStart(index, name, attrsIndex, localRefsIndex);\n  ɵɵdomElementEnd();\n  return ɵɵdomElement;\n}\n\nlet _locateOrCreateElementNode: typeof locateOrCreateElementNodeImpl = (\n  tView: TView,\n  lView: LView,\n  tNode: TNode,\n  name: string,\n  index: number,\n) => {\n  lastNodeWasCreated(true);\n  return createElementNode(lView[RENDERER], name, getNamespace());\n};\n\n/**\n * Enables hydration code path (to lookup existing elements in DOM)\n * in addition to the regular creation mode of element nodes.\n */\nfunction locateOrCreateElementNodeImpl(\n  tView: TView,\n  lView: LView,\n  tNode: TNode,\n  name: string,\n  index: number,\n): RElement {\n  const isNodeCreationMode = !canHydrateNode(lView, tNode);\n  lastNodeWasCreated(isNodeCreationMode);\n\n  // Regular creation mode.\n  if (isNodeCreationMode) {\n    return createElementNode(lView[RENDERER], name, getNamespace());\n  }\n\n  // Hydration mode, looking up an existing element in DOM.\n  const hydrationInfo = lView[HYDRATION]!;\n  const native = locateNextRNode<RElement>(hydrationInfo, tView, lView, tNode)!;\n  ngDevMode && validateMatchingNode(native, Node.ELEMENT_NODE, name, lView, tNode);\n  ngDevMode && markRNodeAsClaimedByHydration(native);\n\n  // This element might also be an anchor of a view container.\n  if (getSerializedContainerViews(hydrationInfo, index)) {\n    // Important note: this element acts as an anchor, but it's **not** a part\n    // of the embedded view, so we start the segment **after** this element, taking\n    // a reference to the next sibling. For example, the following template:\n    // `<div #vcrTarget>` is represented in the DOM as `<div></div>...<!--container-->`,\n    // so while processing a `<div>` instruction, point to the next sibling as a\n    // start of a segment.\n    ngDevMode && validateNodeExists(native.nextSibling, lView, tNode);\n    setSegmentHead(hydrationInfo, index, native.nextSibling);\n  }\n\n  // Checks if the skip hydration attribute is present during hydration so we know to\n  // skip attempting to hydrate this block. We check both TNode and RElement for an\n  // attribute: the RElement case is needed for i18n cases, when we add it to host\n  // elements during the annotation phase (after all internal data structures are setup).\n  if (\n    hydrationInfo &&\n    (hasSkipHydrationAttrOnTNode(tNode) || hasSkipHydrationAttrOnRElement(native))\n  ) {\n    if (isComponentHost(tNode)) {\n      enterSkipHydrationBlock(tNode);\n\n      // Since this isn't hydratable, we need to empty the node\n      // so there's no duplicate content after render\n      clearElementContents(native);\n\n      ngDevMode && markRNodeAsSkippedByHydration(native);\n    } else if (ngDevMode) {\n      // If this is not a component host, throw an error.\n      // Hydration can be skipped on per-component basis only.\n      throw invalidSkipHydrationHost(native);\n    }\n  }\n  return native;\n}\n\nexport function enableLocateOrCreateElementNodeImpl() {\n  _locateOrCreateElementNode = locateOrCreateElementNodeImpl;\n}\n"]}