{"version":3,"file":"null_injector.js","sourceRoot":"","sources":["null_injector.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OAAO,EAAC,kBAAkB,EAAC,MAAM,sBAAsB,CAAC;AACxD,OAAO,EAAC,SAAS,EAAC,MAAM,mBAAmB,CAAC;AAG5C,OAAO,EAAC,kBAAkB,EAAC,MAAM,0BAA0B,CAAC;AAE5D,MAAM,OAAO,YAAY;IACvB,GAAG,CAAC,KAAU,EAAE,gBAAqB,kBAAkB;QACrD,IAAI,aAAa,KAAK,kBAAkB,EAAE,CAAC;YACzC,MAAM,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,2BAA2B,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YAClF,MAAM,KAAK,GAAG,kBAAkB,CAAC,OAAO,iDAAsC,CAAC;YAE/E,+EAA+E;YAC/E,KAAK,CAAC,IAAI,GAAG,WAAW,CAAC;YAEzB,MAAM,KAAK,CAAC;QACd,CAAC;QACD,OAAO,aAAa,CAAC;IACvB,CAAC;CACF","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {RuntimeErrorCode} from '../errors';\nimport {createRuntimeError} from '../render3/errors_di';\nimport {stringify} from '../util/stringify';\n\nimport type {Injector} from './injector';\nimport {THROW_IF_NOT_FOUND} from './injector_compatibility';\n\nexport class NullInjector implements Injector {\n  get(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    if (notFoundValue === THROW_IF_NOT_FOUND) {\n      const message = ngDevMode ? `No provider found for \\`${stringify(token)}\\`.` : '';\n      const error = createRuntimeError(message, RuntimeErrorCode.PROVIDER_NOT_FOUND);\n\n      // Note: This is the name used by the primitives to identify a not found error.\n      error.name = 'ÉµNotFound';\n\n      throw error;\n    }\n    return notFoundValue;\n  }\n}\n"]}