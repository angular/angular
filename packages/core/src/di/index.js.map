{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH;;;;GAIG;AAEH,cAAc,YAAY,CAAC;AAC3B,OAAO,EAAC,wBAAwB,EAAE,qBAAqB,EAAC,MAAM,cAAc,CAAC;AAC7E,OAAO,EAAC,kBAAkB,EAAE,gBAAgB,EAA+B,MAAM,kBAAkB,CAAC;AACpG,OAAO,EAAC,UAAU,EAAE,iBAAiB,EAAe,MAAM,eAAe,CAAC;AAC1E,OAAO,EAAC,UAAU,EAA0C,MAAM,cAAc,CAAC;AACjF,OAAO,EAAC,QAAQ,EAAsB,MAAM,YAAY,CAAC;AACzD,OAAO,EAAC,mBAAmB,EAAC,MAAM,eAAe,CAAC;AAClD,OAAO,EACL,mBAAmB,EAEnB,wBAAwB,EACxB,6BAA6B,GAC9B,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAC,uBAAuB,EAAC,MAAM,qBAAqB,CAAC;AAE5D,OAAO,EAAC,QAAQ,EAAE,MAAM,EAAE,mBAAmB,EAAC,MAAM,0BAA0B,CAAC;AAE/E,OAAO,EAAC,QAAQ,EAAC,MAAM,kBAAkB,CAAC;AAoB1C,OAAO,EAAC,cAAc,EAAC,MAAM,mBAAmB,CAAC;AACjD,OAAO,EAAC,kBAAkB,EAAC,MAAM,wBAAwB,CAAC;AAC1D,OAAO,EAAC,aAAa,EAAC,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAC,UAAU,IAAI,WAAW,EAAC,MAAM,eAAe,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\nexport * from './metadata';\nexport {assertInInjectionContext, runInInjectionContext} from './contextual';\nexport {ɵɵdefineInjectable, ɵɵdefineInjector, InjectableType, InjectorType} from './interface/defs';\nexport {forwardRef, resolveForwardRef, ForwardRefFn} from './forward_ref';\nexport {Injectable, InjectableDecorator, InjectableProvider} from './injectable';\nexport {Injector, DestroyableInjector} from './injector';\nexport {EnvironmentInjector} from './r3_injector';\nexport {\n  importProvidersFrom,\n  ImportProvidersSource,\n  makeEnvironmentProviders,\n  provideEnvironmentInitializer,\n} from './provider_collection';\nexport {ENVIRONMENT_INITIALIZER} from './initializer_token';\nexport {ProviderToken} from './provider_token';\nexport {ɵɵinject, inject, ɵɵinvalidFactoryDep} from './injector_compatibility';\nexport {InjectOptions} from './interface/injector';\nexport {INJECTOR} from './injector_token';\nexport {\n  ClassProvider,\n  ModuleWithProviders,\n  ClassSansProvider,\n  ConstructorProvider,\n  EnvironmentProviders,\n  ConstructorSansProvider,\n  ExistingProvider,\n  ExistingSansProvider,\n  FactoryProvider,\n  FactorySansProvider,\n  Provider,\n  StaticClassProvider,\n  StaticClassSansProvider,\n  StaticProvider,\n  TypeProvider,\n  ValueProvider,\n  ValueSansProvider,\n} from './interface/provider';\nexport {InjectionToken} from './injection_token';\nexport {HostAttributeToken} from './host_attribute_token';\nexport {HOST_TAG_NAME} from './host_tag_name_token';\nexport {R3Injector as ɵR3Injector} from './r3_injector';\n"]}