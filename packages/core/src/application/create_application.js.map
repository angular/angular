{"version":3,"file":"create_application.js","sourceRoot":"","sources":["create_application.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAKH,OAAO,EAAC,6BAA6B,EAAC,MAAM,sBAAsB,CAAC;AACnE,OAAO,EAAC,6BAA6B,EAAC,MAAM,mBAAmB,CAAC;AAChE,OAAO,EAAC,6BAA6B,EAAC,MAAM,0BAA0B,CAAC;AAGvE,OAAO,EAAC,sCAAsC,EAAC,MAAM,yDAAyD,CAAC;AAC/G,OAAO,EAAC,SAAS,EAAC,MAAM,uBAAuB,CAAC;AAChD,OAAO,EAAC,QAAQ,EAAC,MAAM,qBAAqB,CAAC;AAE7C,OAAO,EAAC,kCAAkC,EAAC,MAAM,kBAAkB,CAAC;AACpE,OAAO,EAAC,YAAY,EAAmB,MAAM,WAAW,CAAC;AAEzD,OAAO,EAAC,kCAAkC,EAAC,MAAM,mDAAmD,CAAC;AACrG,OAAO,EAAC,qBAAqB,EAAC,MAAM,sBAAsB,CAAC;AAE3D,MAAM,mBAAmB,GAAG,IAAI,CAAC;AAEjC;;;;;;;;;;GAUG;AAEH,MAAM,UAAU,yBAAyB,CAAC,MAKzC;IACC,MAAM,EAAC,aAAa,EAAE,YAAY,EAAE,iBAAiB,EAAE,WAAW,EAAC,GAAG,MAAM,CAAC;IAC7E,QAAQ,iDAAyC,CAAC;IAElD,IAAI,OAAO,YAAY,KAAK,WAAW,IAAI,YAAY,IAAI,CAAC,WAAW,EAAE,CAAC;QACxE,MAAM,IAAI,YAAY,iDAEpB,SAAS;YACP,wHAAwH;gBACtH,mFAAmF,CACxF,CAAC;IACJ,CAAC;IAED,IAAI,CAAC;QACH,MAAM,gBAAgB,GACpB,WAAW,EAAE,QAAQ,IAAI,6BAA6B,CAAC,iBAAqC,CAAC,CAAC;QAEhG,IAAI,CAAC,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,CAAC,IAAI,aAAa,KAAK,SAAS,EAAE,CAAC;YACnF,6BAA6B,CAAC,aAAa,CAAC,CAAC;QAC/C,CAAC;QAED,0FAA0F;QAC1F,+EAA+E;QAC/E,MAAM,eAAe,GAAG;YACtB,sCAAsC,EAAE;YACxC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,kCAAkC,CAAC,EAAE,CAAC;YACjE,kCAAkC;YAClC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC7C,GAAG,CAAC,YAAY,IAAI,EAAE,CAAC;SACxB,CAAC;QACF,MAAM,OAAO,GAAG,IAAI,6BAA6B,CAAC;YAChD,SAAS,EAAE,eAAe;YAC1B,MAAM,EAAE,gBAAuC;YAC/C,SAAS,EAAE,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE;YACtF,wFAAwF;YACxF,8DAA8D;YAC9D,0BAA0B,EAAE,KAAK;SAClC,CAAC,CAAC;QAEH,OAAO,SAAS,CAAC;YACf,UAAU,EAAE,OAAO,CAAC,QAAQ;YAC5B,gBAAgB;YAChB,aAAa;SACd,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACX,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;YAAS,CAAC;QACT,QAAQ,+CAAuC,CAAC;IAClD,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {EnvironmentProviders, Provider, StaticProvider} from '../di/interface/provider';\nimport {EnvironmentInjector} from '../di/r3_injector';\nimport {Type} from '../interface/type';\nimport {createOrReusePlatformInjector} from '../platform/platform';\nimport {assertStandaloneComponentType} from '../render3/errors';\nimport {EnvironmentNgModuleRefAdapter} from '../render3/ng_module_ref';\n\nimport {ApplicationRef} from './application_ref';\nimport {provideZonelessChangeDetectionInternal} from '../change_detection/scheduling/zoneless_scheduling_impl';\nimport {bootstrap} from '../platform/bootstrap';\nimport {profiler} from '../render3/profiler';\nimport {ProfilerEvent} from '../render3/profiler_types';\nimport {errorHandlerEnvironmentInitializer} from '../error_handler';\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {PlatformRef} from '../platform/platform_ref';\nimport {internalProvideZoneChangeDetection} from '../change_detection/scheduling/ng_zone_scheduling';\nimport {validAppIdInitializer} from './application_tokens';\n\nconst ZONELESS_BY_DEFAULT = true;\n\n/**\n * Internal create application API that implements the core application creation logic and optional\n * bootstrap logic.\n *\n * Platforms (such as `platform-browser`) may require different set of application and platform\n * providers for an application to function correctly. As a result, platforms may use this function\n * internally and supply the necessary providers during the bootstrap, while exposing\n * platform-specific APIs as a part of their public API.\n *\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n */\n\nexport function internalCreateApplication(config: {\n  rootComponent?: Type<unknown>;\n  appProviders?: Array<Provider | EnvironmentProviders>;\n  platformProviders?: Provider[];\n  platformRef?: PlatformRef;\n}): Promise<ApplicationRef> {\n  const {rootComponent, appProviders, platformProviders, platformRef} = config;\n  profiler(ProfilerEvent.BootstrapApplicationStart);\n\n  if (typeof ngServerMode !== 'undefined' && ngServerMode && !platformRef) {\n    throw new RuntimeError(\n      RuntimeErrorCode.PLATFORM_NOT_FOUND,\n      ngDevMode &&\n        'Missing Platform: This may be due to using `bootstrapApplication` on the server without passing a `BootstrapContext`. ' +\n          'Please make sure that `bootstrapApplication` is called with a `context` argument.',\n    );\n  }\n\n  try {\n    const platformInjector =\n      platformRef?.injector ?? createOrReusePlatformInjector(platformProviders as StaticProvider[]);\n\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && rootComponent !== undefined) {\n      assertStandaloneComponentType(rootComponent);\n    }\n\n    // Create root application injector based on a set of providers configured at the platform\n    // bootstrap level as well as providers passed to the bootstrap call by a user.\n    const allAppProviders = [\n      provideZonelessChangeDetectionInternal(),\n      ZONELESS_BY_DEFAULT ? [] : internalProvideZoneChangeDetection({}),\n      errorHandlerEnvironmentInitializer,\n      ...(ngDevMode ? [validAppIdInitializer] : []),\n      ...(appProviders || []),\n    ];\n    const adapter = new EnvironmentNgModuleRefAdapter({\n      providers: allAppProviders,\n      parent: platformInjector as EnvironmentInjector,\n      debugName: typeof ngDevMode === 'undefined' || ngDevMode ? 'Environment Injector' : '',\n      // We skip environment initializers because we need to run them inside the NgZone, which\n      // happens after we get the NgZone instance from the Injector.\n      runEnvironmentInitializers: false,\n    });\n\n    return bootstrap({\n      r3Injector: adapter.injector,\n      platformInjector,\n      rootComponent,\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  } finally {\n    profiler(ProfilerEvent.BootstrapApplicationEnd);\n  }\n}\n"]}