{"version":3,"file":"pipe_transform.js","sourceRoot":"","sources":["pipe_transform.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n/**\n * An interface that is implemented by pipes in order to perform a transformation.\n * Angular invokes the `transform` method with the value of a binding\n * as the first argument, and any parameters as the second argument in list form.\n *\n * @usageNotes\n *\n * In the following example, `TruncatePipe` returns the shortened value with an added ellipses.\n *\n * <code-example path=\"core/ts/pipes/simple_truncate.ts\" header=\"simple_truncate.ts\"></code-example>\n *\n * Invoking `{{ 'It was the best of times' | truncate }}` in a template will produce `It was...`.\n *\n * In the following example, `TruncatePipe` takes parameters that sets the truncated length and the\n * string to append with.\n *\n * <code-example path=\"core/ts/pipes/truncate.ts\" header=\"truncate.ts\"></code-example>\n *\n * Invoking `{{ 'It was the best of times' | truncate:4:'....' }}` in a template will produce `It\n * was the best....`.\n *\n * @publicApi\n */\nexport interface PipeTransform {\n  transform(value: any, ...args: any[]): any;\n}\n"]}