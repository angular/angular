{"version":3,"file":"platform_ref.js","sourceRoot":"","sources":["platform_ref.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {compileNgModuleFactory} from '../application/application_ngmodule_factory_compiler';\nimport {BootstrapOptions, optionsReducer} from '../application/application_ref';\nimport {validAppIdInitializer} from '../application/application_tokens';\nimport {provideZonelessChangeDetectionInternal} from '../change_detection/scheduling/zoneless_scheduling_impl';\nimport {Injectable, Injector, StaticProvider} from '../di';\nimport {errorHandlerEnvironmentInitializer} from '../error_handler';\nimport {RuntimeError, RuntimeErrorCode} from '../errors';\nimport {Type} from '../interface/type';\nimport {CompilerOptions} from '../linker';\nimport {NgModuleFactory, NgModuleRef} from '../linker/ng_module_factory';\nimport {createNgModuleRefWithProviders} from '../render3/ng_module_ref';\nimport {bootstrap, setModuleBootstrapImpl} from './bootstrap';\nimport {PLATFORM_DESTROY_LISTENERS} from './platform_destroy_listeners';\nimport {\n  getNgZoneOptions,\n  internalProvideZoneChangeDetection,\n} from '../change_detection/scheduling/ng_zone_scheduling';\nimport {getNgZone} from '../zone/ng_zone';\n\nconst ZONELESS_BY_DEFAULT = true;\n\n// Holds the set of providers to be used for the *next* application to be bootstrapped.\n// Used only for providing the zone related providers by default with `downgradeModule`.\nlet _additionalApplicationProviders: StaticProvider[] | undefined = undefined;\nexport function setZoneProvidersForNextBootstrap(): void {\n  _additionalApplicationProviders = internalProvideZoneChangeDetection({});\n}\n\n/**\n * The Angular platform is the entry point for Angular on a web page.\n * Each page has exactly one platform. Services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n * A page's platform is initialized implicitly when a platform is created using a platform\n * factory such as `PlatformBrowser`, or explicitly by calling the `createPlatform()` function.\n *\n * @publicApi\n */\n@Injectable({providedIn: 'platform'})\nexport class PlatformRef {\n  private _modules: NgModuleRef<any>[] = [];\n  private _destroyListeners: Array<() => void> = [];\n  private _destroyed: boolean = false;\n\n  /** @internal */\n  constructor(private _injector: Injector) {}\n\n  /**\n   * Creates an instance of an `@NgModule` for the given platform.\n   *\n   * @deprecated Passing NgModule factories as the `PlatformRef.bootstrapModuleFactory` function\n   *     argument is deprecated. Use the `PlatformRef.bootstrapModule` API instead.\n   */\n  bootstrapModuleFactory<M>(\n    moduleFactory: NgModuleFactory<M>,\n    options?: BootstrapOptions,\n  ): Promise<NgModuleRef<M>> {\n    const defaultZoneCdProviders = [];\n    if (!ZONELESS_BY_DEFAULT) {\n      const ngZoneFactory = () =>\n        getNgZone(options?.ngZone, {\n          ...getNgZoneOptions({\n            eventCoalescing: options?.ngZoneEventCoalescing,\n            runCoalescing: options?.ngZoneRunCoalescing,\n          }),\n        });\n      defaultZoneCdProviders.push(internalProvideZoneChangeDetection({ngZoneFactory}));\n    }\n    const allAppProviders = [\n      provideZonelessChangeDetectionInternal(),\n      ...defaultZoneCdProviders,\n      ...(_additionalApplicationProviders ?? []),\n      errorHandlerEnvironmentInitializer,\n      ...(ngDevMode ? [validAppIdInitializer] : []),\n    ];\n    _additionalApplicationProviders = undefined;\n    const moduleRef = createNgModuleRefWithProviders(\n      moduleFactory.moduleType,\n      this.injector,\n      allAppProviders,\n    );\n\n    setModuleBootstrapImpl();\n    return bootstrap({\n      moduleRef,\n      allPlatformModules: this._modules,\n      platformInjector: this.injector,\n    });\n  }\n\n  /**\n   * Creates an instance of an `@NgModule` for a given platform.\n   *\n   * @usageNotes\n   * ### Simple Example\n   *\n   * ```ts\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n   * ```\n   *\n   */\n  bootstrapModule<M>(\n    moduleType: Type<M>,\n    compilerOptions:\n      | (CompilerOptions & BootstrapOptions)\n      | Array<CompilerOptions & BootstrapOptions> = [],\n  ): Promise<NgModuleRef<M>> {\n    const options = optionsReducer({}, compilerOptions);\n    setModuleBootstrapImpl();\n    return compileNgModuleFactory(this.injector, options, moduleType).then((moduleFactory) =>\n      this.bootstrapModuleFactory(moduleFactory, options),\n    );\n  }\n\n  /**\n   * Registers a listener to be called when the platform is destroyed.\n   */\n  onDestroy(callback: () => void): void {\n    this._destroyListeners.push(callback);\n  }\n\n  /**\n   * Retrieves the platform {@link Injector}, which is the parent injector for\n   * every Angular application on the page and provides singleton providers.\n   */\n  get injector(): Injector {\n    return this._injector;\n  }\n\n  /**\n   * Destroys the current Angular platform and all Angular applications on the page.\n   * Destroys all modules and listeners registered with the platform.\n   */\n  destroy() {\n    if (this._destroyed) {\n      throw new RuntimeError(\n        RuntimeErrorCode.PLATFORM_ALREADY_DESTROYED,\n        ngDevMode && 'The platform has already been destroyed!',\n      );\n    }\n    this._modules.slice().forEach((module) => module.destroy());\n    this._destroyListeners.forEach((listener) => listener());\n\n    const destroyListeners = this._injector.get(PLATFORM_DESTROY_LISTENERS, null);\n    if (destroyListeners) {\n      destroyListeners.forEach((listener) => listener());\n      destroyListeners.clear();\n    }\n\n    this._destroyed = true;\n  }\n\n  /**\n   * Indicates whether this instance was destroyed.\n   */\n  get destroyed() {\n    return this._destroyed;\n  }\n}\n"]}