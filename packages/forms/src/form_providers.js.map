{"version":3,"file":"form_providers.js","sourceRoot":"","sources":["form_providers.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;AAEH,OAAO,EAAsB,QAAQ,EAAC,MAAM,eAAe,CAAC;AAE5D,OAAO,EACL,yBAAyB,EACzB,kCAAkC,EAClC,0BAA0B,EAC1B,0BAA0B,GAC3B,MAAM,cAAc,CAAC;AACtB,OAAO,EACL,uBAAuB,EACvB,uBAAuB,GAExB,MAAM,qBAAqB,CAAC;AAE7B;;;;;;;;GAQG;AAKI,IAAM,WAAW,mBAAjB,MAAM,WAAW;IACtB;;;;;;;OAOG;IACH,MAAM,CAAC,UAAU,CAAC,IAEjB;QACC,OAAO;YACL,QAAQ,EAAE,aAAW;YACrB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,uBAAuB;oBAChC,QAAQ,EAAE,IAAI,CAAC,oBAAoB,IAAI,uBAAuB;iBAC/D;aACF;SACF,CAAC;IACJ,CAAC;CACF,CAAA;AAtBY,WAAW;IAJvB,QAAQ,CAAC;QACR,YAAY,EAAE,0BAA0B;QACxC,OAAO,EAAE,CAAC,yBAAyB,EAAE,0BAA0B,CAAC;KACjE,CAAC;GACW,WAAW,CAsBvB;;AAED;;;;;;;;GAQG;AAKI,IAAM,mBAAmB,2BAAzB,MAAM,mBAAmB;IAC9B;;;;;;;;;OASG;IACH,MAAM,CAAC,UAAU,CAAC,IAGjB;QACC,OAAO;YACL,QAAQ,EAAE,qBAAmB;YAC7B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,kCAAkC;oBAC3C,QAAQ,EAAE,IAAI,CAAC,4BAA4B,IAAI,QAAQ;iBACxD;gBACD;oBACE,OAAO,EAAE,uBAAuB;oBAChC,QAAQ,EAAE,IAAI,CAAC,oBAAoB,IAAI,uBAAuB;iBAC/D;aACF;SACF,CAAC;IACJ,CAAC;CACF,CAAA;AA7BY,mBAAmB;IAJ/B,QAAQ,CAAC;QACR,YAAY,EAAE,CAAC,0BAA0B,CAAC;QAC1C,OAAO,EAAE,CAAC,yBAAyB,EAAE,0BAA0B,CAAC;KACjE,CAAC;GACW,mBAAmB,CA6B/B","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {\n  InternalFormsSharedModule,\n  NG_MODEL_WITH_FORM_CONTROL_WARNING,\n  REACTIVE_DRIVEN_DIRECTIVES,\n  TEMPLATE_DRIVEN_DIRECTIVES,\n} from './directives';\nimport {\n  CALL_SET_DISABLED_STATE,\n  setDisabledStateDefault,\n  SetDisabledStateOption,\n} from './directives/shared';\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Template-driven Forms Guide](guide/forms)\n *\n * @publicApi\n */\n@NgModule({\n  declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n  exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES],\n})\nexport class FormsModule {\n  /**\n   * @description\n   * Provides options for configuring the forms module.\n   *\n   * @param opts An object of configuration options\n   * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n   * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n   */\n  static withConfig(opts: {\n    callSetDisabledState?: SetDisabledStateOption;\n  }): ModuleWithProviders<FormsModule> {\n    return {\n      ngModule: FormsModule,\n      providers: [\n        {\n          provide: CALL_SET_DISABLED_STATE,\n          useValue: opts.callSetDisabledState ?? setDisabledStateDefault,\n        },\n      ],\n    };\n  }\n}\n\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\n@NgModule({\n  declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n  exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES],\n})\nexport class ReactiveFormsModule {\n  /**\n   * @description\n   * Provides options for configuring the reactive forms module.\n   *\n   * @param opts An object of configuration options\n   * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n   * binding is used with reactive form directives.\n   * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n   * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n   */\n  static withConfig(opts: {\n    /** @deprecated as of v6 */ warnOnNgModelWithFormControl?: 'never' | 'once' | 'always';\n    callSetDisabledState?: SetDisabledStateOption;\n  }): ModuleWithProviders<ReactiveFormsModule> {\n    return {\n      ngModule: ReactiveFormsModule,\n      providers: [\n        {\n          provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n          useValue: opts.warnOnNgModelWithFormControl ?? 'always',\n        },\n        {\n          provide: CALL_SET_DISABLED_STATE,\n          useValue: opts.callSetDisabledState ?? setDisabledStateDefault,\n        },\n      ],\n    };\n  }\n}\n"]}