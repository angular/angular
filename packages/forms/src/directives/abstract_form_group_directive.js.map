{"version":3,"file":"abstract_form_group_directive.js","sourceRoot":"","sources":["abstract_form_group_directive.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,OAAO,EAAC,SAAS,EAAoB,MAAM,eAAe,CAAC;AAI3D,OAAO,EAAC,gBAAgB,EAAC,MAAM,qBAAqB,CAAC;AAErD,OAAO,EAAC,WAAW,EAAC,MAAM,UAAU,CAAC;AAErC;;;;;GAKG;AAII,IAAM,0BAA0B,GAAhC,MAAM,0BAA2B,SAAQ,gBAAgB;IAS9D,oBAAoB;IACpB,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,4CAA4C;QAC5C,IAAI,CAAC,aAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAED,oBAAoB;IACpB,WAAW;QACT,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,0CAA0C;YAC1C,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,IAAa,OAAO;QAClB,OAAO,IAAI,CAAC,aAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAED;;;OAGG;IACH,IAAa,IAAI;QACf,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACzF,CAAC;IAED;;;OAGG;IACH,IAAa,aAAa;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC;IAC1D,CAAC;IAED,gBAAgB;IAChB,gBAAgB,KAAU,CAAC;CAC5B,CAAA;AAlDY,0BAA0B;IAHtC,SAAS,CAAC;QACT,UAAU,EAAE,KAAK;KAClB,CAAC;GACW,0BAA0B,CAkDtC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Directive, OnDestroy, OnInit} from '@angular/core';\n\nimport {FormGroup} from '../model/form_group';\n\nimport {ControlContainer} from './control_container';\nimport type {Form} from './form_interface';\nimport {controlPath} from './shared';\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\n@Directive({\n  standalone: false,\n})\nexport class AbstractFormGroupDirective extends ControlContainer implements OnInit, OnDestroy {\n  /**\n   * @description\n   * The parent control for the group\n   *\n   * @internal\n   */\n  _parent!: ControlContainer;\n\n  /** @docs-private */\n  ngOnInit(): void {\n    this._checkParentType();\n    // Register the group with its parent group.\n    this.formDirective!.addFormGroup(this);\n  }\n\n  /** @docs-private */\n  ngOnDestroy(): void {\n    if (this.formDirective) {\n      // Remove the group from its parent group.\n      this.formDirective.removeFormGroup(this);\n    }\n  }\n\n  /**\n   * @description\n   * The `FormGroup` bound to this directive.\n   */\n  override get control(): FormGroup {\n    return this.formDirective!.getFormGroup(this);\n  }\n\n  /**\n   * @description\n   * The path to this group from the top-level directive.\n   */\n  override get path(): string[] {\n    return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n  }\n\n  /**\n   * @description\n   * The top-level directive for this group if present, otherwise null.\n   */\n  override get formDirective(): Form | null {\n    return this._parent ? this._parent.formDirective : null;\n  }\n\n  /** @internal */\n  _checkParentType(): void {}\n}\n"]}