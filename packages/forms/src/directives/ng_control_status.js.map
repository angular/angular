{"version":3,"file":"ng_control_status.js","sourceRoot":"","sources":["ng_control_status.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Directive, Optional, Self, ÉµWritable as Writable} from '@angular/core';\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {NgControl} from './ng_control';\nimport {type NgForm} from './ng_form';\nimport {type FormGroupDirective} from './reactive_directives/form_group_directive';\n\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nexport class AbstractControlStatus {\n  private _cd: AbstractControlDirective | null;\n\n  constructor(cd: AbstractControlDirective | null) {\n    this._cd = cd;\n  }\n\n  protected get isTouched() {\n    // track the touched signal\n    this._cd?.control?._touched?.();\n    return !!this._cd?.control?.touched;\n  }\n\n  protected get isUntouched() {\n    return !!this._cd?.control?.untouched;\n  }\n\n  protected get isPristine() {\n    // track the pristine signal\n    this._cd?.control?._pristine?.();\n    return !!this._cd?.control?.pristine;\n  }\n\n  protected get isDirty() {\n    // pristine signal already tracked above\n    return !!this._cd?.control?.dirty;\n  }\n\n  protected get isValid() {\n    // track the status signal\n    this._cd?.control?._status?.();\n    return !!this._cd?.control?.valid;\n  }\n\n  protected get isInvalid() {\n    // status signal already tracked above\n    return !!this._cd?.control?.invalid;\n  }\n\n  protected get isPending() {\n    // status signal already tracked above\n    return !!this._cd?.control?.pending;\n  }\n\n  protected get isSubmitted() {\n    // track the submitted signal\n    (this._cd as Writable<NgForm | FormGroupDirective> | null)?._submitted?.();\n    // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n    // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n    return !!(this._cd as Writable<NgForm | FormGroupDirective> | null)?.submitted;\n  }\n}\n\nexport const ngControlStatusHost = {\n  '[class.ng-untouched]': 'isUntouched',\n  '[class.ng-touched]': 'isTouched',\n  '[class.ng-pristine]': 'isPristine',\n  '[class.ng-dirty]': 'isDirty',\n  '[class.ng-valid]': 'isValid',\n  '[class.ng-invalid]': 'isInvalid',\n  '[class.ng-pending]': 'isPending',\n};\n\nexport const ngGroupStatusHost = {\n  ...ngControlStatusHost,\n  '[class.ng-submitted]': 'isSubmitted',\n};\n\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({\n  selector: '[formControlName],[ngModel],[formControl]',\n  host: ngControlStatusHost,\n  standalone: false,\n})\nexport class NgControlStatus extends AbstractControlStatus {\n  constructor(@Self() cd: NgControl) {\n    super(cd);\n  }\n}\n\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see {@link NgControlStatus}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\n@Directive({\n  selector:\n    '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],[formArray],form:not([ngNoForm]),[ngForm]',\n  host: ngGroupStatusHost,\n  standalone: false,\n})\nexport class NgControlStatusGroup extends AbstractControlStatus {\n  constructor(@Optional() @Self() cd: ControlContainer) {\n    super(cd);\n  }\n}\n"]}