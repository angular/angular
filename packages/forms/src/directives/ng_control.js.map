{"version":3,"file":"ng_control.js","sourceRoot":"","sources":["ng_control.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAC,wBAAwB,EAAC,MAAM,8BAA8B,CAAC;AAItE;;;;;;GAMG;AACH,MAAM,OAAgB,SAAU,SAAQ,wBAAwB;IAAhE;;QACE;;;;;WAKG;QACH,YAAO,GAA4B,IAAI,CAAC;QAExC;;;WAGG;QACH,SAAI,GAA2B,IAAI,CAAC;QAEpC;;;WAGG;QACH,kBAAa,GAAgC,IAAI,CAAC;IASpD,CAAC;CAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor} from './control_value_accessor';\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nexport abstract class NgControl extends AbstractControlDirective {\n  /**\n   * @description\n   * The parent form for the control.\n   *\n   * @internal\n   */\n  _parent: ControlContainer | null = null;\n\n  /**\n   * @description\n   * The name for the control\n   */\n  name: string | number | null = null;\n\n  /**\n   * @description\n   * The value accessor for the control\n   */\n  valueAccessor: ControlValueAccessor | null = null;\n\n  /**\n   * @description\n   * The callback method to update the model from the view when requested\n   *\n   * @param newValue The new value for the view\n   */\n  abstract viewToModelUpdate(newValue: any): void;\n}\n"]}