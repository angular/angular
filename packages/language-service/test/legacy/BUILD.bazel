load("//tools:defaults2.bzl", "jasmine_test", "ts_project")

ts_project(
    name = "legacy_lib",
    testonly = True,
    srcs = glob(["*.ts"]),
    deps = [
        "//:node_modules/typescript",
        "//packages/compiler:compiler_rjs",
        "//packages/compiler-cli/src/ngtsc/core:api_rjs",
        "//packages/compiler-cli/src/ngtsc/diagnostics:diagnostics_rjs",
        "//packages/language-service/src:src_rjs",
        "//packages/language-service/src/utils:utils_rjs",
    ],
)

filegroup(
    name = "package_types",
    srcs = [
        "//packages/common:common_rjs",
        "//packages/core:core_rjs",
        "//packages/forms:forms_rjs",
    ],
    output_group = "types",
)

jasmine_test(
    name = "legacy",
    data = [
        # Note that we used to depend on the npm_package of common, core, and
        # forms, but this is no longer the case. We did it for View Engine
        # because we wanted to load the flat dts, which is only available in the
        # npm_package. Ivy does not currently produce flat dts, so we might
        # as well just depend on the outputs of ng_module.
        "//packages/common:common_rjs",
        "//packages/forms:forms_rjs",
        ":package_types",
        ":project",
        ":legacy_lib",
        # TODO(rules_js migration): determine how to get these to be provided from other deps as expected.
        "//:node_modules/typescript",
        "//:node_modules/semver",
        "//:node_modules/magic-string",
    ],
    shard_count = 4,
)

filegroup(
    name = "project",
    srcs = glob(["project/**/*"]),
    visibility = ["//packages/language-service:__subpackages__"],
)
