{
  "repo": "angular/components",
  "moduleLabel": "@angular/aria/radio-group",
  "moduleName": "@angular/aria/radio-group",
  "normalizedModuleName": "angular_aria_radio-group",
  "entries": [
    {
      "name": "RadioGroup",
      "isAbstract": false,
      "entryType": "undecorated_class",
      "members": [
        {
          "name": "textDirection",
          "type": "any",
          "memberType": "property",
          "memberTags": [
            "protected"
          ],
          "description": "A signal wrapper for directionality.",
          "jsdocTags": []
        },
        {
          "name": "items",
          "type": "any",
          "memberType": "property",
          "memberTags": [
            "protected"
          ],
          "description": "The RadioButton UIPatterns of the child RadioButtons.",
          "jsdocTags": []
        },
        {
          "name": "orientation",
          "type": "any",
          "memberType": "property",
          "memberTags": [
            "readonly"
          ],
          "description": "Whether the radio group is vertically or horizontally oriented.",
          "jsdocTags": []
        },
        {
          "name": "skipDisabled",
          "type": "any",
          "memberType": "property",
          "memberTags": [
            "readonly"
          ],
          "description": "Whether disabled items in the group should be skipped when navigating.",
          "jsdocTags": []
        },
        {
          "name": "focusMode",
          "type": "any",
          "memberType": "property",
          "memberTags": [
            "readonly"
          ],
          "description": "The focus strategy used by the radio group.",
          "jsdocTags": []
        },
        {
          "name": "disabled",
          "type": "any",
          "memberType": "property",
          "memberTags": [
            "readonly"
          ],
          "description": "Whether the radio group is disabled.",
          "jsdocTags": []
        },
        {
          "name": "readonly",
          "type": "any",
          "memberType": "property",
          "memberTags": [
            "readonly"
          ],
          "description": "Whether the radio group is readonly.",
          "jsdocTags": []
        },
        {
          "name": "value",
          "type": "any",
          "memberType": "property",
          "memberTags": [
            "readonly"
          ],
          "description": "The value of the currently selected radio button.",
          "jsdocTags": []
        },
        {
          "name": "onFocus",
          "signatures": [
            {
              "name": "onFocus",
              "entryType": "function",
              "description": "",
              "generics": [],
              "isNewType": false,
              "jsdocTags": [],
              "params": [],
              "rawComment": "",
              "returnType": "void"
            }
          ],
          "implementation": {
            "params": [],
            "isNewType": false,
            "returnType": "void",
            "generics": [],
            "name": "onFocus",
            "description": "",
            "entryType": "function",
            "jsdocTags": [],
            "rawComment": ""
          },
          "entryType": "function",
          "description": "",
          "jsdocTags": [],
          "rawComment": "",
          "memberType": "method",
          "memberTags": []
        }
      ],
      "generics": [
        {
          "name": "V"
        }
      ],
      "description": "A radio button group container.\n\nRadio groups are used to group multiple radio buttons or radio group labels so they function as\na single form control. The RadioGroup is meant to be used in conjunction with RadioButton\nas follows:\n\n```html\n<div ngRadioGroup>\n  <div ngRadioButton value=\"1\">Option 1</div>\n  <div ngRadioButton value=\"2\">Option 2</div>\n  <div ngRadioButton value=\"3\">Option 3</div>\n</div>\n```",
      "jsdocTags": [],
      "rawComment": "/**\n * A radio button group container.\n *\n * Radio groups are used to group multiple radio buttons or radio group labels so they function as\n * a single form control. The RadioGroup is meant to be used in conjunction with RadioButton\n * as follows:\n *\n * ```html\n * <div ngRadioGroup>\n *   <div ngRadioButton value=\"1\">Option 1</div>\n *   <div ngRadioButton value=\"2\">Option 2</div>\n *   <div ngRadioButton value=\"3\">Option 3</div>\n * </div>\n * ```\n */",
      "implements": [],
      "source": {
        "filePath": "/src/aria/radio-group/radio-group.ts",
        "startLine": 84,
        "endLine": 200
      }
    },
    {
      "name": "RadioButton",
      "isAbstract": false,
      "entryType": "directive",
      "members": [
        {
          "name": "id",
          "type": "any",
          "memberType": "property",
          "memberTags": [
            "readonly"
          ],
          "description": "A unique identifier for the radio button.",
          "jsdocTags": []
        },
        {
          "name": "value",
          "type": "any",
          "memberType": "property",
          "memberTags": [
            "readonly",
            "input"
          ],
          "description": "The value associated with the radio button.",
          "jsdocTags": [],
          "inputAlias": "value",
          "isRequiredInput": true
        },
        {
          "name": "group",
          "type": "any",
          "memberType": "property",
          "memberTags": [
            "readonly"
          ],
          "description": "The parent RadioGroup UIPattern.",
          "jsdocTags": []
        },
        {
          "name": "element",
          "type": "any",
          "memberType": "property",
          "memberTags": [],
          "description": "A reference to the radio button element to be focused on navigation.",
          "jsdocTags": []
        },
        {
          "name": "disabled",
          "type": "any",
          "memberType": "property",
          "memberTags": [
            "input"
          ],
          "description": "Whether the radio button is disabled.",
          "jsdocTags": [],
          "inputAlias": "disabled",
          "isRequiredInput": false
        },
        {
          "name": "selected",
          "type": "any",
          "memberType": "property",
          "memberTags": [
            "readonly"
          ],
          "description": "Whether the radio button is selected.",
          "jsdocTags": []
        }
      ],
      "generics": [
        {
          "name": "V"
        }
      ],
      "description": "A selectable radio button in a RadioGroup.",
      "jsdocTags": [],
      "rawComment": "/** A selectable radio button in a RadioGroup. */",
      "implements": [],
      "isStandalone": true,
      "selector": "[ngRadioButton]",
      "exportAs": [
        "ngRadioButton"
      ],
      "source": {
        "filePath": "/src/aria/radio-group/radio-group.ts",
        "startLine": 203,
        "endLine": 252
      }
    }
  ],
  "symbols": [
    [
      "afterRenderEffect",
      "@angular/core"
    ],
    [
      "booleanAttribute",
      "@angular/core"
    ],
    [
      "computed",
      "@angular/core"
    ],
    [
      "contentChildren",
      "@angular/core"
    ],
    [
      "Directive",
      "@angular/core"
    ],
    [
      "ElementRef",
      "@angular/core"
    ],
    [
      "inject",
      "@angular/core"
    ],
    [
      "input",
      "@angular/core"
    ],
    [
      "linkedSignal",
      "@angular/core"
    ],
    [
      "model",
      "@angular/core"
    ],
    [
      "signal",
      "@angular/core"
    ],
    [
      "WritableSignal",
      "@angular/core"
    ],
    [
      "RadioButtonPattern",
      "@angular/aria/private"
    ],
    [
      "RadioGroupInputs",
      "@angular/aria/private"
    ],
    [
      "RadioGroupPattern",
      "@angular/aria/private"
    ],
    [
      "ToolbarRadioGroupInputs",
      "@angular/aria/private"
    ],
    [
      "ToolbarRadioGroupPattern",
      "@angular/aria/private"
    ],
    [
      "Directionality",
      "@angular/cdk/bidi"
    ],
    [
      "_IdGenerator",
      "@angular/cdk/a11y"
    ],
    [
      "ToolbarWidgetGroup",
      "@angular/aria/toolbar"
    ],
    [
      "RadioGroup",
      "@angular/aria/radio-group"
    ],
    [
      "RadioButton",
      "@angular/aria/radio-group"
    ],
    [
      "RadioGroup",
      "@angular/aria/radio-group"
    ],
    [
      "RadioGroup.textDirection",
      "@angular/aria/radio-group"
    ],
    [
      "RadioGroup.items",
      "@angular/aria/radio-group"
    ],
    [
      "RadioGroup.orientation",
      "@angular/aria/radio-group"
    ],
    [
      "RadioGroup.skipDisabled",
      "@angular/aria/radio-group"
    ],
    [
      "RadioGroup.focusMode",
      "@angular/aria/radio-group"
    ],
    [
      "RadioGroup.disabled",
      "@angular/aria/radio-group"
    ],
    [
      "RadioGroup.readonly",
      "@angular/aria/radio-group"
    ],
    [
      "RadioGroup.value",
      "@angular/aria/radio-group"
    ],
    [
      "RadioGroup.onFocus",
      "@angular/aria/radio-group"
    ],
    [
      "RadioButton",
      "@angular/aria/radio-group"
    ],
    [
      "RadioButton.id",
      "@angular/aria/radio-group"
    ],
    [
      "RadioButton.value",
      "@angular/aria/radio-group"
    ],
    [
      "RadioButton.group",
      "@angular/aria/radio-group"
    ],
    [
      "RadioButton.element",
      "@angular/aria/radio-group"
    ],
    [
      "RadioButton.disabled",
      "@angular/aria/radio-group"
    ],
    [
      "RadioButton.selected",
      "@angular/aria/radio-group"
    ]
  ]
}