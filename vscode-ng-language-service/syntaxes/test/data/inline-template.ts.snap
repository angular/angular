>/* clang-format off */
#^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>
>/* Inline template recognition tests */
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>@Component({
#^^^^^^^^^^^^^ inline-template.ng
>  //// Property key/value test
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>  template: '<div></div>',
#^^ inline-template.ng
#  ^^^^^^^^ inline-template.ng meta.object-literal.key.ts
#          ^ inline-template.ng meta.object-literal.key.ts punctuation.separator.key-value.ts
#           ^ inline-template.ng
#            ^ inline-template.ng string
#             ^^^^^^^^^^^ inline-template.ng text.html.derivative
#                        ^ inline-template.ng string
#                         ^^ inline-template.ng
>
>  //// String delimiter tests
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>  template: `<div></div>`,
#^^ inline-template.ng
#  ^^^^^^^^ inline-template.ng meta.object-literal.key.ts
#          ^ inline-template.ng meta.object-literal.key.ts punctuation.separator.key-value.ts
#           ^ inline-template.ng
#            ^ inline-template.ng string
#             ^^^^^^^^^^^ inline-template.ng text.html.derivative
#                        ^ inline-template.ng string
#                         ^^ inline-template.ng
>  template: "<div></div>",
#^^ inline-template.ng
#  ^^^^^^^^ inline-template.ng meta.object-literal.key.ts
#          ^ inline-template.ng meta.object-literal.key.ts punctuation.separator.key-value.ts
#           ^ inline-template.ng
#            ^ inline-template.ng string
#             ^^^^^^^^^^^ inline-template.ng text.html.derivative
#                        ^ inline-template.ng string
#                         ^^ inline-template.ng
>  template: '<div></div>',
#^^ inline-template.ng
#  ^^^^^^^^ inline-template.ng meta.object-literal.key.ts
#          ^ inline-template.ng meta.object-literal.key.ts punctuation.separator.key-value.ts
#           ^ inline-template.ng
#            ^ inline-template.ng string
#             ^^^^^^^^^^^ inline-template.ng text.html.derivative
#                        ^ inline-template.ng string
#                         ^^ inline-template.ng
>
>  //// Parenthesization tests
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>  template: ( (( '<div></div>' )) ),
#^^ inline-template.ng
#  ^^^^^^^^ inline-template.ng meta.object-literal.key.ts
#          ^ inline-template.ng meta.object-literal.key.ts punctuation.separator.key-value.ts
#           ^ inline-template.ng
#            ^ inline-template.ng meta.brace.round.ts
#             ^ inline-template.ng
#              ^ inline-template.ng meta.brace.round.ts
#               ^ inline-template.ng meta.brace.round.ts
#                ^ inline-template.ng
#                 ^ inline-template.ng string
#                  ^^^^^^^^^^^ inline-template.ng text.html.derivative
#                             ^ inline-template.ng string
#                              ^ inline-template.ng
#                               ^ inline-template.ng meta.brace.round.ts
#                                ^ inline-template.ng meta.brace.round.ts
#                                 ^ inline-template.ng
#                                  ^ inline-template.ng meta.brace.round.ts
#                                   ^^ inline-template.ng
>
>  //// Comments tests
#^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>  // template: '<div></div>'
#^^^^^ inline-template.ng
#     ^^^^^^^^ inline-template.ng meta.object-literal.key.ts
#             ^ inline-template.ng meta.object-literal.key.ts punctuation.separator.key-value.ts
#              ^ inline-template.ng
#               ^ inline-template.ng string
#                ^^^^^^^^^^^ inline-template.ng text.html.derivative
#                           ^ inline-template.ng string
>  /*
#^^^^^ inline-template.ng
>   * template: '<div></div>'
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>   */
#^^^^^^ inline-template.ng
>  /**
#^^^^^^ inline-template.ng
>   * template: '<div></div>'
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>   */
#^^^^^^ inline-template.ng
>})
#^^^ inline-template.ng
>export class TMComponent{}
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>
>/* Template syntax tests */
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>@Component({
#^^^^^^^^^^^^^ inline-template.ng
>  // Interpolation test
#^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>  template: '{{property}}',
#^^ inline-template.ng
#  ^^^^^^^^ inline-template.ng meta.object-literal.key.ts
#          ^ inline-template.ng meta.object-literal.key.ts punctuation.separator.key-value.ts
#           ^ inline-template.ng
#            ^ inline-template.ng string
#             ^^ inline-template.ng text.html.derivative punctuation.definition.block.ts
#               ^^^^^^^^ inline-template.ng text.html.derivative expression.ng variable.other.readwrite.ts
#                       ^^ inline-template.ng text.html.derivative punctuation.definition.block.ts
#                         ^ inline-template.ng string
#                          ^^ inline-template.ng
>})
#^^^ inline-template.ng
>export class TMComponent{}
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline-template.ng
>