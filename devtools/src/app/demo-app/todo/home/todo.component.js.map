{"version":3,"file":"todo.component.js","sourceRoot":"","sources":["todo.component.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,OAAO,EAAC,uBAAuB,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAC,MAAM,eAAe,CAAC;AAGhF,OAAO,EAAC,gBAAgB,EAAC,MAAM,qBAAqB,CAAC;AAS9C,IAAM,aAAa,GAAnB,MAAM,aAAa;IAAnB;QACI,SAAI,GAAG,KAAK,CAAC,QAAQ,EAAQ,CAAC;QAC9B,WAAM,GAAG,MAAM,EAAQ,CAAC;QACxB,WAAM,GAAG,MAAM,EAAQ,CAAC;QAEjC,aAAQ,GAAG,KAAK,CAAC;IAgBnB,CAAC;IAdC,MAAM;QACJ,IAAI,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAChC,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAChC,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;CACF,CAAA;AArBY,aAAa;IAPzB,SAAS,CAAC;QACT,WAAW,EAAE,qBAAqB;QAClC,QAAQ,EAAE,UAAU;QACpB,eAAe,EAAE,uBAAuB,CAAC,MAAM;QAC/C,SAAS,EAAE,CAAC,uBAAuB,CAAC;QACpC,OAAO,EAAE,CAAC,gBAAgB,CAAC;KAC5B,CAAC;GACW,aAAa,CAqBzB","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ChangeDetectionStrategy, Component, input, output} from '@angular/core';\n\nimport {Todo} from './todo';\nimport {TooltipDirective} from './tooltip.directive';\n\n@Component({\n  templateUrl: 'todo.component.html',\n  selector: 'app-todo',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./todo.component.scss'],\n  imports: [TooltipDirective],\n})\nexport class TodoComponent {\n  readonly todo = input.required<Todo>();\n  readonly update = output<Todo>();\n  readonly delete = output<Todo>();\n\n  editMode = false;\n\n  toggle(): void {\n    this.todo().completed = !this.todo().completed;\n    this.update.emit(this.todo());\n  }\n\n  completeEdit(label: string): void {\n    this.todo().label = label;\n    this.editMode = false;\n    this.update.emit(this.todo());\n  }\n\n  enableEditMode(): void {\n    this.editMode = true;\n  }\n}\n"]}