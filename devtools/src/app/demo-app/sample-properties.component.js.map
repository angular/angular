{"version":3,"file":"sample-properties.component.js","sourceRoot":"","sources":["sample-properties.component.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,OAAO,EAAC,SAAS,EAAE,QAAQ,EAAc,MAAM,EAAE,MAAM,EAAE,SAAS,EAAC,MAAM,eAAe,CAAC;AACzF,OAAO,EAAC,MAAM,EAAC,MAAM,kCAAkC,CAAC;AAExD,OAAO,EAAC,aAAa,EAAC,MAAM,kBAAkB,CAAC;AAOxC,IAAM,yBAAyB,GAA/B,MAAM,yBAAyB;IAA/B;QACI,eAAU,GAAG,SAAS,CAAa,kBAAkB,CAAC,CAAC;QAEhE,mBAAc,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;QAEvC,mBAAc,GAAG,IAAI,CAAC;QACtB,kBAAa,GAAG,MAAM,CAAC;QACvB,kBAAa,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,kBAAa,GAAG,EAAE,CAAC;QACnB,kBAAa,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QAC3B,qBAAgB,GAAG,SAAS,CAAC;QAC7B,gBAAW,GAAG,IAAI,CAAC;QAEnB,kBAAa,GAAG,EAAC,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAC,CAAC;QACxC,iBAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAC,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,YAAY,CAAC,EAAC,CAAC,CAAC;QAC/E,eAAU,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACtC,eAAU,GAAG,IAAI,GAAG,CAAmB;YACrC,CAAC,MAAM,EAAE,MAAM,CAAC;YAChB,CAAC,KAAK,EAAE,EAAE,CAAC;YACX,CAAC,EAAC,EAAE,EAAE,GAAG,EAAC,EAAE,SAAS,CAAC;SACvB,CAAC,CAAC;QACH,gBAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,oBAAe,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;QAE/B,oBAAe,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAC9B,sBAAiB,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC,CAAC;QAChE,iBAAY,GAAG,MAAM,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;QAC/C,mBAAc,GAAG,QAAQ,CAAC,GAAG,EAAE;YAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACrC,OAAO,EAAC,GAAG,QAAQ,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,GAAG,CAAC,EAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QAEH,iBAAY,GAAG,MAAM,CAAC;IACxB,CAAC;CAAA,CAAA;AAjCY,yBAAyB;IALrC,SAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,QAAQ,EAAE,EAAE;QACZ,MAAM,EAAE,CAAC,EAAE,CAAC;KACb,CAAC;GACW,yBAAyB,CAiCrC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Component, computed, ElementRef, inject, signal, viewChild} from '@angular/core';\nimport {SIGNAL} from '@angular/core/primitives/signals';\n\nimport {SampleService} from './sample.service';\n\n@Component({\n  selector: 'app-sample-properties',\n  template: '',\n  styles: [''],\n})\nexport class SamplePropertiesComponent {\n  readonly elementRef = viewChild<ElementRef>('elementReference');\n\n  exampleService = inject(SampleService);\n\n  exampleBoolean = true;\n  exampleString = 'John';\n  exampleSymbol = Symbol.iterator;\n  exampleNumber = 40;\n  exampleBigint = BigInt(40);\n  exampleUndefined = undefined;\n  exampleNull = null;\n\n  exampleObject = {name: 'John', age: 40};\n  exampleArray = [1, 2, [3, 4], {name: 'John', age: 40, skills: ['JavaScript']}];\n  exampleSet = new Set([1, 2, 3, 4, 5]);\n  exampleMap = new Map<unknown, unknown>([\n    ['name', 'John'],\n    ['age', 40],\n    [{id: 123}, undefined],\n  ]);\n  exampleDate = new Date();\n  exampleFunction = () => 'John';\n\n  signalPrimitive = signal(123);\n  computedPrimitive = computed(() => this.signalPrimitive() ** 2);\n  signalObject = signal({name: 'John', age: 40});\n  computedObject = computed(() => {\n    const original = this.signalObject();\n    return {...original, age: original.age + 1};\n  });\n\n  signalSymbol = SIGNAL;\n}\n"]}