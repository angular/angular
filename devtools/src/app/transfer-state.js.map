{"version":3,"file":"transfer-state.js","sourceRoot":"","sources":["transfer-state.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAC,UAAU,EAAC,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,aAAa,EAAC,MAAM,eAAe,CAAC;AAEpF;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,sBAAsB;IAC1C,MAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC7B,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAC7B,MAAM,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;IAC5C,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IAEtC,SAAS;IACT,MAAM,MAAM,GAAG,YAAY,CAAM,KAAK,CAAC,CAAC;IACxC,aAAa,CAAC,GAAG,CAAC,MAAM,EAAE;QACxB,OAAO,EAAE,UAAU;QACnB,UAAU,EAAE,OAAO;QACnB,cAAc,EAAE,kBAAkB;KACnC,CAAC,CAAC;IAEH,QAAQ;IACR,MAAM,QAAQ,GAAG,YAAY,CAAM,KAAK,CAAC,CAAC;IAC1C,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAE7C,gDAAgD;IAChD,MAAM,OAAO,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC;IACvC,MAAM,MAAM,GAAG,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC3C,MAAM,CAAC,WAAW,GAAG,OAAO,CAAC;IAE7B,MAAM,CAAC,EAAE,GAAG,KAAK,GAAG,QAAQ,CAAC;IAC7B,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;IAEhD,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAC/B,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {HttpClient} from '@angular/common/http';\nimport {APP_ID, DOCUMENT, inject, makeStateKey, TransferState} from '@angular/core';\n\n/**\n * This function serializes the transfer state into the DOM.\n */\nexport async function serializeTransferState(): Promise<void> {\n  const doc = inject(DOCUMENT);\n  const appId = inject(APP_ID);\n  const transferState = inject(TransferState);\n  const httpClient = inject(HttpClient);\n\n  // Object\n  const Objkey = makeStateKey<any>('obj');\n  transferState.set(Objkey, {\n    appName: 'DevTools',\n    appVersion: '0.0.1',\n    appDescription: 'Angular DevTools',\n  });\n\n  // Array\n  const arraykey = makeStateKey<any>('arr');\n  transferState.set(arraykey, [1, 2, 3, 4, 5]);\n\n  // Serialized of the TransferState into the DOM.\n  const content = transferState.toJson();\n  const script = doc.createElement('script');\n  script.textContent = content;\n\n  script.id = appId + '-state';\n  script.setAttribute('type', 'application/json');\n\n  doc.body.appendChild(script);\n}\n"]}