{"version":3,"file":"iframe-message-bus.js","sourceRoot":"","sources":["iframe-message-bus.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAS,UAAU,EAAa,MAAM,sBAAsB,CAAC;AAEpE,MAAM,OAAO,gBAAiB,SAAQ,UAAkB;IAGtD,YACmB,MAAc,EACd,WAAmB,EACnB,SAAuB;QAExC,KAAK,EAAE,CAAC;QAJS,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAQ;QACnB,cAAS,GAAT,SAAS,CAAc;QALlC,cAAS,GAAU,EAAE,CAAC;IAQ9B,CAAC;IAEQ,EAAE,CAAyB,KAAQ,EAAE,EAAa;QACzD,MAAM,QAAQ,GAAG,CAAC,CAAe,EAAE,EAAE;YACnC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;gBACnE,OAAO;YACT,CAAC;YACD,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE,CAAC;gBAC1B,EAAiB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9C,CAAC;QACH,CAAC,CAAC;QACF,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,OAAO,GAAG,EAAE;YACV,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAClD,CAAC,CAAC;IACJ,CAAC;IAEQ,IAAI,CAAyB,KAAQ,EAAE,EAAa;QAC3D,MAAM,QAAQ,GAAG,CAAC,CAAe,EAAE,EAAE;YACnC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;gBACnE,OAAO;YACT,CAAC;YACD,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE,CAAC;gBAC1B,EAAU,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACrC,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAClD,CAAC;QACH,CAAC,CAAC;QACF,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAEQ,IAAI,CAAyB,KAAQ,EAAE,IAA4B;QAC1E,IAAI,CAAC,SAAS,EAAE,CAAC,WAAW,CAC1B;YACE,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,KAAK;YACL,IAAI;YACJ,qEAAqE;YACrE,uEAAuE;YACvE,+DAA+D;YAC/D,sEAAsE;YACtE,wBAAwB;YACxB,kBAAkB,EAAE,IAAI,CAAC,MAAM,KAAK,kBAAkB;YACtD,qBAAqB,EAAE,IAAI;SAC5B,EACD,GAAG,CACJ,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;IAEQ,OAAO;QACd,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;CACF","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Events, MessageBus, Parameters} from '../projects/protocol';\n\nexport class IFrameMessageBus extends MessageBus<Events> {\n  private listeners: any[] = [];\n\n  constructor(\n    private readonly source: string,\n    private readonly destination: string,\n    private readonly docWindow: () => Window,\n  ) {\n    super();\n  }\n\n  override on<E extends keyof Events>(topic: E, cb: Events[E]): () => void {\n    const listener = (e: MessageEvent) => {\n      if (!e.data || e.data.source !== this.destination || !e.data.topic) {\n        return;\n      }\n      if (e.data.topic === topic) {\n        (cb as () => void).apply(null, e.data.args);\n      }\n    };\n    window.addEventListener('message', listener);\n    this.listeners.push(listener);\n    return () => {\n      this.listeners.splice(this.listeners.indexOf(listener), 1);\n      window.removeEventListener('message', listener);\n    };\n  }\n\n  override once<E extends keyof Events>(topic: E, cb: Events[E]): void {\n    const listener = (e: MessageEvent) => {\n      if (!e.data || e.data.source !== this.destination || !e.data.topic) {\n        return;\n      }\n      if (e.data.topic === topic) {\n        (cb as any).apply(null, e.data.args);\n        window.removeEventListener('message', listener);\n      }\n    };\n    window.addEventListener('message', listener);\n  }\n\n  override emit<E extends keyof Events>(topic: E, args?: Parameters<Events[E]>): boolean {\n    this.docWindow().postMessage(\n      {\n        source: this.source,\n        topic,\n        args,\n        // Since both the devtools app and the demo app use IframeMessageBus,\n        // we want to only ignore the ngZone for the demo app. This will let us\n        // prevent infinite change detection loops triggered by message\n        // event listeners but also not prevent the NgZone in the devtools app\n        // from updating its UI.\n        __ignore_ng_zone__: this.source === 'angular-devtools',\n        __NG_DEVTOOLS_EVENT__: true,\n      },\n      '*',\n    );\n    return true;\n  }\n\n  override destroy(): void {\n    this.listeners.forEach((l) => window.removeEventListener('message', l));\n    this.listeners = [];\n  }\n}\n"]}