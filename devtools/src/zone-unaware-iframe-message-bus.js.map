{"version":3,"file":"zone-unaware-iframe-message-bus.js","sourceRoot":"","sources":["zone-unaware-iframe-message-bus.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAS,UAAU,EAAa,MAAM,sBAAsB,CAAC;AAEpE,OAAO,EAAC,gBAAgB,EAAC,MAAM,sBAAsB,CAAC;AAEtD,MAAM,iBAAiB,GAAG,CAAC,CAAY,EAAE,EAAE;IACzC,MAAM,CAAC,GAAG,MAAa,CAAC;IACxB,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;QAClD,CAAC,EAAE,CAAC;QACJ,OAAO;IACT,CAAC;IACD,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC;AAEF,MAAM,OAAO,2BAA4B,SAAQ,UAAkB;IAGjE,YAAY,MAAc,EAAE,WAAmB,EAAE,SAAuB;QACtE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,QAAQ,GAAG,IAAI,gBAAgB,CAAC,MAAM,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;IACvE,CAAC;IAEQ,EAAE,CAAyB,KAAQ,EAAE,EAAa;QACzD,IAAI,MAAW,CAAC;QAChB,iBAAiB,CAAC,GAAG,EAAE;YACrB,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAEQ,IAAI,CAAyB,KAAQ,EAAE,EAAa;QAC3D,IAAI,MAAW,CAAC;QAChB,iBAAiB,CAAC,GAAG,EAAE;YACrB,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,yEAAyE;IACzE,6BAA6B;IACpB,IAAI,CAAyB,KAAQ,EAAE,IAA4B;QAC1E,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;IAEQ,OAAO;QACd,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;CACF","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Events, MessageBus, Parameters} from '../projects/protocol';\n\nimport {IFrameMessageBus} from './iframe-message-bus';\n\nconst runOutsideAngular = (f: () => any) => {\n  const w = window as any;\n  if (!w.Zone || w.Zone.current._name !== 'angular') {\n    f();\n    return;\n  }\n  w.Zone.current._parent.run(f);\n};\n\nexport class ZoneUnawareIFrameMessageBus extends MessageBus<Events> {\n  private delegate: IFrameMessageBus;\n\n  constructor(source: string, destination: string, docWindow: () => Window) {\n    super();\n    this.delegate = new IFrameMessageBus(source, destination, docWindow);\n  }\n\n  override on<E extends keyof Events>(topic: E, cb: Events[E]): any {\n    let result: any;\n    runOutsideAngular(() => {\n      result = this.delegate.on(topic, cb);\n    });\n    return result;\n  }\n\n  override once<E extends keyof Events>(topic: E, cb: Events[E]): any {\n    let result: any;\n    runOutsideAngular(() => {\n      result = this.delegate.once(topic, cb);\n    });\n    return result;\n  }\n\n  // Need to be run in the zone because otherwise it won't be caught by the\n  // listener in the extension.\n  override emit<E extends keyof Events>(topic: E, args?: Parameters<Events[E]>): boolean {\n    return this.delegate.emit(topic, args);\n  }\n\n  override destroy(): void {\n    this.delegate.destroy();\n  }\n}\n"]}