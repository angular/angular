{"version":3,"file":"app.config.js","sourceRoot":"","sources":["app.config.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAoB,8BAA8B,EAAC,MAAM,eAAe,CAAC;AAChF,OAAO,EAAC,sBAAsB,EAAE,qBAAqB,EAAE,eAAe,EAAC,MAAM,sBAAsB,CAAC;AAEpG,OAAO,EAAC,4BAA4B,EAAC,MAAM,kCAAkC,CAAC;AAC9E,OAAO,EAAC,2BAA2B,EAAC,MAAM,iCAAiC,CAAC;AAC5E,OAAO,EAAS,UAAU,EAAE,uBAAuB,EAAC,MAAM,mBAAmB,CAAC;AAC9E,OAAO,EAAC,YAAY,EAAC,MAAM,iEAAiE,CAAC;AAC7F,OAAO,EAAC,gBAAgB,EAAC,MAAM,sBAAsB,CAAC;AAEtD,MAAM,CAAC,MAAM,SAAS,GAAsB;IAC1C,SAAS,EAAE;QACT,8BAA8B,EAAE;QAChC,EAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,EAAC;QACpE;YACE,OAAO,EAAE,qBAAqB;YAC9B,QAAQ,EAAE,2BAA2B;SACtC;QACD;YACE,OAAO,EAAE,sBAAsB;YAC/B,QAAQ,EAAE,4BAA4B;SACvC;QACD;YACE,OAAO,EAAE,UAAU;YACnB,UAAU;gBACR,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;oBAClC,IAAI,EAAE,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK;iBACjD,CAAC,CAAC;gBAEH,OAAO,IAAI,uBAAuB,CAAC,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;YACjE,CAAC;SACF;QACD,eAAe,EAAE;KAClB;CACF,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ApplicationConfig, provideZonelessChangeDetection} from '@angular/core';\nimport {ApplicationEnvironment, ApplicationOperations, provideSettings} from '../../../ng-devtools';\n\nimport {ChromeApplicationEnvironment} from './chrome-application-environment';\nimport {ChromeApplicationOperations} from './chrome-application-operations';\nimport {Events, MessageBus, PriorityAwareMessageBus} from '../../../protocol';\nimport {FrameManager} from '../../../ng-devtools/src/lib/application-services/frame_manager';\nimport {ChromeMessageBus} from './chrome-message-bus';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideZonelessChangeDetection(),\n    {provide: FrameManager, useFactory: () => FrameManager.initialize()},\n    {\n      provide: ApplicationOperations,\n      useClass: ChromeApplicationOperations,\n    },\n    {\n      provide: ApplicationEnvironment,\n      useClass: ChromeApplicationEnvironment,\n    },\n    {\n      provide: MessageBus,\n      useFactory(): MessageBus<Events> {\n        const port = chrome.runtime.connect({\n          name: '' + chrome.devtools.inspectedWindow.tabId,\n        });\n\n        return new PriorityAwareMessageBus(new ChromeMessageBus(port));\n      },\n    },\n    provideSettings(),\n  ],\n};\n"]}