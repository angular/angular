{"version":3,"file":"chrome-window-extensions.js","sourceRoot":"","sources":["chrome-window-extensions.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {RoutePropertyType, viewSourceFromRouter} from '../../../ng-devtools-backend';\nimport {\n  buildDirectiveForest,\n  getInjectorFromElementNode,\n  findNodeFromSerializedPosition,\n  queryDirectiveForest,\n} from '../../../ng-devtools-backend/src/lib/component-tree/component-tree';\n\nimport {ElementPosition, SignalNodePosition} from '../../../protocol';\nimport {ngDebugClient} from '../../../ng-devtools-backend/src/lib/ng-debug-api/ng-debug-api';\n\nexport const initializeExtendedWindowOperations = () => {\n  extendWindowOperations(globalThis, {inspectedApplication: chromeWindowExtensions});\n};\n\nconst extendWindowOperations = <T extends {}>(target: any, classImpl: T) => {\n  for (const key of Object.keys(classImpl)) {\n    if (target[key] != null) {\n      console.warn(`A window function or object named ${key} would be overwritten`);\n    }\n  }\n\n  Object.assign(target, classImpl);\n};\n\nconst chromeWindowExtensions = {\n  findConstructorByPosition: (\n    serializedId: string,\n    directiveIndex: number,\n  ): Element | undefined => {\n    const node = findNodeFromSerializedPosition(serializedId);\n    if (node === null) {\n      console.error(`Cannot find element associated with node ${serializedId}`);\n      return;\n    }\n    if (directiveIndex !== undefined) {\n      if (node.directives[directiveIndex]) {\n        return node.directives[directiveIndex].instance.constructor;\n      } else {\n        console.error(\n          `Could not find the directive in the current node at index ${directiveIndex}`,\n        );\n        return;\n      }\n    }\n    if (node.component) {\n      return node.component.instance.constructor;\n    } else {\n      console.error('This component has no instance and therefore no constructor');\n      return;\n    }\n  },\n  findDomElementByPosition: (serializedId: string): Node | undefined => {\n    const node = findNodeFromSerializedPosition(serializedId);\n    if (node === null) {\n      console.error(`Cannot find element associated with node ${serializedId}`);\n      return undefined;\n    }\n    return node.nativeElement;\n  },\n  findSignalNodeByPosition: (args: any): any => {\n    const ng = ngDebugClient();\n    const {element, signalId} = JSON.parse(args) as SignalNodePosition;\n    const node = queryDirectiveForest(element, buildDirectiveForest());\n    if (node === null) {\n      console.error(`Cannot find element associated with node ${element}`);\n      return undefined;\n    }\n    const injector = getInjectorFromElementNode(node.nativeElement!);\n    if (!injector) {\n      return;\n    }\n    const graph = ng.ÉµgetSignalGraph?.(injector);\n    if (!graph) {\n      return;\n    }\n\n    const signal = graph.nodes.find((node) => node.id === signalId);\n    if (!signal) {\n      return;\n    }\n    return signal.debuggableFn;\n  },\n  findPropertyByPosition: (args: any): any => {\n    const {directivePosition, objectPath} = JSON.parse(args) as {\n      directivePosition: {element: ElementPosition; directive: number};\n      objectPath: string[];\n    };\n    const node = queryDirectiveForest(directivePosition.element, buildDirectiveForest());\n    if (node === null) {\n      console.error(`Cannot find element associated with node ${directivePosition}`);\n      return undefined;\n    }\n\n    const isDirective =\n      directivePosition.directive !== undefined &&\n      node.directives[directivePosition.directive] &&\n      typeof node.directives[directivePosition.directive] === 'object';\n    if (isDirective) {\n      return traverseDirective(node.directives[directivePosition.directive].instance, objectPath);\n    }\n    if (node.component) {\n      return traverseDirective(node.component.instance, objectPath);\n    }\n  },\n  findConstructorByNameForRouter: (name: string, type: RoutePropertyType): any => {\n    return viewSourceFromRouter(name, type);\n  },\n};\n\nconst traverseDirective = (dir: any, objectPath: string[]): any => {\n  for (const key of objectPath) {\n    if (!dir[key]) {\n      return;\n    }\n    dir = dir[key];\n  }\n  return dir;\n};\n"]}