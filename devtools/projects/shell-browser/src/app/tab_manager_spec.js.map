{"version":3,"file":"tab_manager_spec.js","sourceRoot":"","sources":["tab_manager_spec.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n/// <reference types=\"chrome\"/>\n\nimport {DevToolsConnection, TabManager, Tabs} from './tab_manager';\n\ninterface MockSender {\n  url: string;\n  tab: {\n    id: number;\n  };\n  frameId: number;\n}\n\nconst TEST_MESSAGE_ONE = {topic: 'test', args: ['test1']};\nconst TEST_MESSAGE_TWO = {topic: 'test', args: ['test2']};\n\nclass MockPort {\n  onMessageListeners: Function[] = [];\n  onDisconnectListeners: Function[] = [];\n  messagesPosted: any[] = [];\n  name: string;\n  sender?: MockSender;\n\n  constructor(\n    public properties: {\n      name: string;\n      sender?: MockSender;\n    },\n  ) {\n    this.name = properties.name;\n    this.sender = properties.sender;\n  }\n\n  postMessage(message: any): void {\n    this.messagesPosted.push(message);\n  }\n\n  onMessage = {\n    addListener: (listener: Function): void => {\n      this.onMessageListeners.push(listener);\n    },\n    removeListener: (listener: Function) => {\n      this.onMessageListeners = this.onMessageListeners.filter((l) => l !== listener);\n    },\n  };\n\n  onDisconnect = {\n    addListener: (listener: Function): void => {\n      this.onDisconnectListeners.push(listener);\n    },\n  };\n}\n\nfunction assertArrayHasObj<T>(array: T[], obj: T) {\n  expect(array).toContain(jasmine.objectContaining(obj as object));\n}\n\nfunction assertArrayDoesNotHaveObj<T extends object>(array: T[], obj: T) {\n  expect(array).not.toContain(jasmine.objectContaining(obj));\n}\n\nfunction mockSpyFunction(obj: any, property: string, returnValue: any) {\n  (obj[property] as any).and.returnValue(() => returnValue);\n}\n\nfunction mockSpyProperty(obj: any, property: string, value: any) {\n  (Object.getOwnPropertyDescriptor(obj, property)!.get as any).and.returnValue(value);\n}\n\ndescribe('Tab Manager - ', () => {\n  let tabs: Tabs;\n  const tabId = 12345;\n  let chromeRuntime: jasmine.SpyObj<typeof chrome.runtime>;\n  let tabManager: TabManager;\n  let tab: DevToolsConnection;\n  let chromeRuntimeOnConnectListeners: ((port: MockPort) => void)[] = [];\n\n  function connectToChromeRuntime(port: MockPort): void {\n    for (const listener of chromeRuntimeOnConnectListeners) {\n      listener(port);\n    }\n  }\n\n  function emitMessageToPort(port: MockPort, message: any): void {\n    for (const listener of port.onMessageListeners) {\n      listener(message);\n    }\n  }\n\n  function emitBackendReadyToPort(contentScriptPort: MockPort) {\n    emitMessageToPort(contentScriptPort, {topic: 'backendReady'});\n  }\n\n  function emitDisconnectToPort(port: MockPort) {\n    for (const listener of port.onDisconnectListeners) {\n      listener();\n    }\n  }\n\n  function createDevToolsPort() {\n    const port = new MockPort({\n      name: tabId.toString(),\n    });\n    connectToChromeRuntime(port);\n    return port;\n  }\n\n  beforeEach(() => {\n    chromeRuntimeOnConnectListeners = [];\n    chromeRuntime = jasmine.createSpyObj(\n      'chrome.runtime',\n      ['getManifest', 'getURL'],\n      ['onConnect', 'onDisconnect'],\n    );\n    mockSpyFunction(chromeRuntime, 'getManifest', {manifest_version: 3});\n    mockSpyFunction(chromeRuntime, 'getURL', (path: string) => path);\n    mockSpyProperty(chromeRuntime, 'onConnect', {\n      addListener: (listener: (port: MockPort) => void) => {\n        chromeRuntimeOnConnectListeners.push(listener);\n      },\n    });\n  });\n\n  describe('Single Frame', () => {\n    const testURL = 'http://example.com';\n    const contentScriptFrameId = 0;\n\n    function createContentScriptPort() {\n      const port = new MockPort({\n        name: 'Content Script',\n        sender: {\n          url: testURL,\n          tab: {\n            id: tabId,\n          },\n          frameId: contentScriptFrameId,\n        },\n      });\n      connectToChromeRuntime(port);\n      return port;\n    }\n\n    beforeEach(() => {\n      tabs = {};\n      tabManager = TabManager.initialize(tabs, chromeRuntime);\n    });\n\n    async function* eachOrderingOfDevToolsInitialization(): AsyncGenerator<{\n      tab: DevToolsConnection;\n      contentScriptPort: MockPort;\n      devtoolsPort: MockPort;\n    }> {\n      {\n        // Content Script -> Backend Ready -> Devtools\n        const contentScriptPort = createContentScriptPort();\n        emitBackendReadyToPort(contentScriptPort);\n        const devtoolsPort = createDevToolsPort();\n        const tab = tabs[tabId]!;\n        await tab.contentScripts[contentScriptFrameId].backendReady;\n        yield {tab, contentScriptPort, devtoolsPort};\n        delete tabs[tabId];\n      }\n\n      {\n        // Content Script -> Devtools -> Backend Ready\n        const contentScriptPort = createContentScriptPort();\n        const devtoolsPort = createDevToolsPort();\n        emitBackendReadyToPort(contentScriptPort);\n        const tab = tabs[tabId]!;\n        await tab.contentScripts[contentScriptFrameId].backendReady;\n        yield {tab, contentScriptPort, devtoolsPort};\n        delete tabs[tabId];\n      }\n\n      {\n        // Devtools -> Content Script -> Backend Ready\n        const devtoolsPort = createDevToolsPort();\n        const contentScriptPort = createContentScriptPort();\n        emitBackendReadyToPort(contentScriptPort);\n        const tab = tabs[tabId]!;\n        await tab.contentScripts[contentScriptFrameId].backendReady;\n        yield {tab, contentScriptPort, devtoolsPort};\n      }\n    }\n\n    it('should setup tab object in the tab manager', async () => {\n      for await (const {\n        tab,\n        contentScriptPort,\n        devtoolsPort,\n      } of eachOrderingOfDevToolsInitialization()) {\n        expect(tab).toBeDefined();\n        expect(tab!.devtools).toBe(devtoolsPort as unknown as chrome.runtime.Port);\n        expect(tab!.contentScripts[contentScriptFrameId].port).toBe(\n          contentScriptPort as unknown as chrome.runtime.Port,\n        );\n      }\n    });\n\n    it('should set frame connection as enabled when an enableFrameConnection message is recieved', async () => {\n      for await (const {tab, devtoolsPort} of eachOrderingOfDevToolsInitialization()) {\n        expect(tab?.contentScripts[contentScriptFrameId]?.enabled).toBe(false);\n\n        emitMessageToPort(devtoolsPort, {\n          topic: 'enableFrameConnection',\n          args: [contentScriptFrameId, tabId],\n        });\n\n        expect(tab?.contentScripts[contentScriptFrameId]?.enabled).toBe(true);\n        assertArrayHasObj(devtoolsPort.messagesPosted, {\n          topic: 'frameConnected',\n          args: [contentScriptFrameId],\n        });\n      }\n    });\n\n    it('should pipe messages from the content script and devtools script to each other when the content script frame is enabled', async () => {\n      for await (const {\n        contentScriptPort,\n        devtoolsPort,\n      } of eachOrderingOfDevToolsInitialization()) {\n        emitMessageToPort(devtoolsPort, {\n          topic: 'enableFrameConnection',\n          args: [contentScriptFrameId, tabId],\n        });\n\n        // Verify that the double pipe is set up between the content script and the devtools page.\n        emitMessageToPort(contentScriptPort, TEST_MESSAGE_ONE);\n        assertArrayHasObj(devtoolsPort.messagesPosted, TEST_MESSAGE_ONE);\n        assertArrayDoesNotHaveObj(contentScriptPort.messagesPosted, TEST_MESSAGE_ONE);\n\n        emitMessageToPort(devtoolsPort, TEST_MESSAGE_TWO);\n        assertArrayHasObj(contentScriptPort.messagesPosted, TEST_MESSAGE_TWO);\n        assertArrayDoesNotHaveObj(devtoolsPort.messagesPosted, TEST_MESSAGE_TWO);\n      }\n    });\n\n    it('should not pipe messages from the content script and devtools script to each other when the content script frame is disabled', async () => {\n      for await (const {\n        tab,\n        contentScriptPort,\n        devtoolsPort,\n      } of eachOrderingOfDevToolsInitialization()) {\n        expect(tab?.contentScripts[contentScriptFrameId]?.enabled).toBe(false);\n\n        emitMessageToPort(contentScriptPort, TEST_MESSAGE_ONE);\n        assertArrayDoesNotHaveObj(contentScriptPort.messagesPosted, TEST_MESSAGE_ONE);\n\n        emitMessageToPort(devtoolsPort, TEST_MESSAGE_TWO);\n        assertArrayDoesNotHaveObj(devtoolsPort.messagesPosted, TEST_MESSAGE_TWO);\n      }\n    });\n\n    it('should set backendReady when the contentPort recieves the backendReady message', async () => {\n      for await (const {\n        contentScriptPort,\n        devtoolsPort,\n      } of eachOrderingOfDevToolsInitialization()) {\n        emitMessageToPort(devtoolsPort, {\n          topic: 'enableFrameConnection',\n          args: [contentScriptFrameId, tabId],\n        });\n\n        assertArrayHasObj(devtoolsPort.messagesPosted, {\n          topic: 'contentScriptConnected',\n          args: [contentScriptFrameId, contentScriptPort.name, contentScriptPort.sender!.url],\n        });\n      }\n    });\n\n    it('should set tab.devtools to null when the devtoolsPort disconnects', async () => {\n      for await (const {tab, devtoolsPort} of eachOrderingOfDevToolsInitialization()) {\n        emitMessageToPort(devtoolsPort, {\n          topic: 'enableFrameConnection',\n          args: [contentScriptFrameId, tabId],\n        });\n        expect(tab?.contentScripts[contentScriptFrameId]?.enabled).toBe(true);\n\n        emitDisconnectToPort(devtoolsPort);\n        expect(tab.devtools).toBeNull();\n        expect(tab?.contentScripts[contentScriptFrameId]?.enabled).toBe(false);\n      }\n    });\n  });\n\n  describe('Multiple Frames', () => {\n    const topLevelFrameId = 0;\n    const childFrameId = 1;\n\n    function createTopLevelContentScriptPort() {\n      const port = new MockPort({\n        name: 'Top level content script',\n        sender: {\n          url: 'TEST_URL',\n          tab: {\n            id: tabId,\n          },\n          frameId: topLevelFrameId,\n        },\n      });\n      connectToChromeRuntime(port);\n      return port;\n    }\n    function createChildContentScriptPort() {\n      const port = new MockPort({\n        name: 'Child content script',\n        sender: {\n          url: 'TEST_URL_2',\n          tab: {\n            id: tabId,\n          },\n          frameId: childFrameId,\n        },\n      });\n      connectToChromeRuntime(port);\n      return port;\n    }\n\n    async function* eachOrderingOfDevToolsInitialization() {\n      {\n        // Devtools Connected -> Top Level Content Script Connected -> Top Level Content Script Backend Ready\n        // -> Child Content Script Connected -> Child Content Script Backend Ready\n        const devtoolsPort = createDevToolsPort();\n        const topLevelContentScriptPort = createTopLevelContentScriptPort();\n        emitBackendReadyToPort(topLevelContentScriptPort);\n        const childContentScriptPort = createChildContentScriptPort();\n        emitBackendReadyToPort(childContentScriptPort);\n        const tab = tabs[tabId]!;\n        await tab.contentScripts[topLevelFrameId].backendReady;\n        await tab.contentScripts[childFrameId].backendReady;\n        yield {tab, topLevelContentScriptPort, childContentScriptPort, devtoolsPort};\n        delete tabs[tabId];\n      }\n\n      {\n        // Top Level Content Script Connected -> Top Level Content Script Backend Ready -> Devtools Connected\n        // -> Child Content Script Connected -> Child Content Script Backend Ready\n        const topLevelContentScriptPort = createTopLevelContentScriptPort();\n        emitBackendReadyToPort(topLevelContentScriptPort);\n        const devtoolsPort = createDevToolsPort();\n        const childContentScriptPort = createChildContentScriptPort();\n        emitBackendReadyToPort(childContentScriptPort);\n        const tab = tabs[tabId]!;\n        await tab.contentScripts[topLevelFrameId].backendReady;\n        await tab.contentScripts[childFrameId].backendReady;\n        yield {tab, topLevelContentScriptPort, childContentScriptPort, devtoolsPort};\n        delete tabs[tabId];\n      }\n\n      {\n        // Top Level Content Script Connected -> Top Level Content Script Backend Ready -> Child Content Script Connected\n        // -> Child Content Script Backend Ready -> Devtools Connected\n        const topLevelContentScriptPort = createTopLevelContentScriptPort();\n        emitBackendReadyToPort(topLevelContentScriptPort);\n        const childContentScriptPort = createChildContentScriptPort();\n        emitBackendReadyToPort(childContentScriptPort);\n        const devtoolsPort = createDevToolsPort();\n        tab = tabs[tabId]!;\n        await tab.contentScripts[topLevelFrameId].backendReady;\n        await tab.contentScripts[childFrameId].backendReady;\n        yield {tab, topLevelContentScriptPort, childContentScriptPort, devtoolsPort};\n        delete tabs[tabId];\n      }\n\n      {\n        // Top Level Content Script Connected -> Devtools Connected -> Child Content Script Connected\n        // -> Top Level Content Script Backend Ready -> Child Content Script Backend Ready\n        const topLevelContentScriptPort = createTopLevelContentScriptPort();\n        const devtoolsPort = createDevToolsPort();\n        const childContentScriptPort = createChildContentScriptPort();\n        emitBackendReadyToPort(topLevelContentScriptPort);\n        emitBackendReadyToPort(childContentScriptPort);\n        const tab = tabs[tabId]!;\n        await tab.contentScripts[topLevelFrameId].backendReady;\n        await tab.contentScripts[childFrameId].backendReady;\n        yield {tab, topLevelContentScriptPort, childContentScriptPort, devtoolsPort};\n      }\n    }\n\n    beforeEach(() => {\n      tabs = {};\n      tabManager = TabManager.initialize(tabs, chromeRuntime);\n    });\n\n    it('should setup tab object in the tab manager', async () => {\n      for await (const {\n        tab,\n        topLevelContentScriptPort,\n        childContentScriptPort,\n        devtoolsPort,\n      } of eachOrderingOfDevToolsInitialization()) {\n        expect(tab).toBeDefined();\n        expect(tab!.devtools).toBe(devtoolsPort as unknown as chrome.runtime.Port);\n        expect(tab!.contentScripts[topLevelFrameId].port).toBe(\n          topLevelContentScriptPort as unknown as chrome.runtime.Port,\n        );\n        expect(tab!.contentScripts[childFrameId].port).toBe(\n          childContentScriptPort as unknown as chrome.runtime.Port,\n        );\n      }\n    });\n\n    it('should setup message and disconnect listeners on devtools and content script ports', async () => {\n      for await (const {\n        topLevelContentScriptPort,\n        childContentScriptPort,\n        devtoolsPort,\n      } of eachOrderingOfDevToolsInitialization()) {\n        expect(topLevelContentScriptPort.onDisconnectListeners.length).toBeGreaterThan(0);\n        expect(childContentScriptPort.onDisconnectListeners.length).toBeGreaterThan(0);\n        expect(devtoolsPort.onDisconnectListeners.length).toBeGreaterThan(0);\n        expect(topLevelContentScriptPort.onMessageListeners.length).toBeGreaterThan(0);\n      }\n    });\n\n    it('should set the correct frame connection as enabled when an enableFrameConnection message is recieved', async () => {\n      for await (const {tab, devtoolsPort} of eachOrderingOfDevToolsInitialization()) {\n        expect(tab?.contentScripts[topLevelFrameId]?.enabled).toBe(false);\n        expect(tab?.contentScripts[childFrameId]?.enabled).toBe(false);\n        emitMessageToPort(devtoolsPort, {\n          topic: 'enableFrameConnection',\n          args: [topLevelFrameId, tabId],\n        });\n        expect(tab?.contentScripts[topLevelFrameId]?.enabled).toBe(true);\n        expect(tab?.contentScripts[childFrameId]?.enabled).toBe(false);\n        assertArrayHasObj(devtoolsPort.messagesPosted, {\n          topic: 'frameConnected',\n          args: [topLevelFrameId],\n        });\n        assertArrayDoesNotHaveObj(devtoolsPort.messagesPosted, {\n          topic: 'frameConnected',\n          args: [childFrameId],\n        });\n      }\n    });\n\n    it('should pipe messages from the correct content script and devtools script when that content script frame is enabled', async () => {\n      for await (const {\n        topLevelContentScriptPort,\n        childContentScriptPort,\n        devtoolsPort,\n      } of eachOrderingOfDevToolsInitialization()) {\n        emitMessageToPort(devtoolsPort, {\n          topic: 'enableFrameConnection',\n          args: [topLevelFrameId, tabId],\n        });\n        emitMessageToPort(devtoolsPort, TEST_MESSAGE_ONE);\n        assertArrayHasObj(topLevelContentScriptPort.messagesPosted, TEST_MESSAGE_ONE);\n        assertArrayDoesNotHaveObj(childContentScriptPort.messagesPosted, TEST_MESSAGE_ONE);\n\n        emitMessageToPort(devtoolsPort, {\n          topic: 'enableFrameConnection',\n          args: [childFrameId, tabId],\n        });\n        emitMessageToPort(devtoolsPort, TEST_MESSAGE_TWO);\n        assertArrayHasObj(childContentScriptPort.messagesPosted, TEST_MESSAGE_TWO);\n        assertArrayDoesNotHaveObj(topLevelContentScriptPort.messagesPosted, TEST_MESSAGE_TWO);\n      }\n    });\n  });\n});\n"]}