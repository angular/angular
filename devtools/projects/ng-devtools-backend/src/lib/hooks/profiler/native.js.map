{"version":3,"file":"native.js","sourceRoot":"","sources":["native.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ɵProfilerEvent} from '@angular/core';\n\nimport {getDirectiveHostElement} from '../../directive-forest';\nimport {ngDebugClient} from '../../ng-debug-api/ng-debug-api';\nimport {runOutsideAngular} from '../../utils';\nimport {IdentityTracker, NodeArray} from '../identity-tracker';\n\nimport {getLifeCycleName, Hooks, Profiler} from './shared';\n\ntype ProfilerCallback = (event: ɵProfilerEvent, instanceOrLView: {} | null, eventFn: any) => void;\n\n/** Implementation of Profiler that utilizes framework APIs fire profiler hooks. */\nexport class NgProfiler extends Profiler {\n  private _tracker = IdentityTracker.getInstance();\n  private _callbacks: ProfilerCallback[] = [];\n  private _lastDirectiveInstance: {} | null = null;\n\n  constructor(config: Partial<Hooks> = {}) {\n    super(config);\n    this._setProfilerCallback((event: ɵProfilerEvent, instanceOrLView: {} | null, eventFn: any) => {\n      if (this[event] === undefined) {\n        return;\n      }\n\n      this[event](instanceOrLView, eventFn);\n    });\n    this._initialize();\n  }\n\n  private _initialize(): void {\n    ngDebugClient().ɵsetProfiler!(\n      (event: ɵProfilerEvent, instanceOrLView: {} | null = null, eventFn: any) =>\n        this._callbacks.forEach((cb) => cb(event, instanceOrLView, eventFn)),\n    );\n  }\n\n  private _setProfilerCallback(callback: ProfilerCallback): void {\n    this._callbacks.push(callback);\n  }\n\n  override destroy(): void {\n    this._tracker.destroy();\n  }\n\n  override onIndexForest(newNodes: NodeArray, removedNodes: NodeArray): void {\n    newNodes.forEach((node) => {\n      const {directive, isComponent} = node;\n\n      const position = this._tracker.getDirectivePosition(directive);\n      const id = this._tracker.getDirectiveId(directive);\n      this._onCreate(directive, getDirectiveHostElement(directive), id, isComponent, position);\n    });\n\n    removedNodes.forEach((node) => {\n      const {directive, isComponent} = node;\n\n      const position = this._tracker.getDirectivePosition(directive);\n      const id = this._tracker.getDirectiveId(directive);\n      this._onDestroy(directive, getDirectiveHostElement(directive), id, isComponent, position);\n    });\n  }\n\n  [ɵProfilerEvent.BootstrapApplicationStart](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.BootstrapApplicationEnd](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.BootstrapComponentStart](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.BootstrapComponentEnd](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.ChangeDetectionStart](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.ChangeDetectionEnd](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.ChangeDetectionSyncStart](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.ChangeDetectionSyncEnd](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.AfterRenderHooksStart](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.AfterRenderHooksEnd](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.ComponentStart](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.ComponentEnd](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.DeferBlockStateStart](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.DeferBlockStateEnd](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.DynamicComponentStart](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.DynamicComponentEnd](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.HostBindingsUpdateStart](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.HostBindingsUpdateEnd](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.TemplateCreateStart](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.TemplateCreateEnd](_directive: any, _eventFn: any): void {\n    // todo: implement\n    return;\n  }\n\n  [ɵProfilerEvent.TemplateUpdateStart](context: any, _eventFn: any): void {\n    if (!this._inChangeDetection) {\n      this._inChangeDetection = true;\n      runOutsideAngular(() => {\n        Promise.resolve().then(() => {\n          this.changeDetection$.next();\n          this._inChangeDetection = false;\n        });\n      });\n    }\n\n    const position = this._tracker.getDirectivePosition(context);\n    const id = this._tracker.getDirectiveId(context);\n\n    // If we can find the position and the ID we assume that this is a component instance.\n    // Alternatively, if we can't find the ID or the position, we assume that this is a\n    // context of an embedded view (for example, NgForOfContext, NgIfContext, or a custom one).\n    if (position !== undefined && id !== undefined) {\n      this._lastDirectiveInstance = context;\n    }\n\n    if (id !== undefined && position !== undefined) {\n      this._onChangeDetectionStart(context, getDirectiveHostElement(context), id, position);\n      return;\n    }\n\n    this._onChangeDetectionStart(\n      this._lastDirectiveInstance,\n      getDirectiveHostElement(this._lastDirectiveInstance),\n      this._tracker.getDirectiveId(this._lastDirectiveInstance),\n      this._tracker.getDirectivePosition(this._lastDirectiveInstance),\n    );\n  }\n\n  [ɵProfilerEvent.TemplateUpdateEnd](context: any, _eventFn: any): void {\n    const position = this._tracker.getDirectivePosition(context);\n    const id = this._tracker.getDirectiveId(context);\n\n    if (this._tracker.hasDirective(context) && id !== undefined && position !== undefined) {\n      this._onChangeDetectionEnd(context, getDirectiveHostElement(context), id, position);\n      return;\n    }\n\n    this._onChangeDetectionEnd(\n      this._lastDirectiveInstance,\n      getDirectiveHostElement(this._lastDirectiveInstance),\n      this._tracker.getDirectiveId(this._lastDirectiveInstance),\n      this._tracker.getDirectivePosition(this._lastDirectiveInstance),\n    );\n  }\n\n  [ɵProfilerEvent.LifecycleHookStart](directive: any, hook: any): void {\n    const id = this._tracker.getDirectiveId(directive);\n    const element = getDirectiveHostElement(directive);\n    const lifecycleHookName = getLifeCycleName(directive, hook);\n    const isComponent = !!this._tracker.isComponent.get(directive);\n\n    this._onLifecycleHookStart(directive, lifecycleHookName, element, id, isComponent);\n  }\n\n  [ɵProfilerEvent.LifecycleHookEnd](directive: any, hook: any): void {\n    const id = this._tracker.getDirectiveId(directive);\n    const element = getDirectiveHostElement(directive);\n    const lifecycleHookName = getLifeCycleName(directive, hook);\n    const isComponent = !!this._tracker.isComponent.get(directive);\n\n    this._onLifecycleHookEnd(directive, lifecycleHookName, element, id, isComponent);\n  }\n\n  [ɵProfilerEvent.OutputStart](componentOrDirective: any, listener: () => void): void {\n    const isComponent = !!this._tracker.isComponent.get(componentOrDirective);\n    const node = getDirectiveHostElement(componentOrDirective);\n    const id = this._tracker.getDirectiveId(componentOrDirective);\n    this._onOutputStart(componentOrDirective, listener.name, node, id, isComponent);\n  }\n\n  [ɵProfilerEvent.OutputEnd](componentOrDirective: any, listener: () => void): void {\n    const isComponent = !!this._tracker.isComponent.get(componentOrDirective);\n    const node = getDirectiveHostElement(componentOrDirective);\n    const id = this._tracker.getDirectiveId(componentOrDirective);\n    this._onOutputEnd(componentOrDirective, listener.name, node, id, isComponent);\n  }\n}\n"]}