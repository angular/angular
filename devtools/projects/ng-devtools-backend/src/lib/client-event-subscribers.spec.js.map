{"version":3,"file":"client-event-subscribers.spec.js","sourceRoot":"","sources":["client-event-subscribers.spec.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Events, MessageBus} from '../../../protocol';\nimport {subscribeToClientEvents} from './client-event-subscribers';\nimport {appIsAngular, appIsAngularIvy, appIsSupportedAngularVersion} from '../../../shared-utils';\nimport {DirectiveForestHooks} from './hooks/hooks';\nimport {of} from 'rxjs';\n\ndescribe('ClientEventSubscriber', () => {\n  let messageBusMock: MessageBus<Events>;\n  let appNode: HTMLElement | null = null;\n\n  beforeEach(() => {\n    // mock isAngular et al\n    appNode = mockAngular();\n\n    messageBusMock = jasmine.createSpyObj<MessageBus<Events>>('messageBus', [\n      'on',\n      'once',\n      'emit',\n      'destroy',\n    ]);\n  });\n\n  afterEach(() => {\n    // clearing the dom after each test\n    if (appNode) {\n      document.body.removeChild(appNode);\n      appNode = null;\n    }\n  });\n\n  it('is it Angular ready (testing purposed)', () => {\n    expect(appIsAngular()).withContext('isAng').toBe(true);\n    expect(appIsSupportedAngularVersion()).withContext('appIsSupportedAngularVersion').toBe(true);\n    expect(appIsAngularIvy()).withContext('appIsAngularIvy').toBe(true);\n  });\n\n  it('should setup inspector', () => {\n    subscribeToClientEvents(messageBusMock, {directiveForestHooks: MockDirectiveForestHooks});\n\n    expect(messageBusMock.on).toHaveBeenCalledWith('inspectorStart', jasmine.any(Function));\n    expect(messageBusMock.on).toHaveBeenCalledWith('inspectorEnd', jasmine.any(Function));\n    expect(messageBusMock.on).toHaveBeenCalledWith('createHighlightOverlay', jasmine.any(Function));\n    expect(messageBusMock.on).toHaveBeenCalledWith('removeHighlightOverlay', jasmine.any(Function));\n    expect(messageBusMock.on).toHaveBeenCalledWith('createHydrationOverlay', jasmine.any(Function));\n    expect(messageBusMock.on).toHaveBeenCalledWith('removeHydrationOverlay', jasmine.any(Function));\n  });\n});\n\nfunction mockAngular() {\n  const appNode = document.createElement('app');\n  appNode.setAttribute('ng-version', '17.0.0');\n  (appNode as any).__ngContext__ = true;\n  document.body.appendChild(appNode);\n\n  (window as any).ng = {\n    getComponent: () => {},\n  };\n  return appNode;\n}\n\nclass MockDirectiveForestHooks extends DirectiveForestHooks {\n  profiler = {\n    subscribe: () => {},\n    changeDetection$: of(),\n  } as any as DirectiveForestHooks['profiler'];\n  initialize = () => {};\n}\n"]}