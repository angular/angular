{"version":3,"file":"get-roots.spec.js","sourceRoot":"","sources":["get-roots.spec.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAC,WAAW,EAAC,MAAM,aAAa,CAAC;AAExC,SAAS,UAAU;IACjB,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC3C,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;IACpC,OAAO,IAAI,CAAC;AACd,CAAC;AAED,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,SAAS,CAAC,GAAG,EAAE;QACb,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE,GAAG,EAAE;QACpC,MAAM,WAAW,GAAG,UAAU,EAAE,CAAC;QACjC,MAAM,YAAY,GAAG,UAAU,EAAE,CAAC;QAElC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QACtC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAEvC,MAAM,KAAK,GAAG,WAAW,EAAE,CAAC;QAE5B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;QACrC,MAAM,SAAS,GAAG,UAAU,EAAE,CAAC;QAC/B,MAAM,UAAU,GAAG,UAAU,EAAE,CAAC;QAEhC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAEtC,MAAM,KAAK,GAAG,WAAW,EAAE,CAAC;QAE5B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACnC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {getAppRoots} from './get-roots';\n\nfunction createRoot() {\n  const root = document.createElement('div');\n  root.setAttribute('ng-version', '');\n  return root;\n}\n\ndescribe('getRoots', () => {\n  afterEach(() => {\n    document.body.replaceChildren();\n  });\n\n  it('should return root element', () => {\n    const rootElement = createRoot();\n    const childElement = createRoot();\n\n    rootElement.appendChild(childElement);\n    document.body.appendChild(rootElement);\n\n    const roots = getAppRoots();\n\n    expect(roots.length).toEqual(1);\n    expect(roots.pop()).toEqual(rootElement);\n  });\n\n  it('should return root elements', () => {\n    const firstRoot = createRoot();\n    const secondRoot = createRoot();\n\n    document.body.appendChild(firstRoot);\n    document.body.appendChild(secondRoot);\n\n    const roots = getAppRoots();\n\n    expect(roots.length).toEqual(2);\n    expect(roots).toContain(firstRoot);\n    expect(roots).toContain(secondRoot);\n  });\n});\n"]}