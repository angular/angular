{"version":3,"file":"component-inspector.spec.js","sourceRoot":"","sources":["component-inspector.spec.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAC,mCAAmC,EAAC,MAAM,UAAU,CAAC;AAC7D,OAAO,EAAC,kBAAkB,EAAC,MAAM,uBAAuB,CAAC;AAEzD,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC3C,MAAM,SAAS,GAAG,IAAI,kBAAkB,EAAE,CAAC;QAC3C,MAAM,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0DAA0D,EAAE,GAAG,EAAE;QAClE,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;QACpD,MAAM,SAAS,GAAG,IAAI,kBAAkB,EAAE,CAAC;QAC3C,SAAS,CAAC,eAAe,EAAE,CAAC;QAC5B,MAAM,CAAC,SAAS,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,CAAC,SAAS,CAAC,CAAC,oBAAoB,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;QACjF,MAAM,CAAC,SAAS,CAAC,CAAC,oBAAoB,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;QAC7E,MAAM,CAAC,SAAS,CAAC,CAAC,oBAAoB,CAAC,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;IAClF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,GAAG,EAAE;QACtE,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;QACvD,MAAM,SAAS,GAAG,IAAI,kBAAkB,EAAE,CAAC;QAC3C,SAAS,CAAC,cAAc,EAAE,CAAC;QAC3B,MAAM,CAAC,SAAS,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,CAAC,SAAS,CAAC,CAAC,oBAAoB,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;QACjF,MAAM,CAAC,SAAS,CAAC,CAAC,oBAAoB,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;QAC7E,MAAM,CAAC,SAAS,CAAC,CAAC,oBAAoB,CAAC,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;IAClF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;QAChE,MAAM,SAAS,GAAG,IAAI,kBAAkB,EAAE,CAAC;QAC3C,MAAM,aAAa,GAAG,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,0BAA0B,EAAE,gBAAgB,CAAC,CAAC,CAAC;QAChG,SAAS,CAAC,eAAe,EAAE,CAAC;QAC5B,SAAS,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QACrC,MAAM,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QACxE,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACrD,MAAM,CAAC,mCAAmC,EAAE,CAAC,CAAC,IAAI,CAAC,mCAAmC,EAAE,CAAC,CAAC;IAC5F,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {initializeOrGetDirectiveForestHooks} from '../hooks';\nimport {ComponentInspector} from './component-inspector';\n\ndescribe('ComponentInspector', () => {\n  it('should create instance from class', () => {\n    const inspector = new ComponentInspector();\n    expect(inspector).toBeTruthy();\n  });\n\n  it('should add event listeners to window on start inspecting', () => {\n    const eventsSpy = spyOn(window, 'addEventListener');\n    const inspector = new ComponentInspector();\n    inspector.startInspecting();\n    expect(eventsSpy).toHaveBeenCalledTimes(3);\n    expect(eventsSpy).toHaveBeenCalledWith('mouseover', jasmine.any(Function), true);\n    expect(eventsSpy).toHaveBeenCalledWith('click', jasmine.any(Function), true);\n    expect(eventsSpy).toHaveBeenCalledWith('mouseout', jasmine.any(Function), true);\n  });\n\n  it('should remove event listeners from window on stop inspecting', () => {\n    const eventsSpy = spyOn(window, 'removeEventListener');\n    const inspector = new ComponentInspector();\n    inspector.stopInspecting();\n    expect(eventsSpy).toHaveBeenCalledTimes(3);\n    expect(eventsSpy).toHaveBeenCalledWith('mouseover', jasmine.any(Function), true);\n    expect(eventsSpy).toHaveBeenCalledWith('click', jasmine.any(Function), true);\n    expect(eventsSpy).toHaveBeenCalledWith('mouseout', jasmine.any(Function), true);\n  });\n\n  it('should cancel events from mouse after start inspecting', () => {\n    const inspector = new ComponentInspector();\n    const mouseEventSpy = jasmine.createSpyObj('e', ['stopImmediatePropagation', 'preventDefault']);\n    inspector.startInspecting();\n    inspector.cancelEvent(mouseEventSpy);\n    expect(mouseEventSpy.stopImmediatePropagation).toHaveBeenCalledTimes(1);\n    expect(mouseEventSpy.preventDefault).toHaveBeenCalledTimes(1);\n  });\n\n  it('should always retrieve the same forest hook', () => {\n    expect(initializeOrGetDirectiveForestHooks()).toBe(initializeOrGetDirectiveForestHooks());\n  });\n});\n"]}