{"version":3,"file":"serialization-utils.js","sourceRoot":"","sources":["serialization-utils.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,MAAM,UAAU,cAAc,CAAC,GAAQ;IACrC,IAAI,GAAG,KAAK,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,CAAC;QAC5C,OAAO,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,yBAAyB,CAAC;IACnE,CAAC;IAED,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;QACvB,OAAO,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IACjC,CAAC;IAED,MAAM,MAAM,GAAwB,EAAE,CAAC;IACvC,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;QAC/C,MAAM,CAAC,GAAG,CAAC,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB,CAAC;IAC9E,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,qGAAqG;AACrG,SAAS,kBAAkB,CAAC,KAAU;IACpC,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE,CAAC;QAChC,OAAO,KAAK,CAAC,CAAC,sFAAsF;IACtG,CAAC;IAED,IAAI,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,gDAAgD;QACvE,OAAO,IAAI,CAAC;IACd,CAAC;IAAC,MAAM,CAAC;QACP,OAAO,KAAK,CAAC;IACf,CAAC;AACH,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nexport function sanitizeObject(obj: any): any {\n  if (obj === null || typeof obj !== 'object') {\n    return isPortSerializable(obj) ? obj : '[Non-serializable data]';\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(sanitizeObject);\n  }\n\n  const result: Record<string, any> = {};\n  for (const [key, value] of Object.entries(obj)) {\n    result[key] = isPortSerializable(value) ? value : '[Non-serializable data]';\n  }\n  return result;\n}\n\n// This is specific to chrome.runtime.Port which like JSON.stringify, cannot serialize cyclic objects\nfunction isPortSerializable(value: any): boolean {\n  if (typeof value === 'function') {\n    return false; // Functions are not serializable but JSON.stringify doesn't throw, it strips them out\n  }\n\n  try {\n    JSON.stringify(value); // This mimics the runtime's limitations closely\n    return true;\n  } catch {\n    return false;\n  }\n}\n"]}