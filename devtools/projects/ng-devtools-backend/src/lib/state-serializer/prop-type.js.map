{"version":3,"file":"prop-type.js","sourceRoot":"","sources":["prop-type.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAC,QAAQ,EAAC,MAAM,sBAAsB,CAAC;AAE9C,OAAO,EAAC,QAAQ,EAAE,qBAAqB,EAAC,MAAM,UAAU,CAAC;AAEzD,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,QAAQ,CAAC,OAAO;IACzB,MAAM,EAAE,QAAQ,CAAC,MAAM;IACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;IAC3B,MAAM,EAAE,QAAQ,CAAC,MAAM;IACvB,MAAM,EAAE,QAAQ,CAAC,MAAM;IACvB,MAAM,EAAE,QAAQ,CAAC,MAAM;CACxB,CAAC;AAEF;;;;;GAKG;AACH,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,IAAa,EAAY,EAAE;IACrD,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;QACnB,MAAM,EAAC,KAAK,EAAE,KAAK,EAAC,GAAG,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,KAAK,EAAE,CAAC;YACV,OAAO,QAAQ,CAAC,OAAO,CAAC;QAC1B,CAAC;QACD,IAAI,GAAG,KAAK,CAAC;IACf,CAAC;IAED,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;QACvB,OAAO,QAAQ,CAAC,SAAS,CAAC;IAC5B,CAAC;IACD,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC;QAClB,OAAO,QAAQ,CAAC,IAAI,CAAC;IACvB,CAAC;IACD,IAAI,IAAI,YAAY,WAAW,EAAE,CAAC;QAChC,OAAO,QAAQ,CAAC,QAAQ,CAAC;IAC3B,CAAC;IACD,MAAM,IAAI,GAAG,OAAO,IAAI,CAAC;IACzB,IAAI,IAAI,IAAI,WAAW,EAAE,CAAC;QACxB,OAAO,WAAW,CAAC,IAAgC,CAAC,CAAC;IACvD,CAAC;IACD,IAAI,IAAI,KAAK,QAAQ,EAAE,CAAC;QACtB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;YACxB,OAAO,QAAQ,CAAC,KAAK,CAAC;QACxB,CAAC;aAAM,IAAI,IAAI,YAAY,GAAG,EAAE,CAAC;YAC/B,OAAO,QAAQ,CAAC,GAAG,CAAC;QACtB,CAAC;aAAM,IAAI,IAAI,YAAY,GAAG,EAAE,CAAC;YAC/B,OAAO,QAAQ,CAAC,GAAG,CAAC;QACtB,CAAC;aAAM,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,eAAe,EAAE,CAAC;YACpE,OAAO,QAAQ,CAAC,IAAI,CAAC;QACvB,CAAC;aAAM,IAAI,IAAI,YAAY,IAAI,EAAE,CAAC;YAChC,OAAO,QAAQ,CAAC,QAAQ,CAAC;QAC3B,CAAC;aAAM,CAAC;YACN,OAAO,QAAQ,CAAC,MAAM,CAAC;QACzB,CAAC;IACH,CAAC;IACD,OAAO,QAAQ,CAAC,OAAO,CAAC;AAC1B,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {PropType} from '../../../../protocol';\n\nimport {isSignal, safelyReadSignalValue} from '../utils';\n\nconst commonTypes = {\n  boolean: PropType.Boolean,\n  bigint: PropType.BigInt,\n  function: PropType.Function,\n  number: PropType.Number,\n  string: PropType.String,\n  symbol: PropType.Symbol,\n};\n\n/**\n * Determines the devtools-PropType of a component's property\n * @param prop component's property\n * @returns PropType\n * @see `devtools/projects/protocol`\n */\nexport const getPropType = (prop: unknown): PropType => {\n  if (isSignal(prop)) {\n    const {error, value} = safelyReadSignalValue(prop);\n    if (error) {\n      return PropType.Unknown;\n    }\n    prop = value;\n  }\n\n  if (prop === undefined) {\n    return PropType.Undefined;\n  }\n  if (prop === null) {\n    return PropType.Null;\n  }\n  if (prop instanceof HTMLElement) {\n    return PropType.HTMLNode;\n  }\n  const type = typeof prop;\n  if (type in commonTypes) {\n    return commonTypes[type as keyof typeof commonTypes];\n  }\n  if (type === 'object') {\n    if (Array.isArray(prop)) {\n      return PropType.Array;\n    } else if (prop instanceof Set) {\n      return PropType.Set;\n    } else if (prop instanceof Map) {\n      return PropType.Map;\n    } else if (Object.prototype.toString.call(prop) === '[object Date]') {\n      return PropType.Date;\n    } else if (prop instanceof Node) {\n      return PropType.HTMLNode;\n    } else {\n      return PropType.Object;\n    }\n  }\n  return PropType.Unknown;\n};\n"]}