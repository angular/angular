{"version":3,"file":"state-serializer.js","sourceRoot":"","sources":["state-serializer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ContainerType, Descriptor, NestedProp, PropType} from '../../../../protocol';\n\nimport {isSignal, unwrapSignal} from '../utils';\n\nimport {getKeys} from './object-utils';\nimport {getPropType} from './prop-type';\nimport {\n  createLevelSerializedDescriptor,\n  createNestedSerializedDescriptor,\n  createShallowSerializedDescriptor,\n  PropertyData,\n} from './serialized-descriptor-factory';\n\n// todo(aleksanderbodurri) pull this out of this file\nconst METADATA_PROPERTY_NAME = '__ngContext__';\n\nconst ignoreList = new Set([METADATA_PROPERTY_NAME, '__ngSimpleChanges__']);\n\nconst MAX_LEVEL = 1;\n\nfunction nestedSerializer(\n  instance: any,\n  propName: string | number,\n  nodes: NestedProp[],\n  isReadonly: boolean,\n  currentLevel = 0,\n  level = MAX_LEVEL,\n): Descriptor {\n  instance = unwrapSignal(instance);\n  const serializableInstance = instance[propName];\n  const propData: PropertyData = {\n    prop: serializableInstance,\n    type: getPropType(serializableInstance),\n    containerType: getContainerType(serializableInstance),\n  };\n\n  if (currentLevel < level) {\n    const continuation = (\n      instance: any,\n      propName: string | number,\n      isReadonly: boolean,\n      nestedLevel?: number,\n      _?: number,\n    ) => {\n      const nodeChildren = nodes.find((v) => v.name === propName)?.children ?? [];\n      return nestedSerializer(instance, propName, nodeChildren, isReadonly, nestedLevel, level);\n    };\n\n    return levelSerializer(instance, propName, isReadonly, currentLevel, level, continuation);\n  }\n\n  switch (propData.type) {\n    case PropType.Array:\n    case PropType.Object:\n      return createNestedSerializedDescriptor(\n        instance,\n        propName,\n        propData,\n        {level, currentLevel},\n        nodes,\n        nestedSerializer,\n      );\n    default:\n      return createShallowSerializedDescriptor(instance, propName, propData, isReadonly);\n  }\n}\n\nfunction levelSerializer(\n  instance: any,\n  propName: string | number,\n  isReadonly: boolean,\n  currentLevel = 0,\n  level = MAX_LEVEL,\n  continuation = levelSerializer,\n): Descriptor {\n  const serializableInstance = instance[propName];\n  const propData: PropertyData = {\n    prop: serializableInstance,\n    type: getPropType(serializableInstance),\n    containerType: getContainerType(serializableInstance),\n  };\n\n  switch (propData.type) {\n    case PropType.Array:\n    case PropType.Object:\n      return createLevelSerializedDescriptor(\n        instance,\n        propName,\n        propData,\n        {level, currentLevel},\n        continuation,\n      );\n    default:\n      return createShallowSerializedDescriptor(instance, propName, propData, isReadonly);\n  }\n}\n\nexport function serializeDirectiveState(instance: object): Record<string, Descriptor> {\n  const result: Record<string, Descriptor> = {};\n  const value = unwrapSignal(instance);\n  const isReadonly = isSignal(instance);\n  getKeys(value).forEach((prop) => {\n    if (typeof prop === 'string' && ignoreList.has(prop)) {\n      return;\n    }\n    result[prop] = levelSerializer(value, prop, isReadonly, 0, 0);\n  });\n  return result;\n}\n\nexport function serializeValue(value: unknown): Descriptor {\n  return levelSerializer({value}, 'value', false, 0, 0);\n}\n\nexport function deeplySerializeSelectedProperties(\n  instance: object,\n  props: NestedProp[],\n): Record<string, Descriptor> {\n  const result: Record<string, Descriptor> = {};\n  const isReadonly = isSignal(instance);\n  getKeys(instance).forEach((prop) => {\n    if (ignoreList.has(prop)) {\n      return;\n    }\n    const childrenProps = props.find((v) => v.name === prop)?.children;\n    if (!childrenProps) {\n      result[prop] = levelSerializer(instance, prop, isReadonly);\n    } else {\n      result[prop] = nestedSerializer(instance, prop, childrenProps, isReadonly);\n    }\n  });\n  return result;\n}\n\nfunction getContainerType(instance: unknown): ContainerType {\n  if (isSignal(instance)) {\n    return isWritableSignal(instance) ? 'WritableSignal' : 'ReadonlySignal';\n  }\n\n  return null;\n}\n\nfunction isWritableSignal(s: any): boolean {\n  return typeof s['set'] === 'function';\n}\n"]}