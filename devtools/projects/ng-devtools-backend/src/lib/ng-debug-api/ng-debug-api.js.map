{"version":3,"file":"ng-debug-api.js","sourceRoot":"","sources":["ng-debug-api.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport type {ɵFrameworkAgnosticGlobalUtils as GlobalUtils} from '@angular/core';\nimport {getAppRoots} from '../component-tree/get-roots';\nimport {Framework} from '../component-tree/core-enums';\n\n/** Returns a handle to window.ng APIs (global angular debugging). */\nexport const ngDebugClient = () => {\n  if (typeof (window as any).ng === 'undefined') {\n    throw new Error(\n      'Angular DevTools: Angular debugging APIs are not available. Ensure that your Angular app is in development mode and does not invoke `enableProdMode()`.',\n    );\n  }\n  return (window as any).ng as Partial<GlobalUtils>;\n};\n\n/** Type guard that checks whether a given debug API is supported within window.ng */\nexport function ngDebugApiIsSupported<T extends Partial<GlobalUtils>, K extends keyof T>(\n  ng: T,\n  api: K,\n): ng is T & Record<K, NonNullable<T[K]>> {\n  return typeof ng[api] === 'function';\n}\n\n/** Checks whether Dependency Injection debug API is supported within window.ng */\nexport function ngDebugDependencyInjectionApiIsSupported(): boolean {\n  const ng = ngDebugClient();\n  if (!ngDebugApiIsSupported(ng, 'getInjector')) {\n    return false;\n  }\n  if (!ngDebugApiIsSupported(ng, 'ɵgetInjectorResolutionPath')) {\n    return false;\n  }\n  if (!ngDebugApiIsSupported(ng, 'ɵgetDependenciesFromInjectable')) {\n    return false;\n  }\n  if (!ngDebugApiIsSupported(ng, 'ɵgetInjectorProviders')) {\n    return false;\n  }\n  if (!ngDebugApiIsSupported(ng, 'ɵgetInjectorMetadata')) {\n    return false;\n  }\n\n  return true;\n}\n\n/** Checks whether Profiler API is supported within window.ng */\nexport function ngDebugProfilerApiIsSupported(): boolean {\n  const ng = ngDebugClient();\n\n  // Temporary solution. Convert to an eligible API when available.\n  // https://github.com/angular/angular/pull/60585#discussion_r2017047132\n  // If there is a Wiz application, make Profiler API unavailable.\n  const roots = getAppRoots();\n  return (\n    !!roots.length &&\n    !roots.some((el) => {\n      const comp = ng.getComponent!(el)!;\n      return ng.getDirectiveMetadata?.(comp)?.framework === Framework.Wiz;\n    })\n  );\n}\n\n/** Checks whether Router API is supported within window.ng */\nexport function ngDebugRoutesApiIsSupported(): boolean {\n  const ng = ngDebugClient();\n  return (\n    ngDebugApiIsSupported(ng, 'ɵgetLoadedRoutes') &&\n    ngDebugApiIsSupported(ng, 'ɵgetRouterInstance') &&\n    ngDebugApiIsSupported(ng, 'ɵnavigateByUrl')\n  );\n}\n\n/** Checks whether Signal Graph API is supported within window.ng */\nexport function ngDebugSignalGraphApiIsSupported(): boolean {\n  const ng = ngDebugClient();\n  return ngDebugApiIsSupported(ng, 'ɵgetSignalGraph');\n}\n\n/**\n * Checks if transfer state is available.\n * Transfer state is only relevant when Angular app uses Server-Side Rendering.\n */\nexport function ngDebugTransferStateApiIsSupported(): boolean {\n  const ng = ngDebugClient();\n  return ngDebugApiIsSupported(ng, 'ɵgetTransferState');\n}\n\n/** Checks whether signal properties inspection API is supported within window.ng */\nexport function ngDebugSignalPropertiesInspectionApiIsSupported(): boolean {\n  const ng = ngDebugClient();\n\n  // If all apps are Angular, make the API available.\n  const roots = getAppRoots();\n  return (\n    !!roots.length &&\n    roots.every((el) => {\n      const comp = ng.getComponent!(el)!;\n      const fw = ng.getDirectiveMetadata?.(comp)?.framework;\n      // `framework` might be optional in the case of `AngularDirectiveDebugMetadata`.\n      return !fw || fw === Framework.Angular;\n    })\n  );\n}\n"]}