{"version":3,"file":"property-mutation.spec.js","sourceRoot":"","sources":["property-mutation.spec.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {computed, signal} from '@angular/core';\nimport {mutateNestedProp} from './property-mutation';\n\ndescribe('property-mutation', () => {\n  describe('mutateNestedProp', () => {\n    it('throws when no keys are given', () => {\n      expect(() => mutateNestedProp({}, [], 1)).toThrow();\n    });\n\n    describe('without signals', () => {\n      it('mutates objects', () => {\n        const obj = {foo: 1};\n\n        mutateNestedProp(obj, ['foo'], 2);\n\n        expect(obj.foo).toBe(2);\n      });\n\n      it('mutates arrays', () => {\n        const obj = [1];\n\n        mutateNestedProp(obj, ['0'], 2);\n\n        expect(obj.length).toBe(1);\n        expect(obj[0]).toBe(2);\n      });\n\n      it('mutates nested objects', () => {\n        const obj = {foo: {bar: 1}};\n\n        mutateNestedProp(obj, ['foo', 'bar'], 2);\n\n        expect(obj.foo.bar).toBe(2);\n      });\n\n      it('mutates nested arrays', () => {\n        const obj = [[1]];\n\n        mutateNestedProp(obj, ['0', '0'], 2);\n\n        expect(obj[0][0]).toBe(2);\n      });\n\n      it(\"throws an error when mutating outside an array's bounds\", () => {\n        const obj = {foo: [1]};\n\n        expect(() => mutateNestedProp(obj, ['foo', '1'], 2)).toThrowError(/index 1.*length 1/);\n      });\n\n      it('mutates non-primitive objects', () => {\n        class MyFoo {\n          bar = 1;\n        }\n\n        const obj = {foo: new MyFoo()};\n\n        mutateNestedProp(obj, ['foo', 'bar'], 2);\n\n        expect(obj.foo.bar).toBe(2);\n      });\n\n      it('throws an error when mutating a non-existent property', () => {\n        const obj = {\n          foo: {\n            bar: 1,\n          },\n        };\n\n        expect(() => mutateNestedProp(obj, ['foo', 'baz'], 2)).toThrowError(\n          /Property `baz` is not defined/,\n        );\n      });\n\n      it('throws on mutating a getter property', () => {\n        const obj = {\n          foo: {\n            get bar() {\n              return 1;\n            },\n          },\n        };\n\n        expect(() => mutateNestedProp(obj, ['foo', 'bar'], 2)).toThrowError(\n          /Cannot mutate getter property: bar/,\n        );\n      });\n\n      it('mutates an object from a getter property', () => {\n        const bar = {baz: 1};\n        const obj = {\n          foo: {\n            get bar() {\n              return bar;\n            },\n          },\n        };\n\n        mutateNestedProp(obj, ['foo', 'bar', 'baz'], 2);\n\n        expect(obj.foo.bar.baz).toBe(2);\n      });\n\n      it('mutates a setter property', () => {\n        let bar = 1;\n        const obj = {\n          foo: {\n            get bar() {\n              return bar;\n            },\n\n            set bar(value: number) {\n              bar = value;\n            },\n          },\n        };\n\n        mutateNestedProp(obj, ['foo', 'bar'], 2);\n\n        expect(obj.foo.bar).toBe(2);\n      });\n    });\n\n    describe('with signals', () => {\n      it('updates when the last value is a signal', () => {\n        const obj = {foo: signal(1)};\n\n        mutateNestedProp(obj, ['foo'], 2);\n\n        expect(obj.foo()).toBe(2);\n      });\n\n      it('immutably updates when the last receiver is a signal', () => {\n        const obj = {foo: signal({bar: 1})};\n        const originalSignalValue = obj.foo();\n\n        mutateNestedProp(obj, ['foo', 'bar'], 2);\n\n        expect(obj.foo()).not.toBe(originalSignalValue); // Immutable update.\n        expect(obj.foo()).toEqual({bar: 2});\n      });\n\n      it('immutably updates objects inside of a signal and preserves other data', () => {\n        const obj = {foo: signal({bar: 1, baz: 2})};\n\n        mutateNestedProp(obj, ['foo', 'bar'], 3);\n\n        expect(obj.foo()).toEqual({bar: 3, baz: 2});\n      });\n\n      it('immutably updates arrays inside of a signal', () => {\n        const obj = {foo: signal([1])};\n        const originalSignalValue = obj.foo();\n\n        mutateNestedProp(obj, ['foo', '0'], 2);\n\n        expect(obj.foo()).not.toBe(originalSignalValue);\n        expect(obj.foo()).toEqual([2]);\n      });\n\n      it(\"throws an error when mutating outside an array's bounds\", () => {\n        const obj = {foo: signal([1])};\n\n        expect(() => mutateNestedProp(obj, ['foo', '1'], 2)).toThrowError(/index 1.*length 1/);\n      });\n\n      it('immutably updates arrays inside of a signal and preserves other data', () => {\n        const obj = {foo: signal([1, 2, 3, 4, 5])};\n\n        mutateNestedProp(obj, ['foo', '2'], 6);\n\n        expect(obj.foo()).toEqual([1, 2, 6, 4, 5]);\n      });\n\n      it('immutably updates nested value inside a signal', () => {\n        const obj = {\n          foo: signal({\n            bar: {\n              baz: 1,\n            },\n          }),\n        };\n        const originalSignalValue = obj.foo();\n\n        mutateNestedProp(obj, ['foo', 'bar', 'baz'], 2);\n\n        expect(obj.foo()).not.toBe(originalSignalValue); // Do not mutate original object.\n        expect(obj.foo()).toEqual({bar: {baz: 2}});\n      });\n\n      it('throws an error when mutating a non-existent property', () => {\n        const obj = {\n          foo: signal({\n            bar: 1,\n          }),\n        };\n\n        expect(() => mutateNestedProp(obj, ['foo', 'baz'], 2)).toThrowError(\n          /Property `baz` is not defined/,\n        );\n      });\n\n      it('throws on non-primitive objects', () => {\n        class MyFoo {\n          bar = 1;\n        }\n\n        const obj = {foo: signal(new MyFoo())};\n\n        expect(() => mutateNestedProp(obj, ['foo', 'bar'], 2)).toThrowError(\n          /Cannot immutably update type/,\n        );\n      });\n\n      it('throws on objects with getters', () => {\n        const obj = {\n          foo: signal({\n            get bar() {\n              return 1;\n            },\n          }),\n        };\n\n        expect(() => mutateNestedProp(obj, ['foo', 'bar'], 2)).toThrowError(\n          /Cannot immutably update object/,\n        );\n      });\n\n      it('throws on objects with setters', () => {\n        const obj = {\n          foo: signal({\n            set bar(_value: number) {},\n          }),\n        };\n\n        expect(() => mutateNestedProp(obj, ['foo', 'bar'], 1)).toThrowError(\n          /Cannot immutably update object/,\n        );\n      });\n\n      it('throws on objects with sibling getters or setters', () => {\n        const obj = {\n          foo: signal({\n            bar: 1,\n            get baz() {\n              return 2;\n            },\n          }),\n        };\n\n        expect(() => mutateNestedProp(obj, ['foo', 'bar'], 2)).toThrowError(\n          /Cannot immutably update object/,\n        );\n      });\n\n      it('throws on objects with inherited getters or setters', () => {\n        const proto = {\n          bar: 1,\n          get baz() {\n            return 2;\n          },\n        };\n\n        const obj = {\n          foo: signal(Object.create(proto)),\n        };\n\n        expect(() => mutateNestedProp(obj, ['foo', 'bar'], 2)).toThrowError(\n          /Cannot immutably update object/,\n        );\n      });\n\n      it('immutably updates objects with unrelated getters or setters', () => {\n        const obj = {\n          foo: signal({\n            bar: 1,\n\n            // Safe: `baz` will not be immutably reconstructed when `bar` changes.\n            baz: {\n              get property() {\n                return 2;\n              },\n\n              set property(_value: number) {},\n            },\n          }),\n        };\n\n        const originalBaz = obj.foo().baz;\n\n        mutateNestedProp(obj, ['foo', 'bar'], 3);\n\n        expect(obj.foo().bar).toBe(3);\n        expect(obj.foo().baz).toBe(originalBaz);\n      });\n\n      it('throws on readonly signals', () => {\n        const obj = {\n          foo: {\n            bar: computed(() => ({baz: 1})),\n          },\n        };\n\n        expect(() => mutateNestedProp(obj, ['foo', 'bar', 'baz'], 2)).toThrowError(\n          'Cannot mutate a readonly signal at `foo.bar`.',\n        );\n      });\n\n      it('throws on nested signals', () => {\n        const obj = {\n          foo: signal({\n            bar: signal({\n              baz: 1,\n            }),\n          }),\n        };\n\n        expect(() => mutateNestedProp(obj, ['foo', 'bar', 'baz'], 2)).toThrowError(\n          'Cannot mutate nested signals.',\n        );\n      });\n\n      it('immutable updates objects with unrelated nested signals', () => {\n        const obj = {\n          foo: signal({\n            bar: {\n              baz: signal(1),\n              hello: 2,\n            },\n          }),\n        };\n        const originalFoo = obj.foo();\n\n        mutateNestedProp(obj, ['foo', 'bar', 'hello'], 3);\n\n        expect(obj.foo().bar.hello).toBe(3);\n        expect(obj.foo().bar.baz).toBe(originalFoo.bar.baz); // Nested signal should be the same.\n      });\n    });\n  });\n});\n"]}