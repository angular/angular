{"version":3,"file":"devtools-tabs.component.js","sourceRoot":"","sources":["devtools-tabs.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  inject,\n  input,\n  output,\n  signal,\n} from '@angular/core';\nimport {MatIcon} from '@angular/material/icon';\nimport {MatMenu, MatMenuItem, MatMenuTrigger} from '@angular/material/menu';\nimport {MatSlideToggle} from '@angular/material/slide-toggle';\nimport {MatTabLink, MatTabNav, MatTabNavPanel} from '@angular/material/tabs';\nimport {MatTooltip} from '@angular/material/tooltip';\nimport {\n  ComponentExplorerView,\n  Events,\n  MessageBus,\n  Route,\n  SerializedInjector,\n  SerializedProviderRecord,\n} from '../../../../protocol';\n\nimport {ApplicationEnvironment, Frame, TOP_LEVEL_FRAME_ID} from '../application-environment/index';\nimport {FrameManager} from '../application-services/frame_manager';\nimport {ThemeService} from '../application-services/theme_service';\n\nimport {DirectiveExplorerComponent} from './directive-explorer/directive-explorer.component';\nimport {InjectorTreeComponent} from './injector-tree/injector-tree.component';\nimport {ProfilerComponent} from './profiler/profiler.component';\nimport {RouterTreeComponent} from './router-tree/router-tree.component';\nimport {TransferStateComponent} from './transfer-state/transfer-state.component';\nimport {TabUpdate} from './tab-update/index';\nimport {Settings} from '../application-services/settings';\nimport {SUPPORTED_APIS} from '../application-providers/supported_apis';\n\ntype Tab = 'Components' | 'Profiler' | 'Router Tree' | 'Injector Tree' | 'Transfer State';\n\n@Component({\n  selector: 'ng-devtools-tabs',\n  templateUrl: './devtools-tabs.component.html',\n  styleUrls: ['./devtools-tabs.component.scss'],\n  imports: [\n    MatTabNav,\n    MatTabNavPanel,\n    MatTooltip,\n    MatIcon,\n    MatMenu,\n    MatMenuItem,\n    MatMenuTrigger,\n    MatTabLink,\n    DirectiveExplorerComponent,\n    ProfilerComponent,\n    RouterTreeComponent,\n    InjectorTreeComponent,\n    TransferStateComponent,\n    MatSlideToggle,\n  ],\n  providers: [TabUpdate],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DevToolsTabsComponent {\n  readonly frameManager = inject(FrameManager);\n  readonly themeService = inject(ThemeService);\n  private readonly tabUpdate = inject(TabUpdate);\n  private readonly messageBus = inject<MessageBus<Events>>(MessageBus);\n  private readonly settings = inject(Settings);\n  protected readonly applicationEnvironment = inject(ApplicationEnvironment);\n  protected readonly supportedApis = inject(SUPPORTED_APIS);\n\n  readonly isHydrationEnabled = input(false);\n  readonly frameSelected = output<Frame>();\n\n  readonly inspectorRunning = signal(false);\n\n  protected readonly showCommentNodes = this.settings.showCommentNodes;\n  protected readonly routerGraphEnabled = this.settings.routerGraphEnabled;\n  protected readonly timingAPIEnabled = this.settings.timingAPIEnabled;\n  protected readonly signalGraphEnabled = this.settings.signalGraphEnabled;\n  protected readonly transferStateEnabled = this.settings.transferStateEnabled;\n  protected readonly activeTab = this.settings.activeTab;\n\n  readonly componentExplorerView = signal<ComponentExplorerView | null>(null);\n  readonly providers = signal<SerializedProviderRecord[]>([]);\n  readonly routes = signal<Route[]>([]);\n\n  readonly tabs = computed<Tab[]>(() => {\n    const supportedApis = this.supportedApis();\n    const tabs: Tab[] = ['Components'];\n\n    if (supportedApis.profiler) {\n      tabs.push('Profiler');\n    }\n    if (supportedApis.dependencyInjection) {\n      tabs.push('Injector Tree');\n    }\n    if (this.routerGraphEnabled() && this.routes().length > 0) {\n      tabs.push('Router Tree');\n    }\n    if (supportedApis.transferState && this.transferStateEnabled()) {\n      tabs.push('Transfer State');\n    }\n\n    return tabs;\n  });\n\n  profilingNotificationsSupported = Boolean(\n    (window.chrome?.devtools as any)?.performance?.onProfilingStarted,\n  );\n  TOP_LEVEL_FRAME_ID = TOP_LEVEL_FRAME_ID;\n\n  readonly angularVersion = input<string | undefined>(undefined);\n  readonly majorAngularVersion = computed(() => {\n    const version = this.angularVersion();\n    if (!version) {\n      return -1;\n    }\n    return parseInt(version.toString().split('.')[0], 10);\n  });\n\n  readonly extensionVersion = signal('dev-build');\n\n  constructor() {\n    this.messageBus.on('updateRouterTree', (routes: any[]) => {\n      this.routes.set(routes || []);\n    });\n\n    // Change the tab to Components, if an element is selected via the inspector.\n    this.messageBus.on('selectComponent', () => {\n      if (this.activeTab() !== 'Components') {\n        this.changeTab('Components');\n      }\n    });\n\n    this.messageBus.on('latestComponentExplorerView', (view: ComponentExplorerView) => {\n      this.componentExplorerView.set(view);\n    });\n\n    this.messageBus.on(\n      'latestInjectorProviders',\n      (_: SerializedInjector, providers: SerializedProviderRecord[]) => {\n        this.providers.set(providers);\n      },\n    );\n\n    if (typeof chrome !== 'undefined' && chrome.runtime !== undefined) {\n      this.extensionVersion.set(chrome.runtime.getManifest().version);\n    }\n  }\n\n  emitSelectedFrame(event: Event): void {\n    const frameId = (event.target as HTMLInputElement).value;\n    const frame = this.frameManager.frames().find((frame) => frame.id === parseInt(frameId, 10));\n    this.frameSelected.emit(frame!);\n  }\n\n  changeTab(tab: Tab): void {\n    this.activeTab.set(tab);\n    this.tabUpdate.notify(tab);\n    if (tab === 'Router Tree') {\n      this.messageBus.emit('getRoutes');\n    }\n  }\n\n  toggleInspector(): void {\n    this.toggleInspectorState();\n    this.emitInspectorEvent();\n  }\n\n  emitInspectorEvent(): void {\n    if (this.inspectorRunning()) {\n      this.messageBus.emit('inspectorStart');\n    } else {\n      this.messageBus.emit('inspectorEnd');\n      this.messageBus.emit('removeHighlightOverlay');\n    }\n  }\n\n  toggleInspectorState(): void {\n    this.inspectorRunning.update((state) => !state);\n  }\n\n  toggleTimingAPI(): void {\n    this.timingAPIEnabled.update((state) => !state);\n    this.timingAPIEnabled()\n      ? this.messageBus.emit('enableTimingAPI')\n      : this.messageBus.emit('disableTimingAPI');\n  }\n\n  protected setRouterGraph(enabled: boolean): void {\n    this.routerGraphEnabled.set(enabled);\n    if (!enabled) {\n      this.activeTab.set('Components');\n    }\n  }\n\n  protected setSignalGraph(enabled: boolean): void {\n    this.signalGraphEnabled.set(enabled);\n  }\n\n  protected setTransferStateTab(enabled: boolean): void {\n    this.transferStateEnabled.set(enabled);\n    if (!enabled && this.activeTab() === 'Transfer State') {\n      this.activeTab.set('Components');\n    }\n  }\n}\n"]}