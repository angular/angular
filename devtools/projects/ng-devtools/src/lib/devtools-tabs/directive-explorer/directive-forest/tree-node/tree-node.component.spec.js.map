{"version":3,"file":"tree-node.component.spec.js","sourceRoot":"","sources":["tree-node.component.spec.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ComponentFixture, TestBed} from '@angular/core/testing';\nimport {By} from '@angular/platform-browser';\nimport {FlatTreeControl} from '@angular/cdk/tree';\n\nimport {NodeTextMatch, TreeNodeComponent} from './tree-node.component';\nimport {FlatNode} from '../component-data-source';\n\ntype DeepPartial<T> = T extends object ? {[P in keyof T]?: DeepPartial<T[P]>} : T;\n\nconst srcNode = {\n  id: 'node',\n  original: {\n    component: {\n      id: 1337,\n    },\n  },\n} as DeepPartial<FlatNode>;\n\ndescribe('TreeNodeComponent', () => {\n  let component: TreeNodeComponent;\n  let fixture: ComponentFixture<TreeNodeComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [TreeNodeComponent],\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(TreeNodeComponent);\n    component = fixture.componentInstance;\n    fixture.componentRef.setInput('node', srcNode);\n    fixture.componentRef.setInput('selectedNode', null);\n    fixture.componentRef.setInput('highlightedId', 0);\n    fixture.componentRef.setInput(\n      'treeControl',\n      new FlatTreeControl<FlatNode>(\n        (node) => node!.level,\n        (node) => node.expandable,\n      ),\n    );\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n\n  it('should render node name', () => {\n    fixture.componentRef.setInput('node', {\n      ...srcNode,\n      name: 'app-test',\n    });\n    fixture.detectChanges();\n\n    const name = fixture.debugElement.query(By.css('.node-name'));\n\n    expect(name.nativeElement.innerText).toEqual('app-test');\n  });\n\n  it('should include directive name, if any', () => {\n    fixture.componentRef.setInput('node', {\n      ...srcNode,\n      name: 'app-test',\n      directives: ['TooltipDirective'],\n    });\n    fixture.detectChanges();\n\n    const name = fixture.debugElement.query(By.css('.node-name'));\n\n    expect(name.nativeElement.innerText).toEqual('app-test[TooltipDirective]');\n  });\n\n  it('should include directive names (multiple), if any', () => {\n    fixture.componentRef.setInput('node', {\n      ...srcNode,\n      name: 'app-test',\n      directives: ['TooltipDirective', 'CtxMenuDirective'],\n    });\n    fixture.detectChanges();\n\n    const name = fixture.debugElement.query(By.css('.node-name'));\n\n    expect(name.nativeElement.innerText).toEqual('app-test[TooltipDirective][CtxMenuDirective]');\n  });\n\n  it('should render \"OnPush\" label, if OnPush', () => {\n    let onPush = fixture.debugElement.query(By.css('.on-push'));\n    expect(onPush).toBeFalsy();\n\n    fixture.componentRef.setInput('node', {\n      ...srcNode,\n      name: 'app-test',\n      onPush: true,\n    });\n    fixture.detectChanges();\n\n    onPush = fixture.debugElement.query(By.css('.on-push'));\n\n    expect(onPush).toBeTruthy();\n  });\n\n  it('should handle selection', () => {\n    const consoleRef = fixture.debugElement.query(By.css('.console-reference'));\n    expect(getComputedStyle(consoleRef.nativeElement).display).toEqual('none');\n\n    fixture.componentRef.setInput('selectedNode', {id: 'node'});\n    fixture.detectChanges();\n\n    expect(getComputedStyle(consoleRef.nativeElement).display).toEqual('block');\n    expect(fixture.debugElement.nativeElement.classList.contains('selected')).toBeTrue();\n  });\n\n  it('should handle highlighting', () => {\n    fixture.componentRef.setInput('highlightedId', 1337);\n    fixture.detectChanges();\n\n    const classList = fixture.debugElement.nativeElement.classList;\n    expect(classList.contains('highlighted')).toBeTrue();\n  });\n\n  it('should add respective class, if a new node', () => {\n    fixture.componentRef.setInput('node', {\n      ...srcNode,\n      newItem: true,\n    });\n    fixture.detectChanges();\n\n    const classList = fixture.debugElement.nativeElement.classList;\n    expect(classList.contains('new-node')).toBeTrue();\n  });\n\n  it('should mark the text that matches the filter', () => {\n    fixture.componentRef.setInput('textMatches', [{startIdx: 3, endIdx: 27}]);\n    fixture.componentRef.setInput('node', {\n      ...srcNode,\n      name: 'my-long-component-name[WithADirective]',\n    });\n    fixture.detectChanges();\n\n    const marked = fixture.debugElement.query(By.css('mark'));\n    expect(marked.nativeElement.innerText).toEqual('long-component-name[With');\n  });\n\n  it('should mark the text that matches the filter (beginning of the string)', () => {\n    fixture.componentRef.setInput('textMatches', [{startIdx: 0, endIdx: 9}]);\n    fixture.componentRef.setInput('node', {\n      ...srcNode,\n      name: 'app-large-component',\n    });\n    fixture.detectChanges();\n\n    const marked = fixture.debugElement.query(By.css('mark'));\n    expect(marked.nativeElement.innerText).toEqual('app-large');\n  });\n\n  it('should mark the text that matches the filter (end of the string)', () => {\n    fixture.componentRef.setInput('textMatches', [{startIdx: 10, endIdx: 19}]);\n    fixture.componentRef.setInput('node', {\n      ...srcNode,\n      name: 'app-large-component',\n    });\n    fixture.detectChanges();\n\n    const marked = fixture.debugElement.query(By.css('mark'));\n    expect(marked.nativeElement.innerText).toEqual('component');\n  });\n\n  it('should mark the whole text, if it matches completely the filter', () => {\n    fixture.componentRef.setInput('textMatches', [{startIdx: 0, endIdx: 8}]);\n    fixture.componentRef.setInput('node', {\n      ...srcNode,\n      name: 'app-test',\n    });\n    fixture.detectChanges();\n\n    const marked = fixture.debugElement.query(By.css('mark'));\n    expect(marked.nativeElement.innerText).toEqual('app-test');\n  });\n\n  it('should mark a sequence of matches', () => {\n    const matches: NodeTextMatch[] = [\n      {startIdx: 0, endIdx: 8}, // app-test\n      {startIdx: 13, endIdx: 16}, // Foo\n      {startIdx: 24, endIdx: 26}, // az\n    ];\n    fixture.componentRef.setInput('textMatches', matches);\n    fixture.componentRef.setInput('node', {\n      ...srcNode,\n      name: 'app-test-cmp[Foo][Bar][Baz]',\n    });\n    fixture.detectChanges();\n\n    const marked = fixture.debugElement.queryAll(By.css('mark'));\n\n    const [appTest, foo, az] = marked;\n    expect(appTest.nativeElement.innerText).toEqual('app-test');\n    expect(foo.nativeElement.innerText).toEqual('Foo');\n    expect(az.nativeElement.innerText).toEqual('az');\n  });\n});\n"]}