{"version":3,"file":"breadcrumbs.component.js","sourceRoot":"","sources":["breadcrumbs.component.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,QAAQ,EACR,MAAM,EAEN,KAAK,EACL,MAAM,EACN,MAAM,EACN,SAAS,GACV,MAAM,eAAe,CAAC;AAGvB,OAAO,EAAC,OAAO,EAAC,MAAM,wBAAwB,CAAC;AASxC,IAAM,oBAAoB,GAA1B,MAAM,oBAAoB;IA+B/B;QA9BS,YAAO,GAAG,KAAK,CAAC,QAAQ,EAAc,CAAC;QACvC,iBAAY,GAAG,MAAM,EAAY,CAAC;QAClC,kBAAa,GAAG,MAAM,EAAY,CAAC;QACnC,mBAAc,GAAG,MAAM,EAAY,CAAC;QAEpC,6BAAwB,GAAG,SAAS,CAAC,QAAQ,CAAa,aAAa,CAAC,CAAC;QAEzE,yBAAoB,GAAG,QAAQ,CAAC,GAAG,EAAE;YAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC7C,OAAO,KAAK,IAAI,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QAEM,0BAAqB,GAAG,QAAQ,CAAC,GAAG,EAAE;YAC7C,MAAM,KAAK,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC7C,IAAI,CAAC,KAAK,EAAE,CAAC;gBACX,OAAO,KAAK,CAAC;YACf,CAAC;YACD,MAAM,EAAC,WAAW,EAAE,WAAW,EAAE,UAAU,EAAC,GAAG,KAAK,CAAC;YACrD,OAAO,WAAW,GAAG,WAAW,IAAI,UAAU,GAAG,WAAW,GAAG,WAAW,CAAC;QAC7E,CAAC,CAAC,CAAC;QAEc,4BAAuB,GAAG,MAAM,CAO/C,SAAS,CAAC,CAAC;QAGX,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE;YACjB,MAAM,QAAQ,GAAG,IAAI,cAAc,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,4BAA4B,EAAE,CAAC,CAAC;YAC/E,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,wBAAwB,EAAE,CAAC,aAAa,CAAC,CAAC;YAChE,OAAO,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,MAAc;QACnB,IAAI,CAAC,wBAAwB,EAAE,CAAC,aAAa,CAAC,UAAU,IAAI,MAAM,CAAC;QACnE,IAAI,CAAC,4BAA4B,EAAE,CAAC;IACtC,CAAC;IAED,4BAA4B;QAC1B,MAAM,EAAC,WAAW,EAAE,WAAW,EAAE,UAAU,EAAC,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC,aAAa,CAAC;QAC7F,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,EAAC,WAAW,EAAE,WAAW,EAAE,UAAU,EAAC,CAAC,CAAC;IAC3E,CAAC;CACF,CAAA;AAhDY,oBAAoB;IAPhC,SAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,WAAW,EAAE,8BAA8B;QAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;QAC3C,OAAO,EAAE,CAAC,OAAO,CAAC;QAClB,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,oBAAoB,CAgDhC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  ElementRef,\n  input,\n  output,\n  signal,\n  viewChild,\n} from '@angular/core';\n\nimport {FlatNode} from '../component-data-source';\nimport {MatIcon} from '@angular/material/icon';\n\n@Component({\n  selector: 'ng-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  imports: [MatIcon],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbsComponent {\n  readonly parents = input.required<FlatNode[]>();\n  readonly handleSelect = output<FlatNode>();\n  readonly mouseOverNode = output<FlatNode>();\n  readonly mouseLeaveNode = output<FlatNode>();\n\n  readonly breadcrumbsScrollContent = viewChild.required<ElementRef>('breadcrumbs');\n\n  readonly showScrollLeftButton = computed(() => {\n    const value = this.breadcrumbsScrollLayout();\n    return value && value.scrollLeft > 0;\n  });\n\n  readonly showScrollRightButton = computed(() => {\n    const value = this.breadcrumbsScrollLayout();\n    if (!value) {\n      return false;\n    }\n    const {clientWidth, scrollWidth, scrollLeft} = value;\n    return scrollWidth > clientWidth && scrollLeft + clientWidth < scrollWidth;\n  });\n\n  private readonly breadcrumbsScrollLayout = signal<\n    | {\n        clientWidth: number;\n        scrollWidth: number;\n        scrollLeft: number;\n      }\n    | undefined\n  >(undefined);\n\n  constructor() {\n    effect((cleanup) => {\n      const observer = new ResizeObserver(() => this.updateScrollButtonVisibility());\n      observer.observe(this.breadcrumbsScrollContent().nativeElement);\n      cleanup(() => observer.disconnect());\n    });\n  }\n\n  scroll(pixels: number): void {\n    this.breadcrumbsScrollContent().nativeElement.scrollLeft += pixels;\n    this.updateScrollButtonVisibility();\n  }\n\n  updateScrollButtonVisibility(): void {\n    const {clientWidth, scrollWidth, scrollLeft} = this.breadcrumbsScrollContent().nativeElement;\n    this.breadcrumbsScrollLayout.set({clientWidth, scrollWidth, scrollLeft});\n  }\n}\n"]}