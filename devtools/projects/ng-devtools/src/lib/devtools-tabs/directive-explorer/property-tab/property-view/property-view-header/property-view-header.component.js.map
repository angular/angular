{"version":3,"file":"property-view-header.component.js","sourceRoot":"","sources":["property-view-header.component.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,OAAO,EAAC,uBAAuB,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC,MAAM,eAAe,CAAC;AAClG,OAAO,EAAC,OAAO,EAAC,MAAM,wBAAwB,CAAC;AAC/C,OAAO,EAAC,UAAU,EAAC,MAAM,2BAA2B,CAAC;AACrD,OAAO,EAAC,UAAU,EAAC,MAAM,2BAA2B,CAAC;AACrD,OAAO,EAAC,QAAQ,EAAC,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAC,YAAY,EAAC,MAAM,mDAAmD,CAAC;AASxE,IAAM,2BAA2B,GAAjC,MAAM,2BAA2B;IAAjC;QACI,cAAS,GAAG,KAAK,CAAC,QAAQ,EAAU,CAAC;QACrC,eAAU,GAAG,MAAM,EAAQ,CAAC;QAEpB,iBAAY,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;QACpC,aAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QAEpC,4BAAuB,GAAG,QAAQ,CAAC,GAAG,EAAE;YAC/C,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,CAAC;YAClE,MAAM,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,uBAAuB,EAAE,CAAC;YACtE,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC;QAC3E,CAAC,CAAC,CAAC;QAEgB,sBAAiB,GAAG,QAAQ,CAAC,GAAG,EAAE,CACnD,IAAI,CAAC,uBAAuB,EAAE;YAC5B,CAAC,CAAC,oGAAoG;YACtG,CAAC,CAAC,aAAa,CAClB,CAAC;IAOJ,CAAC;IALC,8BAA8B;IAC9B,gBAAgB,CAAC,KAAiB;QAChC,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;CACF,CAAA;AAxBY,2BAA2B;IAPvC,SAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,WAAW,EAAE,uCAAuC;QACpD,SAAS,EAAE,CAAC,uCAAuC,CAAC;QACpD,OAAO,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,OAAO,CAAC;QAC1C,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,2BAA2B,CAwBvC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ChangeDetectionStrategy, Component, computed, inject, input, output} from '@angular/core';\nimport {MatIcon} from '@angular/material/icon';\nimport {MatTooltip} from '@angular/material/tooltip';\nimport {MatToolbar} from '@angular/material/toolbar';\nimport {Platform} from '@angular/cdk/platform';\nimport {FrameManager} from '../../../../../application-services/frame_manager';\n\n@Component({\n  selector: 'ng-property-view-header',\n  templateUrl: './property-view-header.component.html',\n  styleUrls: ['./property-view-header.component.scss'],\n  imports: [MatToolbar, MatTooltip, MatIcon],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PropertyViewHeaderComponent {\n  readonly directive = input.required<string>();\n  readonly viewSource = output<void>();\n\n  private readonly frameManager = inject(FrameManager);\n  private readonly platform = inject(Platform);\n\n  readonly disableViewSourceButton = computed(() => {\n    const isTopLevelFrame = this.frameManager.topLevelFrameIsActive();\n    const frameHasUniqueUrl = this.frameManager.activeFrameHasUniqueUrl();\n    return (this.platform.FIREFOX && !isTopLevelFrame) || !frameHasUniqueUrl;\n  });\n\n  protected readonly viewSourceTooltip = computed(() =>\n    this.disableViewSourceButton()\n      ? 'Inspecting source is not supported in Firefox when the inspected frame is not the top-level frame.'\n      : 'Open Source',\n  );\n\n  // output that emits directive\n  handleViewSource(event: MouseEvent): void {\n    event.stopPropagation();\n    this.viewSource.emit();\n  }\n}\n"]}