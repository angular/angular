{"version":3,"file":"property-tab-header.component.js","sourceRoot":"","sources":["property-tab-header.component.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,OAAO,EAAC,uBAAuB,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAC,MAAM,eAAe,CAAC;AAChG,OAAO,EAAC,kBAAkB,EAAC,MAAM,6BAA6B,CAAC;AAC/D,OAAO,EAAC,OAAO,EAAC,MAAM,wBAAwB,CAAC;AAG/C,OAAO,EAAC,0BAA0B,EAAC,MAAM,mDAAmD,CAAC;AAC7F,OAAO,EAAC,eAAe,EAAC,MAAM,4CAA4C,CAAC;AAC3E,OAAO,EAAC,QAAQ,EAAC,MAAM,2CAA2C,CAAC;AAS5D,IAAM,0BAA0B,GAAhC,MAAM,0BAA0B;IAAhC;QACY,aAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE1B,2BAAsB,GAAG,KAAK,CAAC,QAAQ,EAAe,CAAC;QACvD,oBAAe,GAAG,MAAM,EAAQ,CAAC;QAEjC,aAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAEzB,uBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC;IAC3E,CAAC;CAAA,CAAA;AATY,0BAA0B;IAPtC,SAAS,CAAC;QACT,WAAW,EAAE,sCAAsC;QACnD,QAAQ,EAAE,wBAAwB;QAClC,SAAS,EAAE,CAAC,sCAAsC,CAAC;QACnD,eAAe,EAAE,uBAAuB,CAAC,MAAM;QAC/C,OAAO,EAAE,CAAC,kBAAkB,EAAE,OAAO,EAAE,0BAA0B,EAAE,eAAe,CAAC;KACpF,CAAC;GACW,0BAA0B,CAStC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ChangeDetectionStrategy, Component, input, output, signal, inject} from '@angular/core';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatIcon} from '@angular/material/icon';\n\nimport {IndexedNode} from '../../directive-forest/index-forest';\nimport {ComponentMetadataComponent} from './component-metadata/component-metadata.component';\nimport {ButtonComponent} from '../../../../shared/button/button.component';\nimport {Settings} from '../../../../application-services/settings';\n\n@Component({\n  templateUrl: './property-tab-header.component.html',\n  selector: 'ng-property-tab-header',\n  styleUrls: ['./property-tab-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatExpansionModule, MatIcon, ComponentMetadataComponent, ButtonComponent],\n})\nexport class PropertyTabHeaderComponent {\n  private readonly settings = inject(Settings);\n\n  protected readonly currentSelectedElement = input.required<IndexedNode>();\n  protected readonly showSignalGraph = output<void>();\n\n  protected readonly expanded = signal(false);\n\n  protected readonly signalGraphEnabled = this.settings.signalGraphEnabled;\n}\n"]}