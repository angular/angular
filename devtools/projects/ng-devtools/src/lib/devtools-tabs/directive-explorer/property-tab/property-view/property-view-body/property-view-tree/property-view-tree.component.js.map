{"version":3,"file":"property-view-tree.component.js","sourceRoot":"","sources":["property-view-tree.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ChangeDetectionStrategy, Component, inject, input, output} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatTooltip} from '@angular/material/tooltip';\nimport {MatIcon} from '@angular/material/icon';\nimport {FlatTreeControl} from '@angular/cdk/tree';\n\nimport {FlatNode} from '../../../../property-resolver/element-property-resolver';\nimport {PropertyDataSource} from '../../../../property-resolver/property-data-source';\nimport {PropertyEditorComponent} from './property-editor/property-editor.component';\nimport {PropertyPreviewComponent} from './property-preview/property-preview.component';\nimport {MatTree, MatTreeNode, MatTreeNodeDef, MatTreeNodePadding} from '@angular/material/tree';\nimport {SUPPORTED_APIS} from '../../../../../../application-providers/supported_apis';\nimport {SignalGraphManager} from '../../../../signal-graph/signal-graph-manager';\nimport {DebugSignalGraphNode} from '../../../../../../../../../protocol';\nimport {Settings} from '../../../../../../application-services/settings';\n\n@Component({\n  selector: 'ng-property-view-tree',\n  templateUrl: './property-view-tree.component.html',\n  styleUrls: ['./property-view-tree.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    MatTree,\n    MatTreeNode,\n    MatTreeNodeDef,\n    MatTreeNodePadding,\n    PropertyPreviewComponent,\n    PropertyEditorComponent,\n    MatIcon,\n    MatTooltip,\n  ],\n})\nexport class PropertyViewTreeComponent {\n  protected readonly supportedApis = inject(SUPPORTED_APIS);\n  private readonly signalGraph = inject(SignalGraphManager);\n  private readonly settings = inject(Settings);\n\n  readonly dataSource = input.required<PropertyDataSource>();\n  readonly treeControl = input.required<FlatTreeControl<FlatNode>>();\n  readonly updateValue = output<any>();\n  readonly inspect = output<any>();\n  readonly showSignalGraph = output<DebugSignalGraphNode>();\n\n  protected readonly signalGraphEnabled = this.settings.signalGraphEnabled;\n\n  hasChild = (_: number, node: FlatNode): boolean => node.expandable;\n\n  toggle(node: FlatNode): void {\n    if (this.treeControl().isExpanded(node)) {\n      this.treeControl().collapse(node);\n      return;\n    }\n    this.expand(node);\n  }\n\n  expand(node: FlatNode): void {\n    const {prop} = node;\n    if (!prop.descriptor.expandable) {\n      return;\n    }\n    this.treeControl().expand(node);\n  }\n\n  handleUpdate(node: FlatNode, newValue: unknown): void {\n    this.updateValue.emit({\n      node,\n      newValue,\n    });\n  }\n\n  getSignalNode(node: FlatNode): DebugSignalGraphNode | null {\n    if (node.prop.descriptor.containerType?.includes('Signal')) {\n      return this.signalGraph.graph()?.nodes.find((sn) => sn.label === node.prop.name) ?? null;\n    }\n    return null;\n  }\n\n  showGraph(event: Event, node: DebugSignalGraphNode) {\n    event.stopPropagation();\n    this.showSignalGraph.emit(node);\n  }\n}\n"]}