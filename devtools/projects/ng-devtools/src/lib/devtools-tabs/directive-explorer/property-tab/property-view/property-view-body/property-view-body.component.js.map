{"version":3,"file":"property-view-body.component.js","sourceRoot":"","sources":["property-view-body.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {CdkDragDrop, moveItemInArray, CdkDropList, CdkDrag} from '@angular/cdk/drag-drop';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ÉµFramework as Framework,\n  computed,\n  input,\n  output,\n  signal,\n} from '@angular/core';\nimport {DebugSignalGraphNode, DirectivePosition} from '../../../../../../../../protocol';\n\nimport {\n  DirectivePropertyResolver,\n  DirectiveTreeData,\n} from '../../../property-resolver/directive-property-resolver';\nimport {FlatNode} from '../../../property-resolver/element-property-resolver';\nimport {PropertyViewTreeComponent} from './property-view-tree/property-view-tree.component';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {DependencyViewerComponent} from './dependency-viewer/dependency-viewer.component';\nimport {DocsRefButtonComponent} from '../../../../../shared/docs-ref-button/docs-ref-button.component';\n\n@Component({\n  selector: 'ng-property-view-body',\n  templateUrl: './property-view-body.component.html',\n  styleUrls: ['./property-view-body.component.scss'],\n  imports: [\n    MatExpansionModule,\n    CdkDropList,\n    CdkDrag,\n    PropertyViewTreeComponent,\n    DocsRefButtonComponent,\n    DependencyViewerComponent,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PropertyViewBodyComponent {\n  readonly controller = input.required<DirectivePropertyResolver>();\n  readonly directiveInputControls = input.required<DirectiveTreeData>();\n  readonly directivePropControls = input.required<DirectiveTreeData>();\n  readonly directiveOutputControls = input.required<DirectiveTreeData>();\n  readonly directiveStateControls = input.required<DirectiveTreeData>();\n\n  readonly inspect = output<{node: FlatNode; directivePosition: DirectivePosition}>();\n  readonly showSignalGraph = output<DebugSignalGraphNode>();\n\n  protected readonly dependencies = computed(() => {\n    const metadata = this.controller().directiveMetadata;\n    if (!metadata) return [];\n    if (!('dependencies' in metadata)) return [];\n    return metadata.dependencies;\n  });\n\n  protected readonly panels = signal([\n    {\n      title: () => 'Inputs',\n      controls: () => this.directiveInputControls(),\n    },\n    {\n      title: () => 'Props',\n      controls: () => this.directivePropControls(),\n    },\n    {\n      title: () => 'Outputs',\n      controls: () => this.directiveOutputControls(),\n    },\n    {\n      title: () =>\n        this.controller().directiveMetadata?.framework === Framework.Wiz ? 'State' : 'Properties',\n      controls: () => this.directiveStateControls(),\n    },\n  ]);\n\n  readonly controlsLoaded = computed(() => {\n    return (\n      !!this.directiveStateControls() &&\n      !!this.directiveOutputControls() &&\n      !!this.directiveInputControls()\n    );\n  });\n\n  updateValue({node, newValue}: {node: FlatNode; newValue: unknown}): void {\n    this.controller().updateValue(node, newValue);\n  }\n\n  drop(event: CdkDragDrop<any, any>): void {\n    const panels = this.panels();\n    moveItemInArray(panels, event.previousIndex, event.currentIndex);\n    this.panels.set(Array.from(panels)); // Clone array for immutable update.\n  }\n\n  handleInspect(node: FlatNode): void {\n    this.inspect.emit({\n      node,\n      directivePosition: this.controller().directivePosition,\n    });\n  }\n}\n"]}