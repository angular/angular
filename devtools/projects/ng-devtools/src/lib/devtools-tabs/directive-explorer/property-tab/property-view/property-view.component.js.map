{"version":3,"file":"property-view.component.js","sourceRoot":"","sources":["property-view.component.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,OAAO,EAAC,uBAAuB,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC,MAAM,eAAe,CAAC;AAGlG,OAAO,EAAC,uBAAuB,EAAW,MAAM,mDAAmD,CAAC;AACpG,OAAO,EAAC,yBAAyB,EAAC,MAAM,mDAAmD,CAAC;AAC5F,OAAO,EAAC,2BAA2B,EAAC,MAAM,uDAAuD,CAAC;AAS3F,IAAM,qBAAqB,GAA3B,MAAM,qBAAqB;IAA3B;QACI,cAAS,GAAG,KAAK,CAAC,QAAQ,EAAkB,CAAC;QAE7C,YAAO,GAAG,MAAM,EAA0D,CAAC;QAC3E,eAAU,GAAG,MAAM,EAAQ,CAAC;QAC5B,oBAAe,GAAG,MAAM,EAAwB,CAAC;QAElD,iBAAY,GAAG,MAAM,CAAC,uBAAuB,CAAC,CAAC;QAEpC,eAAU,GAAG,QAAQ,CAAC,GAAG,EAAE,CAC5C,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAChE,CAAC;QAEiB,2BAAsB,GAAG,QAAQ,CAClD,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,sBAAsB,CAChD,CAAC;QACiB,0BAAqB,GAAG,QAAQ,CACjD,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,qBAAqB,CAC/C,CAAC;QACiB,4BAAuB,GAAG,QAAQ,CACnD,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,uBAAuB,CACjD,CAAC;QACiB,2BAAsB,GAAG,QAAQ,CAClD,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,sBAAsB,CAChD,CAAC;IACJ,CAAC;CAAA,CAAA;AAzBY,qBAAqB;IAPjC,SAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,WAAW,EAAE,gCAAgC;QAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;QAC7C,OAAO,EAAE,CAAC,2BAA2B,EAAE,yBAAyB,CAAC;QACjE,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,qBAAqB,CAyBjC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ChangeDetectionStrategy, Component, computed, inject, input, output} from '@angular/core';\nimport {DebugSignalGraphNode, DirectivePosition} from '../../../../../../../protocol';\n\nimport {ElementPropertyResolver, FlatNode} from '../../property-resolver/element-property-resolver';\nimport {PropertyViewBodyComponent} from './property-view-body/property-view-body.component';\nimport {PropertyViewHeaderComponent} from './property-view-header/property-view-header.component';\n\n@Component({\n  selector: 'ng-property-view',\n  templateUrl: './property-view.component.html',\n  styleUrls: ['./property-view.component.scss'],\n  imports: [PropertyViewHeaderComponent, PropertyViewBodyComponent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PropertyViewComponent {\n  readonly directive = input.required<{name: string}>();\n\n  readonly inspect = output<{node: FlatNode; directivePosition: DirectivePosition}>();\n  readonly viewSource = output<void>();\n  readonly showSignalGraph = output<DebugSignalGraphNode>();\n\n  private _nestedProps = inject(ElementPropertyResolver);\n\n  protected readonly controller = computed(() =>\n    this._nestedProps.getDirectiveController(this.directive().name),\n  );\n\n  protected readonly directiveInputControls = computed(\n    () => this.controller()?.directiveInputControls,\n  );\n  protected readonly directivePropControls = computed(\n    () => this.controller()?.directivePropControls,\n  );\n  protected readonly directiveOutputControls = computed(\n    () => this.controller()?.directiveOutputControls,\n  );\n  protected readonly directiveStateControls = computed(\n    () => this.controller()?.directiveStateControls,\n  );\n}\n"]}