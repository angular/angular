{"version":3,"file":"signals-tab.component.js","sourceRoot":"","sources":["signals-tab.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  afterNextRender,\n  Component,\n  computed,\n  effect,\n  ElementRef,\n  inject,\n  input,\n  linkedSignal,\n  OnDestroy,\n  output,\n  signal,\n  viewChild,\n} from '@angular/core';\nimport {SignalsGraphVisualizer} from './signals-visualizer';\nimport {\n  DebugSignalGraph,\n  DebugSignalGraphNode,\n  Events,\n  MessageBus,\n  PropType,\n} from '../../../../../../protocol';\nimport {\n  FlatNode,\n  Property,\n} from './signals-details/signals-value-tree/signals-value-tree.component';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {arrayifyProps, SignalDataSource} from './signal-data-source';\nimport {DataSource} from '@angular/cdk/collections';\nimport {MatTreeFlattener} from '@angular/material/tree';\nimport {MatIcon} from '@angular/material/icon';\nimport {ApplicationOperations} from '../../../application-operations/index';\nimport {FrameManager} from '../../../application-services/frame_manager';\nimport {SignalsDetailsComponent} from './signals-details/signals-details.component';\nimport {ButtonComponent} from '../../../shared/button/button.component';\nimport {SignalGraphManager} from '../signal-graph/signal-graph-manager';\n\n@Component({\n  templateUrl: './signals-tab.component.html',\n  selector: 'ng-signals-tab',\n  styleUrl: './signals-tab.component.scss',\n  imports: [SignalsDetailsComponent, MatIcon, ButtonComponent],\n})\nexport class SignalsTabComponent implements OnDestroy {\n  private readonly signalGraph = inject(SignalGraphManager);\n  private svgComponent = viewChild.required<ElementRef>('component');\n\n  signalsVisualizer?: SignalsGraphVisualizer;\n\n  protected readonly preselectedNodeId = input<string | null>(null);\n\n  // selected is automatically reset to null whenever `graph` changes\n  private selected = linkedSignal<DebugSignalGraph | null, string | null>({\n    source: this.signalGraph.graph,\n    computation: () => this.preselectedNodeId(),\n  });\n\n  private onResize = () => this.signalsVisualizer?.resize();\n  private observer = new ResizeObserver(this.onResize);\n\n  private readonly messageBus = inject<MessageBus<Events>>(MessageBus);\n  private readonly appOperations = inject(ApplicationOperations);\n  private readonly frameManager = inject(FrameManager);\n\n  readonly close = output<void>();\n\n  protected selectedNode = computed(() => {\n    const signalGraph = this.signalGraph.graph();\n    if (!signalGraph) {\n      return undefined;\n    }\n    const selected = this.selected();\n    if (!selected) {\n      return undefined;\n    }\n    return signalGraph.nodes.find((node) => node.id === selected);\n  });\n\n  protected dataSource = computed<DataSource<FlatNode> | null>(() => {\n    const selectedNode = this.selectedNode();\n    if (!selectedNode) {\n      return null;\n    }\n\n    return new SignalDataSource(\n      selectedNode.preview,\n      new MatTreeFlattener<Property, FlatNode, FlatNode>(\n        (node, level) => ({\n          expandable: node.descriptor.expandable,\n          prop: node,\n          level,\n        }),\n        (node) => node.level,\n        (node) => node.expandable,\n        (prop) => {\n          const descriptor = prop.descriptor;\n          if (descriptor.type === PropType.Object || descriptor.type === PropType.Array) {\n            return arrayifyProps(descriptor.value || {}, prop);\n          }\n          return;\n        },\n      ),\n      this.treeControl(),\n      {element: this.signalGraph.element()!, signalId: selectedNode.id},\n      this.messageBus,\n    );\n  });\n\n  protected readonly detailsVisible = signal(false);\n\n  protected treeControl = computed<FlatTreeControl<FlatNode>>(() => {\n    return new FlatTreeControl(\n      (node) => node.level,\n      (node) => node.expandable,\n    );\n  });\n\n  protected empty = computed(() => !(this.signalGraph.graph()?.nodes.length! > 0));\n\n  constructor() {\n    const renderGraph = () => {\n      const graph = this.signalGraph.graph();\n      if (graph) {\n        this.signalsVisualizer?.render(graph);\n      }\n    };\n    const setSelected = () => {\n      const selected = this.selected();\n      if (selected) {\n        this.signalsVisualizer?.setSelected(selected);\n      }\n    };\n\n    afterNextRender({\n      write: () => {\n        this.setUpSignalsVisualizer();\n        renderGraph();\n        setSelected();\n        this.observer.observe(this.svgComponent().nativeElement);\n      },\n    });\n\n    effect(renderGraph);\n    effect(setSelected);\n\n    effect(() => {\n      // Reset the visualizer when the element changes.\n      this.signalGraph.element();\n      this.signalsVisualizer?.reset();\n    });\n  }\n\n  setUpSignalsVisualizer() {\n    this.signalsVisualizer = new SignalsGraphVisualizer(this.svgComponent().nativeElement);\n    this.signalsVisualizer.onNodeClick((node) => {\n      this.selected.set(node.id);\n      this.detailsVisible.set(true);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.observer.disconnect();\n    this.signalsVisualizer?.cleanup();\n  }\n\n  gotoSource(node: DebugSignalGraphNode) {\n    const frame = this.frameManager.selectedFrame();\n    this.appOperations.inspectSignal(\n      {\n        element: this.signalGraph.element()!,\n        signalId: node.id,\n      },\n      frame!,\n    );\n  }\n}\n"]}