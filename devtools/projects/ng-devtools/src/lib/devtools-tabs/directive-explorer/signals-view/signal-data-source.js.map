{"version":3,"file":"signal-data-source.js","sourceRoot":"","sources":["signal-data-source.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {CollectionViewer, DataSource, SelectionChange} from '@angular/cdk/collections';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlattener} from '@angular/material/tree';\nimport {\n  Descriptor,\n  DirectivePosition,\n  Events,\n  MessageBus,\n  Properties,\n  SignalNodePosition,\n} from '../../../../../../protocol';\nimport {BehaviorSubject, merge, Observable, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {\n  FlatNode,\n  Property,\n} from './signals-details/signals-value-tree/signals-value-tree.component';\n\nexport const arrayifyProps = (\n  props: {[prop: string]: Descriptor} | Descriptor[],\n  parent: Property | null = null,\n): Property[] =>\n  Object.entries(props)\n    .map(([name, val]) => ({name, descriptor: val, parent}))\n    .sort((a, b) => {\n      const parsedA = parseInt(a.name, 10);\n      const parsedB = parseInt(b.name, 10);\n\n      if (isNaN(parsedA) || isNaN(parsedB)) {\n        return a.name > b.name ? 1 : -1;\n      }\n\n      return parsedA - parsedB;\n    });\n\nexport class SignalDataSource extends DataSource<FlatNode> {\n  private data = new BehaviorSubject<FlatNode[]>([]);\n  private expandedData = new BehaviorSubject<FlatNode[]>([]);\n  private readonly destroy = new Subject<void>();\n\n  constructor(\n    props: Descriptor,\n    private treeFlattener: MatTreeFlattener<Property, FlatNode>,\n    private treeControl: FlatTreeControl<FlatNode>,\n    private entityPosition: SignalNodePosition,\n    private messageBus: MessageBus<Events>,\n  ) {\n    super();\n    this.data.next(\n      this.treeFlattener.flattenNodes([\n        {\n          descriptor: props,\n          parent: null,\n          name: 'value',\n        },\n      ]),\n    );\n  }\n\n  override connect(collectionViewer: CollectionViewer): Observable<FlatNode[]> {\n    this.treeControl.expansionModel.changed\n      .pipe(takeUntil(this.destroy))\n      .subscribe((change: SelectionChange<FlatNode>) => {\n        for (const node of change.added) {\n          this.toggleNode(node, true);\n        }\n        for (const node of change.removed.reverse()) {\n          this.toggleNode(node, false);\n        }\n      });\n\n    const changes = [\n      collectionViewer.viewChange,\n      this.treeControl.expansionModel.changed,\n      this.data,\n    ];\n\n    merge<unknown[]>(...changes)\n      .pipe(takeUntil(this.destroy))\n      .subscribe(() => {\n        this.expandedData.next(\n          this.treeFlattener.expandFlattenedNodes(this.data.value, this.treeControl),\n        );\n      });\n\n    return this.expandedData.asObservable();\n  }\n\n  override disconnect(): void {\n    this.destroy.next();\n  }\n\n  private toggleNode(node: FlatNode, expand: boolean): void {\n    const index = this.data.value.indexOf(node);\n    // If we cannot find the current node, or the current node is not expandable\n    // or...if it's expandable but it does have a value, or we're collapsing\n    // we're not interested in fetching its children.\n    if (index < 0 || !node.expandable || node.prop.descriptor.value || !expand) {\n      return;\n    }\n\n    let parentPath: string[] = [];\n    let current: Property | null = node.prop;\n    while (current) {\n      parentPath.push(current.name);\n      current = current.parent;\n    }\n    if (parentPath.pop() !== 'value') {\n      throw new Error('expected parentPath to start with value');\n    }\n    parentPath = parentPath.reverse();\n\n    this.messageBus.emit('getSignalNestedProperties', [this.entityPosition, parentPath]);\n\n    this.messageBus.once(\n      'signalNestedProperties',\n      (_position: DirectivePosition, data: Properties, _path: string[]) => {\n        node.prop.descriptor.value = data.props;\n        this.treeControl.expand(node);\n        const props = arrayifyProps(data.props, node.prop);\n        const flatNodes = this.treeFlattener.flattenNodes(props);\n        flatNodes.forEach((f) => (f.level += node.level + 1));\n        this.data.value.splice(index + 1, 0, ...flatNodes);\n        this.data.next(this.data.value);\n      },\n    );\n  }\n}\n"]}