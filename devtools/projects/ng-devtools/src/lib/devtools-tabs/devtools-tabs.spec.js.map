{"version":3,"file":"devtools-tabs.spec.js","sourceRoot":"","sources":["devtools-tabs.spec.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Component, signal} from '@angular/core';\nimport {TestBed} from '@angular/core/testing';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatTooltip} from '@angular/material/tooltip';\nimport {Events, MessageBus} from '../../../../protocol';\nimport {Subject} from 'rxjs';\n\nimport {ApplicationEnvironment} from '../application-environment';\nimport {ThemeService} from '../application-services/theme_service';\n\nimport {DevToolsTabsComponent} from './devtools-tabs.component';\nimport {TabUpdate} from './tab-update/index';\nimport {DirectiveExplorerComponent} from './directive-explorer/directive-explorer.component';\nimport {FrameManager} from '../application-services/frame_manager';\nimport {SETTINGS_MOCK} from '../application-services/test-utils/settings_mock';\nimport {ThemeUi} from '../application-services/theme_types';\n\n@Component({\n  selector: 'ng-directive-explorer',\n  template: '',\n  imports: [MatTooltip, MatMenuModule],\n})\nexport class MockDirectiveExplorerComponent {}\n\ndescribe('DevtoolsTabsComponent', () => {\n  let messageBusMock: MessageBus<Events>;\n  let applicationEnvironmentMock: ApplicationEnvironment;\n  let comp: DevToolsTabsComponent;\n\n  beforeEach(async () => {\n    messageBusMock = jasmine.createSpyObj('messageBus', ['on', 'once', 'emit', 'destroy']);\n    applicationEnvironmentMock = jasmine.createSpyObj('applicationEnvironment', ['environment']);\n\n    await TestBed.configureTestingModule({\n      imports: [MatTooltip, MatMenuModule, DevToolsTabsComponent],\n      providers: [\n        TabUpdate,\n        SETTINGS_MOCK,\n        {provide: ThemeService, useFactory: () => ({currentTheme: new Subject<ThemeUi>()})},\n        {provide: MessageBus, useValue: messageBusMock},\n        {provide: ApplicationEnvironment, useValue: applicationEnvironmentMock},\n        {provide: FrameManager, useFactory: () => FrameManager.initialize(123)},\n      ],\n    })\n      .overrideComponent(DevToolsTabsComponent, {\n        remove: {imports: [DirectiveExplorerComponent]},\n        add: {imports: [MockDirectiveExplorerComponent]},\n      })\n      .compileComponents();\n\n    const fixture = TestBed.createComponent(DevToolsTabsComponent);\n    comp = fixture.componentInstance;\n  });\n\n  it('should create instance from class', () => {\n    expect(comp).toBeTruthy();\n  });\n\n  it('toggles inspector flag', () => {\n    expect(comp.inspectorRunning()).toBe(false);\n    comp.toggleInspectorState();\n    expect(comp.inspectorRunning()).toBe(true);\n    comp.toggleInspectorState();\n    expect(comp.inspectorRunning()).toBe(false);\n  });\n\n  it('emits inspector event', () => {\n    comp.toggleInspector();\n    expect(messageBusMock.emit).toHaveBeenCalledTimes(1);\n    expect(messageBusMock.emit).toHaveBeenCalledWith('inspectorStart');\n    comp.toggleInspector();\n    expect(messageBusMock.emit).toHaveBeenCalledTimes(3);\n    expect(messageBusMock.emit).toHaveBeenCalledWith('inspectorEnd');\n    expect(messageBusMock.emit).toHaveBeenCalledWith('removeHighlightOverlay');\n  });\n\n  it('should emit a selectedFrame when emitSelectedFrame is called', () => {\n    let contentScriptConnected: Function = () => {};\n\n    // mock message bus on method with jasmine fake call in order to pick out callback\n    // and call it with frame\n    (messageBusMock.on as any).and.callFake((topic: string, cb: Function) => {\n      if (topic === 'contentScriptConnected') {\n        contentScriptConnected = cb;\n      }\n    });\n\n    const frameId = 1;\n    expect(contentScriptConnected).toEqual(jasmine.any(Function));\n    contentScriptConnected(frameId, 'name', 'http://localhost:4200/url');\n    spyOn(comp.frameSelected, 'emit');\n    comp.emitSelectedFrame({\n      target: {\n        value: '1',\n      },\n    } as unknown as Event);\n\n    expect(comp.frameSelected.emit).toHaveBeenCalledWith(comp.frameManager.frames()[0]);\n  });\n});\n"]}