{"version":3,"file":"router-tree.component.spec.js","sourceRoot":"","sources":["router-tree.component.spec.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAmB,OAAO,EAAC,MAAM,uBAAuB,CAAC;AAEhE,OAAO,EAAC,mBAAmB,EAAC,MAAM,yBAAyB,CAAC;AAE5D,OAAO,EAAC,YAAY,EAAC,MAAM,0CAA0C,CAAC;AACtE,OAAO,EAAS,UAAU,EAAC,MAAM,yBAAyB,CAAC;AAC3D,OAAO,EAAC,qBAAqB,EAAC,MAAM,8BAA8B,CAAC;AACnE,OAAO,EAAC,0BAA0B,EAAC,MAAM,eAAe,CAAC;AAEzD,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,IAAI,UAA8B,CAAC;IACnC,IAAI,wBAAuD,CAAC;IAE5D,IAAI,SAA8B,CAAC;IACnC,IAAI,OAA8C,CAAC;IACnD,IAAI,YAA0B,CAAC;IAE/B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,wBAAwB,GAAG,OAAO,CAAC,YAAY,CAAwB,gBAAgB,EAAE;YACvF,sBAAsB;SACvB,CAAC,CAAC;QACH,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;QAChE,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;QAEvE,MAAM,OAAO,CAAC,sBAAsB,CAAC;YACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;YAC9B,SAAS,EAAE;gBACT,0BAA0B,EAAE;gBAC5B,EAAC,OAAO,EAAE,qBAAqB,EAAE,QAAQ,EAAE,wBAAwB,EAAC;gBACpE,EAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAC;gBAC3C,EAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,YAAY,EAAC;aAChD;SACF,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAEvB,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC;QACvD,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE;YACtC;gBACE,WAAW,EAAE,UAAU;gBACvB,MAAM,EAAE,GAAG;gBACX,UAAU,EAAE,EAAE;gBACd,OAAO,EAAE,KAAK;gBACd,QAAQ,EAAE,KAAK;gBACf,MAAM,EAAE,EAAE;gBACV,UAAU,EAAE,KAAK;aAClB;SACF,CAAC,CAAC;QACH,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;QAC1C,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;YAC7D,OAAO,CAAC,aAAa,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,eAAe,EAAE,GAAG,EAAE;YACvB,MAAM,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE;YACjE,SAAS,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;YAC5D,MAAM,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;YAC/E,MAAM,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,CAAC,oBAAoB,CACxE,kBAAkB,EAClB,OAAO,EACP,YAAY,CAAC,aAAa,EAAG,CAC9B,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;YAChE,SAAS,CAAC,mBAAmB,CAAC,eAAe,CAAC,CAAC;YAC/C,MAAM,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;YAC/E,MAAM,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,CAAC,oBAAoB,CACxE,eAAe,EACf,WAAW,EACX,YAAY,CAAC,aAAa,EAAG,CAC9B,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,GAAG,EAAE;YACxC,SAAS,CAAC,aAAa,CAAC;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,OAAO;iBACd;aACF,CAAC,CAAC;YACH,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,oBAAoB,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,gCAAgC,EAAE,GAAG,EAAE;QAC9C,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;YAC9D,OAAO,CAAC,aAAa,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6EAA6E,EAAE,GAAG,EAAE;YACrF,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;YAC9D,OAAO,CAAC,aAAa,EAAE,CAAC;YAExB,MAAM,cAAc,GAAG,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;YACnF,MAAM,CAAC,cAAc,CAAC,CAAC,UAAU,EAAE,CAAC;YACpC,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,SAAS,CAC1C,oHAAoH,CACrH,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ComponentFixture, TestBed} from '@angular/core/testing';\n\nimport {RouterTreeComponent} from './router-tree.component';\nimport SpyObj = jasmine.SpyObj;\nimport {FrameManager} from '../../application-services/frame_manager';\nimport {Events, MessageBus} from '../../../../../protocol';\nimport {ApplicationOperations} from '../../application-operations';\nimport {provideZoneChangeDetection} from '@angular/core';\n\ndescribe('RouterTreeComponent', () => {\n  let messageBus: MessageBus<Events>;\n  let applicationOperationsSpy: SpyObj<ApplicationOperations>;\n\n  let component: RouterTreeComponent;\n  let fixture: ComponentFixture<RouterTreeComponent>;\n  let frameManager: FrameManager;\n\n  beforeEach(async () => {\n    applicationOperationsSpy = jasmine.createSpyObj<ApplicationOperations>('_appOperations', [\n      'viewSourceFromRouter',\n    ]);\n    messageBus = jasmine.createSpyObj('MessageBus', ['on', 'emit']);\n    frameManager = jasmine.createSpyObj('FrameManager', ['selectedFrame']);\n\n    await TestBed.configureTestingModule({\n      imports: [RouterTreeComponent],\n      providers: [\n        provideZoneChangeDetection(),\n        {provide: ApplicationOperations, useValue: applicationOperationsSpy},\n        {provide: MessageBus, useValue: messageBus},\n        {provide: FrameManager, useValue: frameManager},\n      ],\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(RouterTreeComponent);\n    fixture.componentRef.setInput('routes', [\n      {\n        'component': 'test-cmp',\n        'path': '/',\n        'children': [],\n        'isAux': false,\n        'isLazy': false,\n        'data': [],\n        'isActive': false,\n      },\n    ]);\n    component = fixture.componentInstance;\n  });\n\n  describe('router tree apis supported', () => {\n    beforeEach(async () => {\n      fixture.componentRef.setInput('routerDebugApiSupport', true);\n      fixture.detectChanges();\n    });\n\n    it('should create', () => {\n      expect(component).toBeTruthy();\n    });\n\n    it('should call application operations viewSourceFromRouter', () => {\n      component.viewSourceFromRouter('routeActiveGuard', 'guard');\n      expect(applicationOperationsSpy.viewSourceFromRouter).toHaveBeenCalledTimes(1);\n      expect(applicationOperationsSpy.viewSourceFromRouter).toHaveBeenCalledWith(\n        'routeActiveGuard',\n        'guard',\n        frameManager.selectedFrame()!,\n      );\n    });\n\n    it('should call application operations viewComponentSource', () => {\n      component.viewComponentSource('HomeComponent');\n      expect(applicationOperationsSpy.viewSourceFromRouter).toHaveBeenCalledTimes(1);\n      expect(applicationOperationsSpy.viewSourceFromRouter).toHaveBeenCalledWith(\n        'HomeComponent',\n        'component',\n        frameManager.selectedFrame()!,\n      );\n    });\n\n    it('should call emit navigateRoute', () => {\n      component.navigateRoute({\n        data: {\n          path: '/home',\n        },\n      });\n      expect(messageBus.emit).toHaveBeenCalledTimes(1);\n      expect(messageBus.emit).toHaveBeenCalledWith('navigateRoute', ['/home']);\n    });\n  });\n\n  describe('router tree apis not supported', () => {\n    beforeEach(async () => {\n      fixture.componentRef.setInput('routerDebugApiSupport', false);\n      fixture.detectChanges();\n    });\n\n    it('should show unsupported version message when routerDebugApiSupport is false', () => {\n      fixture.componentRef.setInput('routerDebugApiSupport', false);\n      fixture.detectChanges();\n\n      const unsupportedMsg = fixture.nativeElement.querySelector('.unsupported-version');\n      expect(unsupportedMsg).toBeTruthy();\n      expect(unsupportedMsg.textContent).toContain(\n        'Router tree visualization is available for Angular applications using the latest Angular 20.2.x release and above.',\n      );\n    });\n  });\n});\n"]}