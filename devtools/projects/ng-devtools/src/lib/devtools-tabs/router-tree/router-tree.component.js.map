{"version":3,"file":"router-tree.component.js","sourceRoot":"","sources":["router-tree.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  DestroyRef,\n  ElementRef,\n  inject,\n  input,\n  linkedSignal,\n  signal,\n  viewChild,\n} from '@angular/core';\nimport {TreeVisualizerComponent} from '../../shared/tree-visualizer/tree-visualizer.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {ApplicationOperations} from '../../application-operations/index';\nimport {RouteDetailsRowComponent} from './route-details-row.component';\nimport {FrameManager} from '../../application-services/frame_manager';\nimport {Events, MessageBus, Route} from '../../../../../protocol';\nimport {\n  SvgD3Node,\n  SvgD3Link,\n  TreeVisualizerConfig,\n} from '../../shared/tree-visualizer/tree-visualizer';\nimport {\n  RouterTreeD3Node,\n  transformRoutesIntoVisTree,\n  RouterTreeNode,\n  findNodesByLabel,\n  RouterTreeVisualizer,\n} from './router-tree-fns';\nimport {ButtonComponent} from '../../shared/button/button.component';\nimport {SplitComponent} from '../../shared/split/split.component';\nimport {SplitAreaDirective} from '../../shared/split/splitArea.directive';\nimport {Debouncer} from '../../shared/utils/debouncer';\n\nconst SEARCH_DEBOUNCE = 250;\n\n@Component({\n  selector: 'ng-router-tree',\n  templateUrl: './router-tree.component.html',\n  styleUrls: ['./router-tree.component.scss'],\n  imports: [\n    TreeVisualizerComponent,\n    SplitComponent,\n    SplitAreaDirective,\n    MatIconModule,\n    RouteDetailsRowComponent,\n    ButtonComponent,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RouterTreeComponent {\n  private readonly searchInput = viewChild.required<ElementRef>('searchInput');\n  private readonly routerTree = viewChild.required<RouterTreeVisualizer>('routerTree');\n\n  private readonly messageBus = inject(MessageBus) as MessageBus<Events>;\n  private readonly appOperations = inject(ApplicationOperations);\n  private readonly frameManager = inject(FrameManager);\n\n  protected selectedRoute = signal<RouterTreeD3Node | null>(null);\n  protected routeData = computed<RouterTreeNode | undefined>(() => {\n    return this.selectedRoute()?.data;\n  });\n\n  routes = input.required<Route[]>();\n  routerDebugApiSupport = input<boolean>(false);\n\n  private readonly showFullPath = signal(false);\n  protected readonly d3RootNode = linkedSignal<RouterTreeNode | null>(() => {\n    const routes = this.routes();\n    if (routes.length) {\n      return transformRoutesIntoVisTree(routes[0], this.showFullPath());\n    }\n    return null;\n  });\n\n  private searchMatches: Set<RouterTreeNode> = new Set();\n\n  private readonly searchDebouncer = new Debouncer();\n\n  protected readonly searchRoutes = this.searchDebouncer.debounce((inputValue: string) => {\n    const d3RootNode = this.d3RootNode();\n    if (!d3RootNode) {\n      return;\n    }\n    this.searchMatches = findNodesByLabel(d3RootNode, inputValue.toLowerCase());\n    // Since `searchMatches` is used in the D3 node modifier, reset the root to trigger a re-render.\n    // Consider: Ideally, we could perform the search visual changes via direct DOM manipulations\n    // that won't require re-rendering the whole tree.\n    this.d3RootNode.set({...d3RootNode});\n  }, SEARCH_DEBOUNCE);\n\n  protected readonly routerTreeConfig: Partial<TreeVisualizerConfig<RouterTreeNode>> = {\n    nodeSeparation: () => 1,\n    d3NodeModifier: (n) => this.d3NodeModifier(n),\n    d3LinkModifier: (l) => this.d3LinkModifier(l),\n  };\n\n  constructor() {\n    inject(DestroyRef).onDestroy(() => {\n      this.searchDebouncer.cancel();\n    });\n  }\n\n  togglePathSettings(): void {\n    this.searchInput().nativeElement.value = '';\n    this.searchMatches = new Set();\n    this.showFullPath.update((v) => !v);\n  }\n\n  viewSourceFromRouter(className: string, type: string): void {\n    const data = this.selectedRoute()?.data;\n    // Check if the selected route is a lazy loaded route or a redirecting route.\n    // These routes have no component associated with them.\n    if (data?.isLazy || data?.isRedirect) {\n      // todo: replace with UI notification.\n      console.warn('Cannot view source for lazy loaded routes or redirecting routes.');\n      return;\n    }\n\n    this.appOperations.viewSourceFromRouter(className, type, this.frameManager.selectedFrame()!);\n  }\n\n  viewComponentSource(component: string): void {\n    const data = this.selectedRoute()?.data;\n    // Check if the selected route is a lazy loaded route or a redirecting route.\n    // These routes have no component associated with them.\n    if (data?.isLazy || data?.isRedirect) {\n      // todo: replace with UI notification.\n      console.warn('Cannot view source for lazy loaded routes or redirecting routes.');\n      return;\n    }\n\n    this.appOperations.viewSourceFromRouter(\n      component,\n      'component',\n      this.frameManager.selectedFrame()!,\n    );\n  }\n\n  navigateRoute(route: any): void {\n    this.messageBus.emit('navigateRoute', [route.data.path]);\n  }\n\n  onRouterTreeRender({initial}: {initial: boolean}) {\n    if (initial) {\n      this.routerTree().snapToRoot(0.6);\n    }\n  }\n\n  nodeClick(node: RouterTreeD3Node) {\n    this.selectedRoute.set(node);\n    this.routerTree().snapToNode(node.data, 0.7);\n  }\n\n  private d3NodeModifier(d3Node: SvgD3Node<RouterTreeNode>) {\n    d3Node.attr('class', (node: RouterTreeD3Node) => {\n      // Since `node-faded` could pre-exist, drop it if the node is a match.\n      const classNames = d3Node.attr('class').replace('node-faded', '');\n      const nodeClasses = [classNames];\n\n      if (node.data.isActive) {\n        nodeClasses.push('node-element');\n      }\n\n      if (this.searchMatches.has(node.data)) {\n        nodeClasses.push('node-search');\n      } else if (this.searchMatches.size) {\n        nodeClasses.push('node-faded');\n      }\n\n      return nodeClasses.join(' ');\n    });\n  }\n\n  private d3LinkModifier(d3Link: SvgD3Link<RouterTreeNode>) {\n    d3Link.attr('stroke-dasharray', (node: RouterTreeD3Node) => {\n      // Make edges to lazy loaded routes dashed\n      return node.data.isLazy ? '5,5' : 'none';\n    });\n  }\n}\n"]}