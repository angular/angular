{"version":3,"file":"router-tree-fns.js","sourceRoot":"","sources":["router-tree-fns.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAaH,MAAM,UAAU,aAAa,CAC3B,KAA6B,EAC7B,MAA0C,EAC1C,YAAqB;IAErB,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;AACxF,CAAC;AAED,MAAM,UAAU,QAAQ,CACtB,KAAY,EACZ,MAAyB,EACzB,YAAqB;IAErB,OAAO;QACL,GAAG,KAAK;QACR,KAAK,EAAE,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,YAAY,CAAC;QACjD,QAAQ,EAAE,EAAE;KACb,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,0BAA0B,CAAC,IAAW,EAAE,YAAqB;IAC3E,IAAI,QAAoC,CAAC;IACzC,MAAM,WAAW,GAA8C,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;IAE/E,OAAO,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,WAAW,CAAC,KAAK,EAAG,CAAC;QAC7C,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;QAExD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,QAAQ,GAAG,SAAS,CAAC;QACvB,CAAC;QAED,IAAI,MAAM,EAAE,CAAC;YACX,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;YACnB,KAAK,MAAM,KAAK,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACnC,WAAW,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAC,CAAC,CAAC;YACtD,CAAC;QACH,CAAC;IACH,CAAC;IAED,OAAO,QAAS,CAAC;AACnB,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,IAAoB,EAAE,YAAoB;IACzE,IAAI,OAAO,GAAwB,IAAI,GAAG,EAAE,CAAC;IAE7C,IAAI,CAAC,YAAY,EAAE,CAAC;QAClB,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,MAAM,QAAQ,GAAG,CAAC,IAAoB,EAAE,EAAE;QACxC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;YACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC;QAED,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC;QACH,CAAC;IACH,CAAC,CAAC;IACF,QAAQ,CAAC,IAAI,CAAC,CAAC;IAEf,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {TreeD3Node, TreeNode} from '../../shared/tree-visualizer/tree-visualizer';\nimport {Route} from '../../../../../protocol';\nimport {TreeVisualizerComponent} from '../../shared/tree-visualizer/tree-visualizer.component';\n\nexport interface RouterTreeNode extends TreeNode, Route {\n  children: RouterTreeNode[];\n}\n\nexport type RouterTreeVisualizer = TreeVisualizerComponent<RouterTreeNode>;\nexport type RouterTreeD3Node = TreeD3Node<RouterTreeNode>;\n\nexport function getRouteLabel(\n  route: Route | RouterTreeNode,\n  parent: Route | RouterTreeNode | undefined,\n  showFullPath: boolean,\n): string {\n  return (showFullPath ? route.path : route.path.replace(parent?.path || '', '')) || '';\n}\n\nexport function mapRoute(\n  route: Route,\n  parent: Route | undefined,\n  showFullPath: boolean,\n): RouterTreeNode {\n  return {\n    ...route,\n    label: getRouteLabel(route, parent, showFullPath),\n    children: [],\n  };\n}\n\nexport function transformRoutesIntoVisTree(root: Route, showFullPath: boolean): RouterTreeNode {\n  let rootNode: RouterTreeNode | undefined;\n  const routesQueue: {route: Route; parent?: RouterTreeNode}[] = [{route: root}];\n\n  while (routesQueue.length) {\n    const {route, parent} = routesQueue.shift()!;\n    const routeNode = mapRoute(route, parent, showFullPath);\n\n    if (!rootNode) {\n      rootNode = routeNode;\n    }\n\n    if (parent) {\n      parent.children.push(routeNode);\n    }\n\n    if (route.children) {\n      for (const child of route.children) {\n        routesQueue.push({route: child, parent: routeNode});\n      }\n    }\n  }\n\n  return rootNode!;\n}\n\nexport function findNodesByLabel(root: RouterTreeNode, searchString: string): Set<RouterTreeNode> {\n  let matches: Set<RouterTreeNode> = new Set();\n\n  if (!searchString) {\n    return matches;\n  }\n\n  const traverse = (node: RouterTreeNode) => {\n    if (node.label.toLowerCase().includes(searchString)) {\n      matches.add(node);\n    }\n\n    if (node.children) {\n      for (const child of node.children) {\n        traverse(child);\n      }\n    }\n  };\n  traverse(root);\n\n  return matches;\n}\n"]}