{"version":3,"file":"route-details-row.component.spec.js","sourceRoot":"","sources":["route-details-row.component.spec.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ComponentFixture, TestBed} from '@angular/core/testing';\nimport {By} from '@angular/platform-browser';\n\nimport {RouteDetailsRowComponent} from './route-details-row.component';\n\ndescribe('RouteDetailsRowComponent', () => {\n  let component: RouteDetailsRowComponent;\n  let fixture: ComponentFixture<RouteDetailsRowComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [RouteDetailsRowComponent],\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(RouteDetailsRowComponent);\n    component = fixture.componentInstance;\n\n    fixture.componentRef.setInput('label', 'Route Title');\n    fixture.componentRef.setInput('data', {value: 'Route Data'});\n    fixture.componentRef.setInput('dataKey', 'value');\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n\n  it('should render a label and text data', () => {\n    fixture.componentRef.setInput('data', {value: 'Route Data'});\n    fixture.componentRef.setInput('dataKey', 'value');\n    fixture.detectChanges();\n\n    const labelElement = fixture.debugElement.query(By.css('th'));\n    expect(labelElement.nativeElement.innerText).toEqual('Route Title');\n\n    const dataElements = fixture.debugElement.queryAll(By.css('td'));\n    expect(dataElements.length).toEqual(1);\n    expect(dataElements[0].nativeElement.innerText).toEqual('Route Data');\n  });\n\n  it('should render a label and flag data true', () => {\n    fixture.componentRef.setInput('type', 'flag');\n    fixture.componentRef.setInput('data', {isActive: true});\n    fixture.componentRef.setInput('dataKey', 'isActive');\n    fixture.detectChanges();\n\n    const labelElement = fixture.debugElement.query(By.css('th'));\n    expect(labelElement.nativeElement.innerText).toEqual('Route Title');\n\n    const dataElements = fixture.debugElement.queryAll(By.css('.tag-active'));\n    expect(dataElements.length).toEqual(1);\n    expect(dataElements[0].nativeElement.innerText).toEqual('true');\n  });\n\n  it('should render a label and flag data false', () => {\n    fixture.componentRef.setInput('type', 'flag');\n    fixture.componentRef.setInput('data', {isLazy: false, isRedirect: false});\n    fixture.componentRef.setInput('dataKey', 'isLazy');\n    fixture.detectChanges();\n\n    const labelElement = fixture.debugElement.query(By.css('th'));\n    expect(labelElement.nativeElement.innerText).toEqual('Route Title');\n\n    const dataElements = fixture.debugElement.queryAll(By.css('.tag-inactive'));\n    expect(dataElements.length).toEqual(1);\n    expect(dataElements[0].nativeElement.innerText).toEqual('false');\n  });\n\n  it('should render a label and chip data', () => {\n    fixture.componentRef.setInput('type', 'chip');\n    fixture.componentRef.setInput('data', {name: 'Component Name'});\n    fixture.componentRef.setInput('dataKey', 'name');\n    fixture.detectChanges();\n\n    const labelElement = fixture.debugElement.query(By.css('th'));\n    expect(labelElement.nativeElement.innerText).toEqual('Route Title');\n\n    const dataElements = fixture.debugElement.queryAll(By.css('button'));\n    expect(dataElements.length).toEqual(1);\n    expect(dataElements[0].nativeElement.innerText).toEqual('Component Name');\n  });\n\n  it('should render a label and chip data disabled', () => {\n    fixture.componentRef.setInput('type', 'chip');\n    fixture.componentRef.setInput('data', {name: 'Lazy Component Name'});\n    fixture.componentRef.setInput('dataKey', 'name');\n    fixture.detectChanges();\n\n    const labelElement = fixture.debugElement.query(By.css('th'));\n    expect(labelElement.nativeElement.innerText).toEqual('Route Title');\n\n    const dataElements = fixture.debugElement.queryAll(By.css('button'));\n    expect(dataElements.length).toEqual(1);\n    expect(dataElements[0].nativeElement.innerText).toEqual('Lazy Component Name');\n    expect(dataElements[0].nativeElement.disabled).toEqual(true);\n  });\n\n  it('should render a label and list data', () => {\n    fixture.componentRef.setInput('type', 'list');\n    fixture.componentRef.setInput('data', {providers: ['Guard 1', 'Guard 2']});\n    fixture.componentRef.setInput('dataKey', 'providers');\n    fixture.detectChanges();\n\n    const labelElement = fixture.debugElement.query(By.css('th'));\n    expect(labelElement.nativeElement.innerText).toEqual('Route Title');\n\n    const dataElements = fixture.debugElement.queryAll(By.css('button'));\n    expect(dataElements.length).toEqual(2);\n    expect(dataElements[0].nativeElement.innerText).toEqual('Guard 1');\n    expect(dataElements[1].nativeElement.innerText).toEqual('Guard 2');\n  });\n});\n"]}