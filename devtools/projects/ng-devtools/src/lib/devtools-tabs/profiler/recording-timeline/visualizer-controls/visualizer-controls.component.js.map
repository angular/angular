{"version":3,"file":"visualizer-controls.component.js","sourceRoot":"","sources":["visualizer-controls.component.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,OAAO,EAAC,uBAAuB,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAC,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAC,WAAW,EAAC,MAAM,iBAAiB,CAAC;AAG5C,OAAO,EAAC,iBAAiB,EAAC,MAAM,8BAA8B,CAAC;AASxD,IAAM,2BAA2B,GAAjC,MAAM,2BAA2B;IAAjC;QACc,WAAM,GAAG,KAAK,CAAC,QAAQ,EAAiB,CAAC;QACzC,uBAAkB,GAAG,KAAK,CAAC,QAAQ,EAAU,CAAC;QAE9C,sBAAiB,GAAG,KAAK,CAAC,QAAQ,EAAqB,CAAC;QACxD,oBAAe,GAAG,KAAK,CAAC,QAAQ,EAAW,CAAC;QAE5C,YAAO,GAAG,iBAAiB,CAAC;IAMjD,CAAC;IAJW,qBAAqB,CAAC,KAAa;QAC3C,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACrC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;CACF,CAAA;AAbY,2BAA2B;IAPvC,SAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,WAAW,EAAE,sCAAsC;QACnD,QAAQ,EAAE,sCAAsC;QAChD,OAAO,EAAE,CAAC,WAAW,CAAC;QACtB,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,2BAA2B,CAavC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ChangeDetectionStrategy, Component, input, model} from '@angular/core';\nimport {DecimalPipe} from '@angular/common';\n\nimport {ProfilerFrame} from '../../../../../../../protocol';\nimport {VisualizationMode} from '../shared/visualization-mode';\n\n@Component({\n  selector: 'ng-visualizer-controls',\n  templateUrl: './visualizer-controls.component.html',\n  styleUrl: './visualizer-controls.component.scss',\n  imports: [DecimalPipe],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VisualizerControlsComponent {\n  protected readonly record = input.required<ProfilerFrame>();\n  protected readonly estimatedFrameRate = input.required<number>();\n\n  protected readonly visualizationMode = model.required<VisualizationMode>();\n  protected readonly changeDetection = model.required<boolean>();\n\n  protected readonly VisMode = VisualizationMode;\n\n  protected onVisualizationChange(value: string) {\n    const selected = parseInt(value, 10);\n    this.visualizationMode.set(selected);\n  }\n}\n"]}