{"version":3,"file":"tree-map-visualizer.component.js","sourceRoot":"","sources":["tree-map-visualizer.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  afterNextRender,\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  effect,\n  ElementRef,\n  inject,\n  input,\n  OnDestroy,\n  viewChild,\n} from '@angular/core';\nimport {ProfilerFrame} from '../../../../../../../../protocol';\nimport {Subject, Subscription} from 'rxjs';\nimport {debounceTime} from 'rxjs/operators';\n\nimport {render} from 'webtreemap/build/treemap';\nimport {TreeMapFormatter, TreeMapNode} from '../../record-formatter/tree-map-formatter';\n\n@Component({\n  selector: 'ng-tree-map-visualizer',\n  templateUrl: './tree-map-visualizer.component.html',\n  styleUrls: ['./tree-map-visualizer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TreeMapVisualizerComponent implements OnDestroy {\n  private _formatter = new TreeMapFormatter();\n\n  readonly frame = input.required<ProfilerFrame>();\n\n  private resize$ = new Subject<void>();\n  private _throttledResizeSubscription!: Subscription;\n\n  private _resizeObserver: ResizeObserver = new ResizeObserver(() => this.resize$.next());\n  private readonly treeMapRecords = computed<TreeMapNode>(() => {\n    // first element in data is the Application node\n    return this._formatter.formatFrame(this.frame());\n  });\n\n  readonly tree = viewChild.required<ElementRef<HTMLElement>>('webTree');\n\n  constructor() {\n    effect(() => {\n      if (this.tree()) this._renderTree();\n    });\n\n    afterNextRender({\n      read: () => {\n        this._throttledResizeSubscription = this.resize$\n          .pipe(debounceTime(100))\n          .subscribe(() => this._renderTree());\n        this._resizeObserver.observe(this.tree().nativeElement);\n      },\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._throttledResizeSubscription.unsubscribe();\n    this._resizeObserver.unobserve(this.tree().nativeElement);\n  }\n\n  private _renderTree(): void {\n    this._removeTree();\n    this._createTree();\n  }\n\n  private _removeTree(): void {\n    Array.from(this.tree().nativeElement.children).forEach((child) => child.remove());\n  }\n\n  private _createTree(): void {\n    render(this.tree().nativeElement, this.treeMapRecords(), {\n      padding: [20, 5, 5, 5],\n      caption: (node) => `${node.id}: ${node.size.toFixed(3)} ms`,\n      showNode: () => true,\n    });\n  }\n}\n"]}