{"version":3,"file":"flamegraph-formatter.js","sourceRoot":"","sources":["flamegraph-formatter.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ElementProfile, ProfilerFrame} from '../../../../../../../../protocol';\nimport {ThemeUi} from '../../../../../application-services/theme_types';\n\nimport {RecordFormatter} from '../record-formatter';\n\nexport interface FlamegraphNode {\n  value: number;\n  color?: string;\n  children: FlamegraphNode[];\n  label: string;\n  instances: number;\n  original: ElementProfile;\n  changeDetected: boolean;\n}\n\nexport const ROOT_LEVEL_ELEMENT_LABEL = 'Entire application';\n\nexport class FlamegraphFormatter extends RecordFormatter<FlamegraphNode> {\n  override formatFrame(\n    frame: ProfilerFrame,\n    showChangeDetection?: boolean,\n    theme?: ThemeUi,\n  ): FlamegraphNode {\n    const result: FlamegraphNode = {\n      value: 0,\n      label: ROOT_LEVEL_ELEMENT_LABEL,\n      children: [],\n      instances: 1,\n      changeDetected: false,\n      original: {\n        children: [],\n        directives: [],\n        type: 'element',\n      },\n    };\n\n    if (showChangeDetection) {\n      result.color = theme === 'dark' ? CHANGE_DETECTION_COLOR_DARK : CHANGE_DETECTION_COLOR_LIGHT;\n    }\n\n    this.addFrame(result.children, frame.directives, showChangeDetection, theme);\n    return result;\n  }\n\n  override addFrame(\n    nodes: FlamegraphNode[],\n    elements: ElementProfile[],\n    showChangeDetection?: boolean,\n    theme?: ThemeUi,\n  ): number {\n    let timeSpent = 0;\n    elements.forEach((element) => {\n      // Possibly undefined because of\n      // the insertion on the backend.\n      if (!element) {\n        console.error('Unable to insert undefined element');\n        return;\n      }\n      const changeDetected = didRunChangeDetection(element);\n      const node: FlamegraphNode = {\n        value: super.getValue(element),\n        label: super.getLabel(element),\n        children: [],\n        instances: 1,\n        original: element,\n        changeDetected,\n      };\n      if (showChangeDetection) {\n        const CHANGE_DETECTION_COLOR =\n          theme === 'dark' ? CHANGE_DETECTION_COLOR_DARK : CHANGE_DETECTION_COLOR_LIGHT;\n        node.color = changeDetected ? CHANGE_DETECTION_COLOR : NO_CHANGE_DETECTION_COLOR;\n      }\n      timeSpent += this.addFrame(node.children, element.children, showChangeDetection, theme);\n      timeSpent += node.value;\n      nodes.push(node);\n    });\n    return timeSpent;\n  }\n}\n\n// Represent dynamic-purple-01\nconst CHANGE_DETECTION_COLOR_LIGHT = 'oklch(47.5% 0.26 295)';\nconst CHANGE_DETECTION_COLOR_DARK = 'oklch(76% 0.15 305)';\n\nconst NO_CHANGE_DETECTION_COLOR = 'transparent';\n\nconst didRunChangeDetection = (profile: ElementProfile) => {\n  const components = profile.directives.filter((d) => d.isComponent);\n  if (!components.length) {\n    return false;\n  }\n  return components.some((c) => c.changeDetection !== undefined);\n};\n"]}