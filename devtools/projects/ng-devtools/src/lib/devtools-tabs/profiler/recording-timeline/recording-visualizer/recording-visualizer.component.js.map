{"version":3,"file":"recording-visualizer.component.js","sourceRoot":"","sources":["recording-visualizer.component.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,OAAO,EAAC,uBAAuB,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAC,MAAM,eAAe,CAAC;AAChG,OAAO,EAAC,WAAW,EAAC,MAAM,iBAAiB,CAAC;AAI5C,OAAO,EAAC,iBAAiB,EAAC,MAAM,8BAA8B,CAAC;AAG/D,OAAO,EAAC,yBAAyB,EAAC,MAAM,iDAAiD,CAAC;AAC1F,OAAO,EAAC,2BAA2B,EAAC,MAAM,qDAAqD,CAAC;AAChG,OAAO,EAAC,0BAA0B,EAAC,MAAM,qDAAqD,CAAC;AAC/F,OAAO,EAAC,6BAA6B,EAAC,MAAM,yDAAyD,CAAC;AACtG,OAAO,EAAC,cAAc,EAAC,MAAM,0CAA0C,CAAC;AACxE,OAAO,EAAC,kBAAkB,EAAC,MAAM,8CAA8C,CAAC;AAiBzE,IAAM,4BAA4B,GAAlC,MAAM,4BAA4B;IAAlC;QACI,sBAAiB,GAAG,KAAK,CAAC,QAAQ,EAAqB,CAAC;QACxD,UAAK,GAAG,KAAK,CAAC,QAAQ,EAAiB,CAAC;QACxC,oBAAe,GAAG,KAAK,CAAC,QAAQ,EAAW,CAAC;QAE5C,0BAAqB,GAAG,iBAAiB,CAAC;QAClC,iBAAY,GAAG,YAAY,CAA0C;YACpF,MAAM,EAAE,IAAI,CAAC,iBAAiB;YAC9B,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI;SACxB,CAAC,CAAC;QAEM,kBAAa,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,KAAK,IAAI,IAAI,CAAC,CAAC;QACnE,uBAAkB,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,kBAAkB,IAAI,EAAE,CAAC,CAAC;QACnF,oBAAe,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,eAAe,IAAI,EAAE,CAAC,CAAC;IAKxF,CAAC;IAHC,UAAU,CAAC,QAAuB;QAChC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;CACF,CAAA;AAlBY,4BAA4B;IAfxC,SAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,WAAW,EAAE,uCAAuC;QACpD,SAAS,EAAE,CAAC,uCAAuC,CAAC;QACpD,OAAO,EAAE;YACP,cAAc;YACd,kBAAkB;YAClB,6BAA6B;YAC7B,0BAA0B;YAC1B,2BAA2B;YAC3B,yBAAyB;YACzB,WAAW;SACZ;QACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,4BAA4B,CAkBxC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ChangeDetectionStrategy, Component, computed, input, linkedSignal} from '@angular/core';\nimport {DecimalPipe} from '@angular/common';\n\nimport {ProfilerFrame} from '../../../../../../../protocol';\n\nimport {VisualizationMode} from '../shared/visualization-mode';\nimport {SelectedEntry} from './recording-visualizer-types';\n\nimport {ExecutionDetailsComponent} from './execution-details/execution-details.component';\nimport {BargraphVisualizerComponent} from './bargraph-visualizer/bargraph-visualizer.component';\nimport {TreeMapVisualizerComponent} from './tree-map-visualizer/tree-map-visualizer.component';\nimport {FlamegraphVisualizerComponent} from './flamegraph-visualizer/flamegraph-visualizer.component';\nimport {SplitComponent} from '../../../../shared/split/split.component';\nimport {SplitAreaDirective} from '../../../../shared/split/splitArea.directive';\n\n@Component({\n  selector: 'ng-recording-visualizer',\n  templateUrl: './recording-visualizer.component.html',\n  styleUrls: ['./recording-visualizer.component.scss'],\n  imports: [\n    SplitComponent,\n    SplitAreaDirective,\n    FlamegraphVisualizerComponent,\n    TreeMapVisualizerComponent,\n    BargraphVisualizerComponent,\n    ExecutionDetailsComponent,\n    DecimalPipe,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RecordingVisualizerComponent {\n  readonly visualizationMode = input.required<VisualizationMode>();\n  readonly frame = input.required<ProfilerFrame>();\n  readonly changeDetection = input.required<boolean>();\n\n  readonly cmpVisualizationModes = VisualizationMode;\n  private readonly selectedNode = linkedSignal<VisualizationMode, SelectedEntry | null>({\n    source: this.visualizationMode,\n    computation: () => null,\n  });\n\n  readonly selectedEntry = computed(() => this.selectedNode()?.entry ?? null);\n  readonly selectedDirectives = computed(() => this.selectedNode()?.selectedDirectives ?? []);\n  readonly parentHierarchy = computed(() => this.selectedNode()?.parentHierarchy ?? []);\n\n  selectNode(selected: SelectedEntry): void {\n    this.selectedNode.set(selected);\n  }\n}\n"]}