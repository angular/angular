{"version":3,"file":"profile-formatter.js","sourceRoot":"","sources":["profile-formatter.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAKH,MAAM,MAAM,GAAG,+BAA+B,CAAC;AAE/C,MAAM,YAAY,GAAG,CAAC,UAAkB,EAAE,EAAE;IAC1C,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACpC,MAAM,MAAM,GAAa,EAAE,CAAC;IAC5B,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;IACvB,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC;QAChB,GAAG,EAAE,CAAC;QACN,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,oBAAoB,EAAE,CAAC;YACnE,SAAS;QACX,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1B,CAAC;IACD,OAAO,MAAM;SACV,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;SACpB,OAAO,EAAE;SACT,IAAI,CAAC,GAAG,CAAC,CAAC;AACf,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,KAAyB,EAAE,EAAE;IAClE,MAAM,SAAS,GAAwB,EAAE,CAAC;IAC1C,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QACrB,MAAM,EAAC,eAAe,EAAC,GAAG,IAAI,CAAC;QAC/B,IAAI,eAAe,EAAE,CAAC;YACpB,SAAS,CAAC,IAAI,CAAC;gBACb,SAAS,EAAE,IAAI,CAAC,IAAI;gBACpB,MAAM,EAAE,SAAS;gBACjB,KAAK,EAAE,UAAU,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;aAC9C,CAAC,CAAC;QACL,CAAC;QACD,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,gBAAgB,CAAC,EAAE,EAAE;YACjE,SAAS,CAAC,IAAI,CAAC;gBACb,SAAS,EAAE,IAAI,CAAC,IAAI;gBACpB,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;aACpC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,aAAa,CAAC,EAAE,EAAE;YAC5D,SAAS,CAAC,IAAI,CAAC;gBACb,SAAS,EAAE,IAAI,CAAC,IAAI;gBACpB,MAAM,EAAE,YAAY,CAAC,GAAG,CAAC;gBACzB,KAAK,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {DirectiveProfile} from '../../../../../../../../protocol';\nimport {SelectedDirective} from '../recording-visualizer-types';\n\nconst ignore = /^([A-Z]|listener|\\d|listener)/;\n\nconst formatOutput = (outputName: string) => {\n  const parts = outputName.split('_');\n  const output: string[] = [];\n  let idx = parts.length;\n  while (idx >= 0) {\n    idx--;\n    if (ignore.test(parts[idx]) && parts[idx] !== 'HostBindingHandler') {\n      continue;\n    }\n    output.push(parts[idx]);\n  }\n  return output\n    .filter((el) => !!el)\n    .reverse()\n    .join('-');\n};\n\nexport const formatDirectiveProfile = (nodes: DirectiveProfile[]) => {\n  const graphData: SelectedDirective[] = [];\n  nodes.forEach((node) => {\n    const {changeDetection} = node;\n    if (changeDetection) {\n      graphData.push({\n        directive: node.name,\n        method: 'changes',\n        value: parseFloat(changeDetection.toFixed(2)),\n      });\n    }\n    Object.entries(node.lifecycle).forEach(([key, lifeCycleProfile]) => {\n      graphData.push({\n        directive: node.name,\n        method: key,\n        value: +lifeCycleProfile.toFixed(2),\n      });\n    });\n    Object.entries(node.outputs).forEach(([key, outputProfile]) => {\n      graphData.push({\n        directive: node.name,\n        method: formatOutput(key),\n        value: +outputProfile.toFixed(2),\n      });\n    });\n  });\n  return graphData;\n};\n"]}