{"version":3,"file":"file-api-service.js","sourceRoot":"","sources":["file-api-service.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,OAAO,EAAC,UAAU,EAAC,MAAM,eAAe,CAAC;AACzC,OAAO,EAAC,OAAO,EAAC,MAAM,MAAM,CAAC;AAKtB,IAAM,cAAc,GAApB,MAAM,cAAc;IAApB;QACL,iBAAY,GAAiB,IAAI,OAAO,EAAE,CAAC;IAyB7C,CAAC;IAvBC,iBAAiB,CAAC,WAAkB;QAClC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,EAAE;YACxB,IAAI,CAAC;gBACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,KAAK,CAAC,MAAc,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACX,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;YACrC,CAAC;YACA,WAAW,CAAC,MAAc,CAAC,KAAK,GAAG,EAAE,CAAC;QACzC,CAAC,CAAC;QACF,MAAM,CAAC,UAAU,CAAE,WAAW,CAAC,MAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,gBAAgB,CAAC,MAAc;QAC7B,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACjD,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,sBAAsB;QAC/E,YAAY,CAAC,QAAQ,GAAG,sBAAsB,SAAS,OAAO,CAAC;QAC/D,YAAY,CAAC,IAAI,GAAG,GAAG,CAAC,eAAe,CACrC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAC,IAAI,EAAE,kBAAkB,EAAC,CAAC,CAC/D,CAAC;QACF,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,UAAU,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3D,CAAC;CACF,CAAA;AA1BY,cAAc;IAH1B,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CA0B1B","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FileApiService {\n  uploadedData: Subject<any> = new Subject();\n\n  publishFileUpload(parentEvent: Event): void {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      try {\n        this.uploadedData.next(JSON.parse((event.target as any).result));\n      } catch (e) {\n        this.uploadedData.next({error: e});\n      }\n      (parentEvent.target as any).value = '';\n    };\n    reader.readAsText((parentEvent.target as any).files[0]);\n  }\n\n  saveObjectAsJSON(object: object): void {\n    const downloadLink = document.createElement('a');\n    const isoString = new Date().toISOString().slice(0, -5); // remove milliseconds\n    downloadLink.download = `NgDevTools-Profile-${isoString}.json`;\n    downloadLink.href = URL.createObjectURL(\n      new Blob([JSON.stringify(object)], {type: 'application/json'}),\n    );\n    downloadLink.click();\n    setTimeout(() => URL.revokeObjectURL(downloadLink.href));\n  }\n}\n"]}