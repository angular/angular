{"version":3,"file":"profiler.component.js","sourceRoot":"","sources":["profiler.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ChangeDetectionStrategy, Component, inject, signal} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatIcon} from '@angular/material/icon';\nimport {MatTooltip} from '@angular/material/tooltip';\nimport {MatProgressBar} from '@angular/material/progress-bar';\nimport {Events, MessageBus, ProfilerFrame} from '../../../../../protocol';\nimport {Subject} from 'rxjs';\n\nimport {FileApiService} from './file-api-service';\nimport {ProfilerImportDialogComponent} from './profiler-import-dialog/profiler-import-dialog.component';\nimport {RecordingTimelineComponent} from './recording-timeline/recording-timeline.component';\nimport {ButtonComponent} from '../../shared/button/button.component';\n\ntype State = 'idle' | 'recording' | 'visualizing';\n\nconst SUPPORTED_VERSIONS = [1];\nconst PROFILER_VERSION = 1;\n\n@Component({\n  selector: 'ng-profiler',\n  templateUrl: './profiler.component.html',\n  styleUrls: ['./profiler.component.scss'],\n  imports: [MatTooltip, MatIcon, RecordingTimelineComponent, ButtonComponent, MatProgressBar],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProfilerComponent {\n  readonly state = signal<State>('idle');\n  stream = new Subject<ProfilerFrame[]>();\n\n  // We collect this buffer so we can have it available for export.\n  private _buffer: ProfilerFrame[] = [];\n\n  private _fileApiService = inject(FileApiService);\n  private _messageBus = inject<MessageBus<Events>>(MessageBus);\n  public dialog = inject(MatDialog);\n\n  constructor() {\n    this._fileApiService.uploadedData.subscribe((importedFile) => {\n      if (importedFile.error) {\n        console.error('Could not process uploaded file');\n        console.error(importedFile.error);\n        this.dialog.open(ProfilerImportDialogComponent, {\n          width: '600px',\n          data: {status: 'ERROR', errorMessage: importedFile.error},\n        });\n\n        return;\n      }\n\n      if (!SUPPORTED_VERSIONS.includes(importedFile.version)) {\n        const processDataDialog = this.dialog.open(ProfilerImportDialogComponent, {\n          width: '600px',\n          data: {\n            importedVersion: importedFile.version,\n            profilerVersion: PROFILER_VERSION,\n            status: 'INVALID_VERSION',\n          },\n        });\n\n        processDataDialog.afterClosed().subscribe((result) => {\n          if (result) {\n            this.state.set('visualizing');\n            this._buffer = importedFile.buffer;\n            setTimeout(() => this.stream.next(importedFile.buffer));\n          }\n        });\n      } else {\n        this.state.set('visualizing');\n        this._buffer = importedFile.buffer;\n        setTimeout(() => this.stream.next(importedFile.buffer));\n      }\n    });\n\n    this._messageBus.on('profilerResults', (remainingRecords) => {\n      if (remainingRecords.duration > 0 && remainingRecords.source) {\n        this.stream.next([remainingRecords]);\n        this._buffer.push(remainingRecords);\n      }\n    });\n\n    this._messageBus.on('sendProfilerChunk', (chunkOfRecords: ProfilerFrame) => {\n      this.stream.next([chunkOfRecords]);\n      this._buffer.push(chunkOfRecords);\n    });\n  }\n\n  startRecording(): void {\n    this.state.set('recording');\n    this._messageBus.emit('startProfiling');\n  }\n\n  stopRecording(): void {\n    this.state.set('visualizing');\n    this._messageBus.emit('stopProfiling');\n    this.stream.complete();\n  }\n\n  exportProfilerResults(): void {\n    const fileToExport = {\n      version: PROFILER_VERSION,\n      buffer: this._buffer,\n    };\n    this._fileApiService.saveObjectAsJSON(fileToExport);\n  }\n\n  importProfilerResults(event: Event): void {\n    this._fileApiService.publishFileUpload(event);\n  }\n\n  discardRecording(): void {\n    this.stream = new Subject<ProfilerFrame[]>();\n    this.state.set('idle');\n    this._buffer = [];\n  }\n}\n"]}