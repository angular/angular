{"version":3,"file":"frame_manager.js","sourceRoot":"","sources":["frame_manager.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n/// <reference types=\"chrome\"/>\n\nimport {Injectable, inject, signal, computed} from '@angular/core';\nimport {Events, MessageBus} from '../../../../protocol';\n\nimport {Frame, TOP_LEVEL_FRAME_ID} from '../application-environment';\n\n@Injectable()\nexport class FrameManager {\n  private _selectedFrameId = signal<number | null>(null);\n  private _frames = signal(new Map<number, Frame>());\n  private _inspectedWindowTabId: number | null = null;\n  private _frameUrlToFrameIds = new Map<string, Set<number>>();\n  private _messageBus = inject<MessageBus<Events>>(MessageBus);\n\n  readonly frames = computed(() => Array.from(this._frames().values()));\n\n  readonly selectedFrame = computed(() => {\n    const selectedFrameId = this._selectedFrameId();\n    if (selectedFrameId === null) {\n      return null;\n    }\n\n    return this._frames().get(selectedFrameId) ?? null;\n  });\n\n  readonly topLevelFrameIsActive = computed(() => {\n    return this._selectedFrameId() === TOP_LEVEL_FRAME_ID;\n  });\n\n  readonly activeFrameHasUniqueUrl = computed(() => {\n    return this.frameHasUniqueUrl(this.selectedFrame());\n  });\n\n  static initialize(inspectedWindowTabIdTestOnly?: number | null) {\n    const manager = new FrameManager();\n    manager.initialize(inspectedWindowTabIdTestOnly);\n    return manager;\n  }\n\n  private initialize(inspectedWindowTabIdTestOnly?: number | null): void {\n    if (inspectedWindowTabIdTestOnly === undefined) {\n      this._inspectedWindowTabId = globalThis.chrome.devtools.inspectedWindow.tabId;\n    } else {\n      this._inspectedWindowTabId = inspectedWindowTabIdTestOnly;\n    }\n\n    this._messageBus.on('frameConnected', (frameId: number) => {\n      if (this._frames().has(frameId)) {\n        this._selectedFrameId.set(frameId);\n      }\n    });\n\n    this._messageBus.on('contentScriptConnected', (frameId: number, name: string, url: string) => {\n      // fragments are not considered when doing URL matching on a page\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=841429\n      const urlWithoutHash = new URL(url);\n      urlWithoutHash.hash = '';\n\n      this.addFrame({name, id: frameId, url: urlWithoutHash});\n\n      if (this.frames().length === 1) {\n        this.inspectFrame(this._frames().get(frameId)!);\n      }\n    });\n\n    this._messageBus.on('contentScriptDisconnected', (frameId: number) => {\n      const frame = this._frames().get(frameId);\n      if (!frame) {\n        return;\n      }\n\n      this.removeFrame(frame);\n\n      // Defensive check. This case should never happen, since we're always connected to at least\n      // the top level frame.\n      if (this.frames().length === 0) {\n        this._selectedFrameId.set(null);\n        console.error('Angular DevTools is not connected to any frames.');\n        return;\n      }\n\n      const selectedFrameId = this._selectedFrameId();\n      if (frameId === selectedFrameId) {\n        this._selectedFrameId.set(TOP_LEVEL_FRAME_ID);\n        this.inspectFrame(this._frames().get(TOP_LEVEL_FRAME_ID)!);\n        return;\n      }\n    });\n  }\n\n  isSelectedFrame(frame: Frame): boolean {\n    return this._selectedFrameId() === frame.id;\n  }\n\n  inspectFrame(frame: Frame): void {\n    if (this._inspectedWindowTabId === null) {\n      return;\n    }\n\n    if (!this._frames().has(frame.id)) {\n      throw new Error('Attempted to inspect a frame that is not connected to Angular DevTools.');\n    }\n\n    this._selectedFrameId.set(null);\n    this._messageBus.emit('enableFrameConnection', [frame.id, this._inspectedWindowTabId]);\n  }\n\n  private frameHasUniqueUrl(frame: Frame | null): boolean {\n    if (frame === null) {\n      return false;\n    }\n    const frameUrl = frame.url.toString();\n    const frameIds = this._frameUrlToFrameIds.get(frameUrl) ?? new Set<number>();\n    return frameIds.size === 1;\n  }\n\n  private addFrame(frame: Frame): void {\n    this._frames.update((frames) => {\n      frames.set(frame.id, frame);\n      const frameUrl = frame.url.toString();\n      const frameIdSet = this._frameUrlToFrameIds.get(frameUrl) ?? new Set<number>();\n      frameIdSet.add(frame.id);\n      this._frameUrlToFrameIds.set(frameUrl, frameIdSet);\n      return new Map(frames);\n    });\n  }\n\n  private removeFrame(frame: Frame): void {\n    const frameId = frame.id;\n    const frameUrl = frame.url.toString();\n    const urlFrameIds = this._frameUrlToFrameIds.get(frameUrl) ?? new Set<number>();\n    urlFrameIds.delete(frameId);\n    if (urlFrameIds.size === 0) {\n      this._frameUrlToFrameIds.delete(frameUrl);\n    }\n    this._frames.update((frames) => {\n      frames.delete(frameId);\n      return new Map(frames);\n    });\n  }\n}\n"]}