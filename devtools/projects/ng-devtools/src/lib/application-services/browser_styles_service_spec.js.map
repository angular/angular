{"version":3,"file":"browser_styles_service_spec.js","sourceRoot":"","sources":["browser_styles_service_spec.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAC,OAAO,EAAC,MAAM,uBAAuB,CAAC;AAC9C,OAAO,EAAC,QAAQ,EAAC,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAC,QAAQ,EAAC,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAU,oBAAoB,EAAC,MAAM,0BAA0B,CAAC;AAEvE,SAAS,sCAAsC,CAAC,IAAuB;IACrE,OAAO,CAAC,sBAAsB,CAAC;QAC7B,SAAS,EAAE;YACT;gBACE,OAAO,EAAE,QAAQ;gBACjB,QAAQ,EAAE,IAAI;aACf;SACF;KACF,CAAC,CAAC;AACL,CAAC;AAED,SAAS,6BAA6B,CAAC,OAAgB;IACrD,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAErC,iCAAiC;IACjC,OAAO;QACL,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;QACtD,aAAa,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,uBAAuB,OAAO,QAAQ,CAAC;KAChF,CAAC;AACJ,CAAC;AAED,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,EAAE,CAAC,sDAAsD,EAAE,GAAG,EAAE;QAC9D,sCAAsC,CAAC;YACrC,KAAK,EAAE,IAAI;SACZ,CAAC,CAAC;QAEH,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;QACrD,OAAO,CAAC,yBAAyB,EAAE,CAAC;QAEpC,MAAM,EAAC,QAAQ,EAAE,aAAa,EAAC,GAAG,6BAA6B,CAAC,QAAQ,CAAC,CAAC;QAE1E,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC5B,MAAM,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE,GAAG,EAAE;QAC/D,sCAAsC,CAAC;YACrC,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;QAEH,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;QACrD,OAAO,CAAC,yBAAyB,EAAE,CAAC;QAEpC,MAAM,EAAC,QAAQ,EAAE,aAAa,EAAC,GAAG,6BAA6B,CAAC,SAAS,CAAC,CAAC;QAE3E,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC5B,MAAM,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,GAAG,EAAE;QACtE,sCAAsC,CAAC;YACrC,MAAM,EAAE,IAAI;SACb,CAAC,CAAC;QAEH,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;QACrD,OAAO,CAAC,yBAAyB,EAAE,CAAC;QAEpC,MAAM,EAAC,QAAQ,EAAE,aAAa,EAAC,GAAG,6BAA6B,CAAC,QAAQ,CAAC,CAAC;QAE1E,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC5B,MAAM,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE,CAAC;IACnC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {TestBed} from '@angular/core/testing';\nimport {DOCUMENT} from '@angular/common';\nimport {Platform} from '@angular/cdk/platform';\nimport {Browser, BrowserStylesService} from './browser_styles_service';\n\nfunction configureTestingModuleWithPlatformMock(mock: Partial<Platform>) {\n  TestBed.configureTestingModule({\n    providers: [\n      {\n        provide: Platform,\n        useValue: mock,\n      },\n    ],\n  });\n}\n\nfunction checkForBrowserSpecificStyles(browser: Browser) {\n  const doc = TestBed.inject(DOCUMENT);\n\n  // Keep in sync with the service.\n  return {\n    hasClass: doc.body.classList.contains(browser + '-ui'),\n    hasStylesheet: !!doc.head.querySelector(`link[href=\"./styles/${browser}.css\"]`),\n  };\n}\n\ndescribe('BrowserStylesService', () => {\n  it('should initialize browser-specific styles for Chrome', () => {\n    configureTestingModuleWithPlatformMock({\n      BLINK: true,\n    });\n\n    const service = TestBed.inject(BrowserStylesService);\n    service.initBrowserSpecificStyles();\n\n    const {hasClass, hasStylesheet} = checkForBrowserSpecificStyles('chrome');\n\n    expect(hasClass).toBeTrue();\n    expect(hasStylesheet).toBeTrue();\n  });\n\n  it('should initialize browser-specific styles for Firefox', () => {\n    configureTestingModuleWithPlatformMock({\n      FIREFOX: true,\n    });\n\n    const service = TestBed.inject(BrowserStylesService);\n    service.initBrowserSpecificStyles();\n\n    const {hasClass, hasStylesheet} = checkForBrowserSpecificStyles('firefox');\n\n    expect(hasClass).toBeTrue();\n    expect(hasStylesheet).toBeTrue();\n  });\n\n  it('should default to Chrome UI, if the browser is not supported', () => {\n    configureTestingModuleWithPlatformMock({\n      WEBKIT: true,\n    });\n\n    const service = TestBed.inject(BrowserStylesService);\n    service.initBrowserSpecificStyles();\n\n    const {hasClass, hasStylesheet} = checkForBrowserSpecificStyles('chrome');\n\n    expect(hasClass).toBeTrue();\n    expect(hasStylesheet).toBeTrue();\n  });\n});\n"]}