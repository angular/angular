{"version":3,"file":"theme_service.js","sourceRoot":"","sources":["theme_service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  ApplicationRef,\n  computed,\n  effect,\n  inject,\n  Injectable,\n  RendererFactory2,\n  signal,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {WINDOW} from '../application-providers/window_provider';\nimport {Settings} from './settings';\nimport {ThemeUi} from './theme_types';\n\n// Keep class names in sync with _theme.scss\nconst DARK_THEME_CLASS = 'dark-theme';\nconst LIGHT_THEME_CLASS = 'light-theme';\n\n@Injectable({providedIn: 'root'})\nexport class ThemeService {\n  private readonly win = inject(WINDOW);\n  private readonly doc = inject(DOCUMENT);\n  private readonly settings = inject(Settings);\n  private readonly appRef = inject(ApplicationRef);\n  private readonly rendererFactory = inject(RendererFactory2);\n  private readonly renderer = this.rendererFactory.createRenderer(null, null);\n\n  private readonly systemTheme = signal<ThemeUi>(this.systemPrefersDarkMode ? 'dark' : 'light');\n\n  private matchMediaUnlisten?: () => void;\n\n  currentTheme = computed<ThemeUi>(() => {\n    const theme = this.settings.theme();\n    if (theme === 'system') {\n      return this.systemTheme();\n    }\n    return theme;\n  });\n\n  constructor() {\n    effect(() => {\n      const theme = this.currentTheme();\n      this.updateThemeClass(theme);\n    });\n  }\n\n  private get systemPrefersDarkMode(): boolean {\n    return this.win.matchMedia && this.win.matchMedia('(prefers-color-scheme: dark)').matches;\n  }\n\n  toggleDarkMode(isDark: boolean): void {\n    const theme: ThemeUi = isDark ? 'dark' : 'light';\n    this.settings.theme.set(theme);\n  }\n\n  initializeThemeWatcher(): void {\n    this.matchMediaUnlisten?.();\n\n    const matchMedia = this.win.matchMedia('(prefers-color-scheme: dark)');\n    const matchMediaCb = () => {\n      // We don't need to keep track of the preferred theme if `theme` != 'system'.\n      // On the contrary, we wouldn't like to trigger `currentTheme` recalc since it's redundant.\n      if (this.settings.theme() === 'system') {\n        const prefers: ThemeUi = this.systemPrefersDarkMode ? 'dark' : 'light';\n        this.systemTheme.set(prefers);\n      }\n    };\n\n    matchMedia.addEventListener('change', matchMediaCb);\n    this.matchMediaUnlisten = () => matchMedia.removeEventListener('change', matchMediaCb);\n\n    this.appRef.onDestroy(() => this.matchMediaUnlisten?.());\n  }\n\n  private updateThemeClass(theme: ThemeUi) {\n    const htmlEl = this.doc.documentElement;\n    this.renderer.removeClass(htmlEl, DARK_THEME_CLASS);\n    this.renderer.removeClass(htmlEl, LIGHT_THEME_CLASS);\n\n    const themeClass = theme === 'dark' ? DARK_THEME_CLASS : LIGHT_THEME_CLASS;\n    this.renderer.addClass(this.doc.documentElement, themeClass);\n  }\n}\n"]}