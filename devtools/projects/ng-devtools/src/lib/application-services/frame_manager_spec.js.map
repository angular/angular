{"version":3,"file":"frame_manager_spec.js","sourceRoot":"","sources":["frame_manager_spec.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Events, MessageBus} from '../../../../protocol';\nimport {FrameManager} from './frame_manager';\nimport {TestBed} from '@angular/core/testing';\nimport {Frame} from '../application-environment';\n\ndescribe('FrameManager', () => {\n  let frameManager: FrameManager;\n  let messageBus: MessageBus<Events>;\n  let topicToCallback: {[topic: string]: Function | null};\n\n  function getFrameFromFrameManager(frameId: number): Frame | undefined {\n    return frameManager.frames().find((f: Frame) => f.id === frameId);\n  }\n\n  function frameConnected(frameId: number): void {\n    topicToCallback['frameConnected']!(frameId);\n  }\n\n  function contentScriptConnected(frameId: number, name: string, url: string): void {\n    topicToCallback['contentScriptConnected']!(frameId, name, url);\n  }\n\n  function contentScriptDisconnected(frameId: number): void {\n    topicToCallback['contentScriptDisconnected']!(frameId);\n  }\n\n  const topLevelFrameId = 0;\n  const otherFrameId = 1;\n  const tabId = 123;\n\n  beforeEach(() => {\n    topicToCallback = {\n      frameConnected: null,\n      contentScriptConnected: null,\n      contentScriptDisconnected: null,\n    };\n    messageBus = jasmine.createSpyObj('MessageBus', ['on', 'emit']);\n\n    (messageBus.on as any).and.callFake((topic: string, cb: Function) => {\n      topicToCallback[topic] = cb;\n    });\n\n    (messageBus.emit as any).and.callFake((topic: string, args: any[]) => {\n      if (topic === 'enableFrameConnection') {\n        frameConnected(args[0]);\n      }\n    });\n\n    const testModule = TestBed.configureTestingModule({\n      providers: [\n        {provide: MessageBus, useValue: messageBus},\n        {provide: FrameManager, useFactory: () => FrameManager.initialize(123)},\n      ],\n    });\n\n    frameManager = testModule.inject(FrameManager);\n  });\n\n  it('should add frame when contentScriptConnected event is emitted', () => {\n    contentScriptConnected(topLevelFrameId, 'name', 'http://localhost:4200/url');\n    const frames = frameManager.frames();\n    expect(frames.length).toBe(1);\n    expect(frames[0].id).toBe(topLevelFrameId);\n    expect(frames[0].name).toBe('name');\n    expect(frames[0].url.toString()).toBe('http://localhost:4200/url');\n  });\n\n  it('should set the selected frame to the first frame when there is only one frame', () => {\n    contentScriptConnected(topLevelFrameId, 'name', 'http://localhost:4200/url');\n    expect(frameManager.selectedFrame()?.id).toBe(topLevelFrameId);\n  });\n\n  it('should set selected frame when frameConnected event is emitted', () => {\n    contentScriptConnected(topLevelFrameId, 'name', 'http://localhost:4200/url');\n    contentScriptConnected(otherFrameId, 'name2', 'http://localhost:4200/url2');\n    frameConnected(otherFrameId);\n    expect(frameManager.selectedFrame()?.id).toBe(otherFrameId);\n  });\n\n  it('should remove frame when contentScriptDisconnected event is emitted', () => {\n    contentScriptConnected(topLevelFrameId, 'name', 'http://localhost:4200/url');\n    contentScriptConnected(otherFrameId, 'name2', 'http://localhost:4200/url2');\n    expect(frameManager.frames().length).toBe(2);\n    contentScriptDisconnected(otherFrameId);\n    expect(frameManager.frames().length).toBe(1);\n    expect(frameManager.frames()[0].id).toBe(topLevelFrameId);\n\n    const errorSpy = spyOn(console, 'error');\n    contentScriptDisconnected(topLevelFrameId);\n    expect(frameManager.frames().length).toBe(0);\n    expect(errorSpy).toHaveBeenCalledWith('Angular DevTools is not connected to any frames.');\n  });\n\n  it('should set selected frame to top level frame when contentScriptDisconnected event is emitted for selected frame', () => {\n    contentScriptConnected(topLevelFrameId, 'name', 'http://localhost:4200/url');\n    contentScriptConnected(otherFrameId, 'name2', 'http://localhost:4200/url2');\n    frameConnected(otherFrameId);\n    expect(frameManager.selectedFrame()?.id).toBe(otherFrameId);\n    contentScriptDisconnected(otherFrameId);\n    expect(frameManager.selectedFrame()?.id).toBe(topLevelFrameId);\n  });\n\n  it('should not set selected frame to top level frame when contentScriptDisconnected event is emitted for non selected frame', () => {\n    contentScriptConnected(topLevelFrameId, 'name', 'http://localhost:4200/url');\n    contentScriptConnected(otherFrameId, 'name2', 'http://localhost:4200/url2');\n    frameConnected(topLevelFrameId);\n    expect(frameManager.selectedFrame()?.id).toBe(topLevelFrameId);\n    contentScriptDisconnected(otherFrameId);\n    expect(frameManager.selectedFrame()?.id).toBe(topLevelFrameId);\n  });\n\n  it('should not set selected frame to top level frame when contentScriptDisconnected event is emitted for non existing frame', () => {\n    const nonExistingFrameId = 3;\n\n    contentScriptConnected(topLevelFrameId, 'name', 'http://localhost:4200/url');\n    contentScriptConnected(otherFrameId, 'name2', 'http://localhost:4200/url2');\n    frameConnected(otherFrameId);\n    expect(frameManager.selectedFrame()?.id).toBe(otherFrameId);\n    contentScriptDisconnected(nonExistingFrameId);\n    expect(frameManager.selectedFrame()?.id).toBe(otherFrameId);\n  });\n\n  it('isSelectedFrame should return true when frame matches selected frame', () => {\n    contentScriptConnected(topLevelFrameId, 'name', 'http://localhost:4200/url');\n    contentScriptConnected(otherFrameId, 'name2', 'http://localhost:4200/url2');\n    const topLevelFrame = getFrameFromFrameManager(topLevelFrameId);\n    const otherFrame = getFrameFromFrameManager(otherFrameId);\n    expect(topLevelFrame).toBeDefined();\n    expect(otherFrame).toBeDefined();\n    expect(frameManager.isSelectedFrame(topLevelFrame!)).toBe(true);\n  });\n\n  it('isSelectedFrame should return false when frame does not match selected frame', () => {\n    contentScriptConnected(topLevelFrameId, 'name', 'http://localhost:4200/url');\n    contentScriptConnected(otherFrameId, 'name2', 'http://localhost:4200/url2');\n    const topLevelFrame = getFrameFromFrameManager(topLevelFrameId);\n    const otherFrame = getFrameFromFrameManager(otherFrameId);\n    expect(topLevelFrame).toBeDefined();\n    expect(otherFrame).toBeDefined();\n    expect(frameManager.isSelectedFrame(otherFrame!)).toBe(false);\n  });\n\n  it('inspectFrame should emit enableFrameConnection message', () => {\n    contentScriptConnected(topLevelFrameId, 'name', 'http://localhost:4200/url');\n    const topLevelFrame = getFrameFromFrameManager(topLevelFrameId);\n    expect(topLevelFrame).toBeDefined();\n    frameManager.inspectFrame(topLevelFrame!);\n    expect(messageBus.emit).toHaveBeenCalledWith('enableFrameConnection', [topLevelFrameId, tabId]);\n  });\n\n  it('inspectFrame should set selected frame', () => {\n    contentScriptConnected(topLevelFrameId, 'name', 'http://localhost:4200/url');\n    contentScriptConnected(otherFrameId, 'name2', 'https://angular.dev/');\n    const topLevelFrame = getFrameFromFrameManager(topLevelFrameId);\n    expect(topLevelFrame).toBeDefined();\n    frameManager.inspectFrame(topLevelFrame!);\n    expect(frameManager.selectedFrame()?.id).toBe(topLevelFrameId);\n  });\n\n  it('frameHasUniqueUrl should return false when a two frames have the same url', () => {\n    contentScriptConnected(topLevelFrameId, 'name', 'https://angular.dev/');\n    contentScriptConnected(otherFrameId, 'name2', 'https://angular.dev/');\n    expect(frameManager.selectedFrame()?.url.toString()).toBe('https://angular.dev/');\n    expect(frameManager.activeFrameHasUniqueUrl()).toBe(false);\n  });\n\n  it('frameHasUniqueUrl should return true when only one frame has a given url', () => {\n    contentScriptConnected(topLevelFrameId, 'name', 'https://angular.dev/');\n    contentScriptConnected(otherFrameId, 'name', 'https://angular.dev/overview');\n    expect(frameManager.selectedFrame()?.url.toString()).toBe('https://angular.dev/');\n    expect(frameManager.activeFrameHasUniqueUrl()).toBe(true);\n  });\n\n  it('frameHasUniqueUrl should not consider url fragments as part of the url comparison', () => {\n    contentScriptConnected(topLevelFrameId, 'name', 'https://angular.dev/guide/components');\n    contentScriptConnected(\n      otherFrameId,\n      'name',\n      'https://angular.dev/guide/components#using-components',\n    );\n    expect(frameManager.selectedFrame()?.url.toString()).toBe(\n      'https://angular.dev/guide/components',\n    );\n    expect(frameManager.activeFrameHasUniqueUrl()).toBe(false);\n  });\n\n  it('frameHasUniqueUrl should return false when frame is null', () => {\n    expect(frameManager.activeFrameHasUniqueUrl()).toBe(false);\n  });\n});\n"]}