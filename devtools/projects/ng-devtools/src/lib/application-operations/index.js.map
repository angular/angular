{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAKH,MAAM,OAAgB,qBAAqB;CAS1C","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Frame} from '../application-environment';\nimport {DirectivePosition, ElementPosition, SignalNodePosition} from '../../../../protocol';\n\nexport abstract class ApplicationOperations {\n  abstract viewSource(position: ElementPosition, target: Frame, directiveIndex?: number): void;\n  abstract selectDomElement(position: ElementPosition, target: Frame): void;\n  abstract inspect(directivePosition: DirectivePosition, objectPath: string[], target: Frame): void;\n  abstract inspectSignal(position: SignalNodePosition, target: Frame): void;\n  abstract viewSourceFromRouter(name: string, type: string, target: Frame): void;\n  abstract setStorageItems(items: {[key: string]: unknown}): Promise<void>;\n  abstract getStorageItems(items: string[]): Promise<{[key: string]: unknown}>;\n  abstract removeStorageItems(items: string[]): Promise<void>;\n}\n"]}