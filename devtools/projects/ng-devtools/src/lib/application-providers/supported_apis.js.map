{"version":3,"file":"supported_apis.js","sourceRoot":"","sources":["supported_apis.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAC,cAAc,EAAE,MAAM,EAAC,MAAM,eAAe,CAAC;AAYrD,MAAM,CAAC,MAAM,cAAc,GAAG,IAAI,cAAc,CAAsB,gBAAgB,EAAE;IACtF,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,GAAG,EAAE;QACZ,IAAI,KAAK,GAAG,KAAK,CAAC;QAClB,MAAM,IAAI,GAAG,MAAM,CAAgB;YACjC,QAAQ,EAAE,KAAK;YACf,mBAAmB,EAAE,KAAK;YAC1B,MAAM,EAAE,KAAK;YACb,OAAO,EAAE,KAAK;YACd,aAAa,EAAE,KAAK;YACpB,0BAA0B,EAAE,KAAK;SAClC,CAAC,CAAC;QACH,MAAM,kBAAkB,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAE7C,MAAM,YAAY,GAAG,GAAG,EAAE,CAAC,kBAAkB,EAAE,CAAC;QAChD,YAAY,CAAC,IAAI,GAAG,CAAC,aAA4B,EAAE,EAAE;YACnD,IAAI,KAAK,EAAE,CAAC;gBACV,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;YAC3D,CAAC;YACD,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YACxB,KAAK,GAAG,IAAI,CAAC;QACf,CAAC,CAAC;QAEF,OAAO,YAAY,CAAC;IACtB,CAAC;CACF,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {InjectionToken, signal} from '@angular/core';\nimport {SupportedApis} from '../../../../protocol';\n\n/** A signal derivative containing all DevTools supported APIs.  */\nexport interface SupportedApisSignal {\n  /** Returns the supported APIs read-only signal. */\n  (): SupportedApis;\n\n  /** Initialize (set once) the supported APIs. */\n  init: (supportedApis: SupportedApis) => void;\n}\n\nexport const SUPPORTED_APIS = new InjectionToken<SupportedApisSignal>('SUPPORTED_APIS', {\n  providedIn: 'root',\n  factory: () => {\n    let isSet = false;\n    const apis = signal<SupportedApis>({\n      profiler: false,\n      dependencyInjection: false,\n      routes: false,\n      signals: false,\n      transferState: false,\n      signalPropertiesInspection: false,\n    });\n    const apisReadonlySignal = apis.asReadonly();\n\n    const readonlyApis = () => apisReadonlySignal();\n    readonlyApis.init = (supportedApis: SupportedApis) => {\n      if (isSet) {\n        throw new Error('Supported APIs signal is already set.');\n      }\n      apis.set(supportedApis);\n      isSet = true;\n    };\n\n    return readonlyApis;\n  },\n});\n"]}