{"version":3,"file":"supported_apis_spec.js","sourceRoot":"","sources":["supported_apis_spec.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAC,OAAO,EAAC,MAAM,uBAAuB,CAAC;AAC9C,OAAO,EAAC,cAAc,EAAsB,MAAM,kBAAkB,CAAC;AAErE,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,IAAI,aAAkC,CAAC;IAEvC,UAAU,CAAC,GAAG,EAAE;QACd,OAAO,CAAC,sBAAsB,CAAC,EAAE,CAAC,CAAC;QACnC,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAClD,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,EAAE,CAAC;YACjD,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;QAC1B,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iBAAiB,EAAE,GAAG,EAAE;QACzB,aAAa,CAAC,IAAI,CAAC;YACjB,mBAAmB,EAAE,KAAK;YAC1B,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,KAAK;YACb,OAAO,EAAE,IAAI;YACb,0BAA0B,EAAE,KAAK;YACjC,aAAa,EAAE,IAAI;SACpB,CAAC,CAAC;QAEH,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,OAAO,CAAC;YAC9B,mBAAmB,EAAE,KAAK;YAC1B,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,KAAK;YACb,OAAO,EAAE,IAAI;YACb,0BAA0B,EAAE,KAAK;YACjC,aAAa,EAAE,IAAI;SACpB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE,GAAG,EAAE;QAC9D,aAAa,CAAC,IAAI,CAAC;YACjB,mBAAmB,EAAE,IAAI;YACzB,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,IAAI;YACb,0BAA0B,EAAE,IAAI;YAChC,aAAa,EAAE,IAAI;SACpB,CAAC,CAAC;QAEH,MAAM,CAAC,GAAG,EAAE;YACV,aAAa,CAAC,IAAI,CAAC;gBACjB,mBAAmB,EAAE,IAAI;gBACzB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI;gBACb,0BAA0B,EAAE,IAAI;gBAChC,aAAa,EAAE,IAAI;aACpB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC;IACpB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {TestBed} from '@angular/core/testing';\nimport {SUPPORTED_APIS, SupportedApisSignal} from './supported_apis';\n\ndescribe('SUPPORTED_APIS', () => {\n  let supportedApis: SupportedApisSignal;\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({});\n    supportedApis = TestBed.inject(SUPPORTED_APIS);\n  });\n\n  it('should have all APIs disabled by default', () => {\n    for (const api of Object.values(supportedApis())) {\n      expect(api).toBeFalse();\n    }\n  });\n\n  it('should set APIs', () => {\n    supportedApis.init({\n      dependencyInjection: false,\n      profiler: true,\n      routes: false,\n      signals: true,\n      signalPropertiesInspection: false,\n      transferState: true,\n    });\n\n    expect(supportedApis()).toEqual({\n      dependencyInjection: false,\n      profiler: true,\n      routes: false,\n      signals: true,\n      signalPropertiesInspection: false,\n      transferState: true,\n    });\n  });\n\n  it('should disallow initializing the APIs more than once', () => {\n    supportedApis.init({\n      dependencyInjection: true,\n      profiler: true,\n      routes: true,\n      signals: true,\n      signalPropertiesInspection: true,\n      transferState: true,\n    });\n\n    expect(() => {\n      supportedApis.init({\n        dependencyInjection: true,\n        profiler: true,\n        routes: true,\n        signals: true,\n        signalPropertiesInspection: true,\n        transferState: true,\n      });\n    }).toThrowError();\n  });\n});\n"]}