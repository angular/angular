{"version":3,"file":"debouncer.js","sourceRoot":"","sources":["debouncer.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,oCAAoC;AACpC,MAAM,OAAO,SAAS;IAAtB;QAEU,gBAAW,GAAY,KAAK,CAAC;IA0CvC,CAAC;IAxCC;;;;;;;;;;;;;;;;;;;;OAoBG;IACH,QAAQ,CAAqC,OAAU,EAAE,OAAe;QACtE,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;QACvE,CAAC;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,OAAO,CAAC,CAAC,GAAG,QAAe,EAAE,EAAE;YAC7B,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC;QAChE,CAAC,CAAM,CAAC;IACV,CAAC;IAED,+DAA+D;IAC/D,MAAM;QACJ,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;YAC9B,YAAY,CAAC,IAAI,CAAC,MAA2B,CAAC,CAAC;YAC/C,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QAC1B,CAAC;IACH,CAAC;CACF","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n/** Debounces a callback/handler. */\nexport class Debouncer {\n  private handle?: ReturnType<typeof setTimeout>;\n  private initialized: boolean = false;\n\n  /**\n   * Debounces the wrapped handler by a provided timeout.\n   *\n   * Example:\n   *\n   * ```typescript\n   * // Non-debounced\n   * api((args) => { ... });\n   *\n   * // Debounced\n   * const d = new Debouncer();\n   * api(d.debounce(\n   *   (args) => { ... },\n   *   1000\n   * ));\n   * ```\n   *\n   * @param handler\n   * @param timeout\n   * @returns A debounced handler\n   */\n  debounce<T extends (...args: any[]) => void>(handler: T, timeout: number): T {\n    if (this.initialized) {\n      throw new Error('The debouncer is already initialized and running.');\n    }\n    this.initialized = true;\n\n    return ((...lastArgs: any[]) => {\n      this.cancel();\n      this.handle = setTimeout(() => handler(...lastArgs), timeout);\n    }) as T;\n  }\n\n  /** Cancel the currently debounced handler, if not resolved. */\n  cancel() {\n    if (this.handle !== undefined) {\n      clearTimeout(this.handle as unknown as number);\n      this.handle = undefined;\n    }\n  }\n}\n"]}