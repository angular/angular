{"version":3,"file":"split.component.js","sourceRoot":"","sources":["split.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  afterNextRender,\n  booleanAttribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  effect,\n  ElementRef,\n  input,\n  linkedSignal,\n  OnDestroy,\n  output,\n  QueryList,\n  Renderer2,\n  untracked,\n  ViewChildren,\n} from '@angular/core';\nimport {outputFromObservable} from '@angular/core/rxjs-interop';\nimport {Observable, Subject, Subscriber} from 'rxjs';\nimport {debounceTime} from 'rxjs/operators';\n\nimport {\n  Direction,\n  IArea,\n  IAreaSnapshot,\n  IOutputAreaSizes,\n  IOutputData,\n  IPoint,\n  ISplitSnapshot,\n  Unit,\n} from './interface';\nimport {SplitAreaDirective} from './splitArea.directive';\nimport {\n  getAreaMaxSize,\n  getAreaMinSize,\n  getElementPixelSize,\n  getGutterSideAbsorptionCapacity,\n  getInputPositiveNumber,\n  getPointFromEvent,\n  isUserSizesValid,\n  updateAreaSize,\n} from './utils';\n\n/**\n * angular-split\n *\n *\n *  PERCENT MODE ([unit]=\"'percent'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |       20                 30                 20                 15                 15      | <--\n * [size]=\"x\" |               10px               10px               10px               10px | <--\n * [gutterSize]=\"10\" |calc(20% - 8px)    calc(30% - 12px)   calc(20% - 8px)    calc(15% - 6px)\n * calc(15% - 6px)| <-- CSS flex-basis property (with flex-grow&shrink at 0) |     152px 228px 152px\n * 114px              114px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <--\n * el.getBoundingClientRect().width flex-basis = calc( { area.size }% - { area.size/100 *\n * nbGutter*gutterSize }px );\n *\n *\n *  PIXEL MODE ([unit]=\"'pixel'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |      100                250                 *                 150                100      | <--\n * [size]=\"y\" |               10px               10px               10px               10px | <--\n * [gutterSize]=\"10\" |   0 0 100px          0 0 250px           1 1 auto          0 0 150px 0 0\n * 100px   | <-- CSS flex property (flex-grow/flex-shrink/flex-basis) |     100px              250px\n * 200px              150px              100px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <--\n * el.getBoundingClientRect().width\n *\n */\n\n@Component({\n  selector: 'as-split',\n  exportAs: 'asSplit',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [`./split.component.scss`],\n  template: `<ng-content></ng-content>\n    @for (_ of displayedAreas; track $index) {\n      @if ($last === false) {\n        <div\n          #gutterEls\n          class=\"as-split-gutter\"\n          [style.flex-basis.px]=\"gutterSize()\"\n          [style.order]=\"$index * 2 + 1\"\n          (mousedown)=\"startDragging($event, $index * 2 + 1, $index + 1)\"\n          (touchstart)=\"startDragging($event, $index * 2 + 1, $index + 1)\"\n          (mouseup)=\"clickGutter($event, $index + 1)\"\n          (touchend)=\"clickGutter($event, $index + 1)\"\n        >\n          <div class=\"as-split-gutter-icon\"></div>\n        </div>\n      }\n    }`,\n  host: {\n    '[class.as-disabled]': 'disabled()',\n    '[class.as-transition]': 'useTransition()',\n    '[class.as-horizontal]': 'this.direction() === \"horizontal\"',\n    '[class.as-vertical]': 'this.direction() === \"vertical\"',\n    '[attr.dir]': 'dir()',\n  },\n})\nexport class SplitComponent implements OnDestroy {\n  directionInput = input<Direction>('horizontal', {alias: 'direction'});\n  // This allows the direction to be writable from the outside\n  direction = linkedSignal(this.directionInput);\n\n  unit = input<Unit>('percent');\n\n  gutterSize = input(11, {transform: (v: unknown) => getInputPositiveNumber(v, 11)});\n  gutterStep = input(1, {transform: (v: unknown) => getInputPositiveNumber(v, 1)});\n  restrictMove = input(false, {transform: booleanAttribute});\n  useTransition = input(false, {transform: booleanAttribute});\n  disabled = input(false, {transform: booleanAttribute});\n  dir = input<'ltr' | 'rtl'>('ltr');\n\n  gutterDblClickDuration = input(0, {transform: (v: unknown) => getInputPositiveNumber(v, 0)});\n\n  ////\n\n  dragStart = output<IOutputData>();\n  dragEnd = output<IOutputData>();\n  gutterClick = output<IOutputData>();\n  gutterDblClick = output<IOutputData>();\n\n  private transitionEndSubscriber: Subscriber<IOutputAreaSizes> | null = null;\n  transitionEnd = outputFromObservable<IOutputAreaSizes>(\n    new Observable((subscriber) => (this.transitionEndSubscriber = subscriber)).pipe(\n      debounceTime<any>(20),\n    ),\n  );\n  private dragProgressSubject: Subject<IOutputData> = new Subject();\n  dragProgress$: Observable<IOutputData> = this.dragProgressSubject.asObservable();\n\n  private isDragging: boolean = false;\n  private dragListeners: Array<Function> = [];\n  private snapshot: ISplitSnapshot | null = null;\n  private startPoint: IPoint | null = null;\n  private endPoint: IPoint | null = null;\n\n  public readonly displayedAreas: Array<IArea> = [];\n  private readonly hidedAreas: Array<IArea> = [];\n\n  @ViewChildren('gutterEls') private gutterEls!: QueryList<ElementRef>;\n\n  constructor(\n    private elRef: ElementRef,\n    private cdRef: ChangeDetectorRef,\n    private renderer: Renderer2,\n  ) {\n    // To avoid transition at first rendering\n    afterNextRender({\n      write: () => this.renderer.addClass(this.elRef.nativeElement, 'as-init'),\n    });\n\n    effect(() => {\n      this.unit();\n      // If unit changes, rebuild areas sizes\n      this.build(false, true);\n    });\n\n    effect(() => {\n      this.direction();\n      // If direction changes, rebuild areas sizes\n      this.build(false, false);\n    });\n  }\n\n  private getNbGutters(): number {\n    return this.displayedAreas.length === 0 ? 0 : this.displayedAreas.length - 1;\n  }\n\n  public addArea(component: SplitAreaDirective): void {\n    const newArea: IArea = {\n      component,\n      order: 0,\n      size: 0,\n      minSize: null,\n      maxSize: null,\n    };\n\n    if (component.visible) {\n      this.displayedAreas.push(newArea);\n\n      this.build(true, true);\n    } else {\n      this.hidedAreas.push(newArea);\n    }\n  }\n\n  public removeArea(component: SplitAreaDirective): void {\n    if (this.displayedAreas.some((a) => a.component === component)) {\n      const area = this.displayedAreas.find((a) => a.component === component);\n      this.displayedAreas.splice(this.displayedAreas.indexOf(area!), 1);\n\n      this.build(true, true);\n    } else if (this.hidedAreas.some((a) => a.component === component)) {\n      const area = this.hidedAreas.find((a) => a.component === component);\n      this.hidedAreas.splice(this.hidedAreas.indexOf(area!), 1);\n    }\n  }\n\n  public updateArea(\n    component: SplitAreaDirective,\n    resetOrders: boolean,\n    resetSizes: boolean,\n  ): void {\n    if (component.visible) {\n      this.build(resetOrders, resetSizes);\n    }\n  }\n\n  public showArea(component: SplitAreaDirective): void {\n    const area = this.hidedAreas.find((a) => a.component === component);\n    if (area === undefined) {\n      return;\n    }\n\n    const areas = this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);\n    this.displayedAreas.push(...areas);\n\n    this.build(true, true);\n  }\n\n  public hideArea(comp: SplitAreaDirective): void {\n    const area = this.displayedAreas.find((a) => a.component === comp);\n    if (area === undefined) {\n      return;\n    }\n\n    const areas = this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);\n    areas.forEach((area) => {\n      area.order = 0;\n      area.size = 0;\n    });\n    this.hidedAreas.push(...areas);\n\n    this.build(true, true);\n  }\n\n  public getVisibleAreaSizes(): IOutputAreaSizes {\n    return this.displayedAreas.map((a) => (a.size === null ? '*' : a.size));\n  }\n\n  public setVisibleAreaSizes(sizes: IOutputAreaSizes): boolean {\n    if (sizes.length !== this.displayedAreas.length) {\n      return false;\n    }\n\n    const formattedSizes = sizes.map((s) => getInputPositiveNumber(s, null));\n    const isValid = isUserSizesValid(untracked(this.unit), formattedSizes);\n\n    if (isValid === false) {\n      return false;\n    }\n\n    // @ts-ignore\n    this.displayedAreas.forEach((area, i) => (area.component._size = formattedSizes[i]));\n\n    this.build(false, true);\n    return true;\n  }\n\n  private build(resetOrders: boolean, resetSizes: boolean): void {\n    this.stopDragging();\n\n    // ¤ AREAS ORDER\n\n    if (resetOrders) {\n      // If user provided 'order' for each area, use it to sort them.\n      if (this.displayedAreas.every((a) => a.component.order !== null)) {\n        this.displayedAreas.sort((a, b) => <number>a.component.order - <number>b.component.order);\n      }\n\n      // Then set real order with multiples of 2, numbers between will be used by gutters.\n      this.displayedAreas.forEach((area, i) => {\n        area.order = i * 2;\n        area.component.setStyleOrder(area.order);\n      });\n    }\n\n    // ¤ AREAS SIZE\n\n    const unit = untracked(this.unit);\n    if (resetSizes) {\n      const useUserSizes = isUserSizesValid(\n        unit,\n        this.displayedAreas.map((a) => a.component.size),\n      );\n\n      switch (unit) {\n        case 'percent': {\n          const defaultSize = 100 / this.displayedAreas.length;\n\n          this.displayedAreas.forEach((area) => {\n            area.size = useUserSizes ? <number>area.component.size : defaultSize;\n            area.minSize = getAreaMinSize(area);\n            area.maxSize = getAreaMaxSize(area);\n          });\n          break;\n        }\n        case 'pixel': {\n          if (useUserSizes) {\n            this.displayedAreas.forEach((area) => {\n              area.size = area.component.size;\n              area.minSize = getAreaMinSize(area);\n              area.maxSize = getAreaMaxSize(area);\n            });\n          } else {\n            const wildcardSizeAreas = this.displayedAreas.filter((a) => a.component.size === null);\n\n            // No wildcard area > Need to select one arbitrarily > first\n            if (wildcardSizeAreas.length === 0 && this.displayedAreas.length > 0) {\n              this.displayedAreas.forEach((area, i) => {\n                area.size = i === 0 ? null : area.component.size;\n                area.minSize = i === 0 ? null : getAreaMinSize(area);\n                area.maxSize = i === 0 ? null : getAreaMaxSize(area);\n              });\n            }\n            // More than one wildcard area > Need to keep only one arbitrarily > first\n            else if (wildcardSizeAreas.length > 1) {\n              let alreadyGotOne = false;\n              this.displayedAreas.forEach((area) => {\n                if (area.component.size === null) {\n                  if (alreadyGotOne === false) {\n                    area.size = null;\n                    area.minSize = null;\n                    area.maxSize = null;\n                    alreadyGotOne = true;\n                  } else {\n                    area.size = 100;\n                    area.minSize = null;\n                    area.maxSize = null;\n                  }\n                } else {\n                  area.size = area.component.size;\n                  area.minSize = getAreaMinSize(area);\n                  area.maxSize = getAreaMaxSize(area);\n                }\n              });\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    this.refreshStyleSizes(unit);\n    this.cdRef.markForCheck();\n  }\n\n  private refreshStyleSizes(unit: 'percent' | 'pixel'): void {\n    ///////////////////////////////////////////\n    // PERCENT MODE\n    if (unit === 'percent') {\n      // Only one area > flex-basis 100%\n      if (this.displayedAreas.length === 1) {\n        this.displayedAreas[0].component.setStyleFlex(0, 0, `100%`, false, false);\n      }\n      // Multiple areas > use each percent basis\n      else {\n        // Size in pixels\n        const visibleGutterSize = 1;\n        // Use visible gutter size in calculation instead of the invisible draggable gutter\n        const sumGutterSize = this.getNbGutters() * visibleGutterSize;\n\n        this.displayedAreas.forEach((area) => {\n          area.component.setStyleFlex(\n            0,\n            0,\n            `calc( ${area.size}% - ${(<number>area.size / 100) * sumGutterSize}px )`,\n            area.minSize !== null && area.minSize === area.size ? true : false,\n            area.maxSize !== null && area.maxSize === area.size ? true : false,\n          );\n        });\n      }\n    }\n    ///////////////////////////////////////////\n    // PIXEL MODE\n    else if (unit === 'pixel') {\n      this.displayedAreas.forEach((area) => {\n        // Area with wildcard size\n        if (area.size === null) {\n          if (this.displayedAreas.length === 1) {\n            area.component.setStyleFlex(1, 1, `100%`, false, false);\n          } else {\n            area.component.setStyleFlex(1, 1, `auto`, false, false);\n          }\n        }\n        // Area with pixel size\n        else {\n          // Only one area > flex-basis 100%\n          if (this.displayedAreas.length === 1) {\n            area.component.setStyleFlex(0, 0, `100%`, false, false);\n          }\n          // Multiple areas > use each pixel basis\n          else {\n            area.component.setStyleFlex(\n              0,\n              0,\n              `${area.size}px`,\n              area.minSize !== null && area.minSize === area.size ? true : false,\n              area.maxSize !== null && area.maxSize === area.size ? true : false,\n            );\n          }\n        }\n      });\n    }\n  }\n\n  private clickTimeout: number | null = null;\n\n  public clickGutter(event: MouseEvent | TouchEvent, gutterNum: number): void {\n    const tempPoint = getPointFromEvent(event);\n\n    // Be sure mouseup/touchend happened at same point as mousedown/touchstart to trigger\n    // click/dblclick\n    if (\n      this.startPoint &&\n      this.startPoint.x === tempPoint!.x &&\n      this.startPoint.y === tempPoint!.y\n    ) {\n      // If timeout in progress and new click > clearTimeout & dblClickEvent\n      if (this.clickTimeout !== null) {\n        window.clearTimeout(this.clickTimeout);\n        this.clickTimeout = null;\n        this.notify('dblclick', gutterNum);\n        this.stopDragging();\n      }\n      // Else start timeout to call clickEvent at end\n      else {\n        this.clickTimeout = window.setTimeout(() => {\n          this.clickTimeout = null;\n          this.notify('click', gutterNum);\n          this.stopDragging();\n        }, untracked(this.gutterDblClickDuration));\n      }\n    }\n  }\n\n  public startDragging(\n    event: MouseEvent | TouchEvent,\n    gutterOrder: number,\n    gutterNum: number,\n  ): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const direction = untracked(this.direction);\n\n    this.startPoint = getPointFromEvent(event);\n    if (this.startPoint === null || untracked(this.disabled)) {\n      return;\n    }\n\n    this.snapshot = {\n      gutterNum,\n      lastSteppedOffset: 0,\n      allAreasSizePixel:\n        getElementPixelSize(this.elRef, direction) -\n        this.getNbGutters() * untracked(this.gutterSize),\n      allInvolvedAreasSizePercent: 100,\n      areasBeforeGutter: [],\n      areasAfterGutter: [],\n    };\n\n    this.displayedAreas.forEach((area) => {\n      const areaSnapshot: IAreaSnapshot = {\n        area,\n        sizePixelAtStart: getElementPixelSize(area.component.elRef, direction),\n        sizePercentAtStart: (untracked(this.unit) === 'percent' ? area.size : -1) as number, // If pixel mode, anyway, will not be used.\n      };\n\n      if (area.order < gutterOrder) {\n        if (untracked(this.restrictMove)) {\n          this.snapshot!.areasBeforeGutter = [areaSnapshot];\n        } else {\n          this.snapshot!.areasBeforeGutter.unshift(areaSnapshot);\n        }\n      } else if (area.order > gutterOrder) {\n        if (untracked(this.restrictMove)) {\n          if (this.snapshot!.areasAfterGutter.length === 0)\n            this.snapshot!.areasAfterGutter = [areaSnapshot];\n        } else {\n          this.snapshot!.areasAfterGutter.push(areaSnapshot);\n        }\n      }\n    });\n\n    this.snapshot.allInvolvedAreasSizePercent = [\n      ...this.snapshot.areasBeforeGutter,\n      ...this.snapshot.areasAfterGutter,\n    ].reduce((t, a) => t + a.sizePercentAtStart, 0);\n\n    if (\n      this.snapshot.areasBeforeGutter.length === 0 ||\n      this.snapshot.areasAfterGutter.length === 0\n    ) {\n      return;\n    }\n\n    this.dragListeners.push(\n      this.renderer.listen('document', 'mouseup', this.stopDragging.bind(this)),\n    );\n    this.dragListeners.push(\n      this.renderer.listen('document', 'touchend', this.stopDragging.bind(this)),\n    );\n    this.dragListeners.push(\n      this.renderer.listen('document', 'touchcancel', this.stopDragging.bind(this)),\n    );\n\n    this.dragListeners.push(\n      this.renderer.listen('document', 'mousemove', this.dragEvent.bind(this)),\n    );\n    this.dragListeners.push(\n      this.renderer.listen('document', 'touchmove', this.dragEvent.bind(this)),\n    );\n\n    this.displayedAreas.forEach((area) => area.component.lockEvents());\n\n    this.isDragging = true;\n    this.renderer.addClass(this.elRef.nativeElement, 'as-dragging');\n    this.renderer.addClass(\n      this.gutterEls.toArray()[this.snapshot.gutterNum - 1].nativeElement,\n      'as-dragged',\n    );\n\n    this.notify('start', this.snapshot.gutterNum);\n  }\n\n  private dragEvent(event: MouseEvent | TouchEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.clickTimeout !== null) {\n      window.clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n\n    if (this.isDragging === false) {\n      return;\n    }\n\n    this.endPoint = getPointFromEvent(event);\n    if (this.endPoint === null) {\n      return;\n    }\n\n    // Calculate steppedOffset\n\n    let offset =\n      untracked(this.direction) === 'horizontal'\n        ? this.startPoint!.x - this.endPoint.x\n        : this.startPoint!.y - this.endPoint.y;\n    if (untracked(this.dir) === 'rtl') {\n      offset = -offset;\n    }\n\n    const gutterStep = untracked(this.gutterStep);\n    const steppedOffset = Math.round(offset / gutterStep) * gutterStep;\n\n    if (steppedOffset === this.snapshot!.lastSteppedOffset) {\n      return;\n    }\n\n    this.snapshot!.lastSteppedOffset = steppedOffset;\n\n    // Need to know if each gutter side areas could reacts to steppedOffset\n\n    const unit = untracked(this.unit);\n    let areasBefore = getGutterSideAbsorptionCapacity(\n      unit,\n      this.snapshot!.areasBeforeGutter,\n      -steppedOffset,\n      this.snapshot!.allAreasSizePixel,\n    );\n    let areasAfter = getGutterSideAbsorptionCapacity(\n      unit,\n      this.snapshot!.areasAfterGutter,\n      steppedOffset,\n      this.snapshot!.allAreasSizePixel,\n    );\n\n    // Each gutter side areas can't absorb all offset\n    if (areasBefore.remain !== 0 && areasAfter.remain !== 0) {\n      if (Math.abs(areasBefore.remain) === Math.abs(areasAfter.remain)) {\n      } else if (Math.abs(areasBefore.remain) > Math.abs(areasAfter.remain)) {\n        areasAfter = getGutterSideAbsorptionCapacity(\n          unit,\n          this.snapshot!.areasAfterGutter,\n          steppedOffset + areasBefore.remain,\n          this.snapshot!.allAreasSizePixel,\n        );\n      } else {\n        areasBefore = getGutterSideAbsorptionCapacity(\n          unit,\n          this.snapshot!.areasBeforeGutter,\n          -(steppedOffset - areasAfter.remain),\n          this.snapshot!.allAreasSizePixel,\n        );\n      }\n    }\n    // Areas before gutter can't absorbs all offset > need to recalculate sizes for areas after\n    // gutter.\n    else if (areasBefore.remain !== 0) {\n      areasAfter = getGutterSideAbsorptionCapacity(\n        unit,\n        this.snapshot!.areasAfterGutter,\n        steppedOffset + areasBefore.remain,\n        this.snapshot!.allAreasSizePixel,\n      );\n    }\n    // Areas after gutter can't absorbs all offset > need to recalculate sizes for areas before\n    // gutter.\n    else if (areasAfter.remain !== 0) {\n      areasBefore = getGutterSideAbsorptionCapacity(\n        unit,\n        this.snapshot!.areasBeforeGutter,\n        -(steppedOffset - areasAfter.remain),\n        this.snapshot!.allAreasSizePixel,\n      );\n    }\n\n    if (unit === 'percent') {\n      // Hack because of browser messing up with sizes using calc(X% - Ypx) ->\n      // el.getBoundingClientRect() If not there, playing with gutters makes total going down\n      // to 99.99875% then 99.99286%, 99.98986%,..\n      const all = [...areasBefore.list, ...areasAfter.list];\n      const areaToReset = all.find(\n        (a) =>\n          a.percentAfterAbsorption !== 0 &&\n          a.percentAfterAbsorption !== a.areaSnapshot.area.minSize &&\n          a.percentAfterAbsorption !== a.areaSnapshot.area.maxSize,\n      );\n\n      if (areaToReset) {\n        areaToReset.percentAfterAbsorption =\n          this.snapshot!.allInvolvedAreasSizePercent -\n          all\n            .filter((a) => a !== areaToReset)\n            .reduce((total, a) => total + a.percentAfterAbsorption, 0);\n      }\n    }\n\n    // Now we know areas could absorb steppedOffset, time to really update sizes\n    areasBefore.list.forEach((item) => updateAreaSize(unit, item));\n    areasAfter.list.forEach((item) => updateAreaSize(unit, item));\n\n    this.refreshStyleSizes(unit);\n    this.notify('progress', this.snapshot!.gutterNum);\n  }\n\n  private stopDragging(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (this.isDragging === false) {\n      return;\n    }\n\n    this.displayedAreas.forEach((area) => area.component.unlockEvents());\n\n    while (this.dragListeners.length > 0) {\n      const fct = this.dragListeners.pop();\n      if (fct) fct();\n    }\n\n    // Warning: Have to be before \"notify('end')\"\n    // because \"notify('end')\"\" can be linked to \"[size]='x'\" > \"build()\" > \"stopDragging()\"\n    this.isDragging = false;\n\n    // If moved from starting point, notify end\n    if (\n      this.endPoint &&\n      (this.startPoint!.x !== this.endPoint.x || this.startPoint!.y !== this.endPoint.y)\n    ) {\n      this.notify('end', this.snapshot!.gutterNum);\n    }\n\n    this.renderer.removeClass(this.elRef.nativeElement, 'as-dragging');\n    this.renderer.removeClass(\n      this.gutterEls.toArray()[this.snapshot!.gutterNum - 1].nativeElement,\n      'as-dragged',\n    );\n    this.snapshot = null;\n\n    // Needed to let (click)=\"clickGutter(...)\" event run and verify if mouse moved or not\n    setTimeout(() => {\n      this.startPoint = null;\n      this.endPoint = null;\n    });\n  }\n\n  public notify(\n    type: 'start' | 'progress' | 'end' | 'click' | 'dblclick' | 'transitionEnd',\n    gutterNum: number,\n  ): void {\n    const sizes = this.getVisibleAreaSizes();\n\n    if (type === 'start') {\n      this.dragStart.emit({gutterNum, sizes});\n    } else if (type === 'end') {\n      this.dragEnd.emit({gutterNum, sizes});\n    } else if (type === 'click') {\n      this.gutterClick.emit({gutterNum, sizes});\n    } else if (type === 'dblclick') {\n      this.gutterDblClick.emit({gutterNum, sizes});\n    } else if (type === 'transitionEnd') {\n      if (this.transitionEndSubscriber) {\n        this.transitionEndSubscriber?.next(sizes);\n      }\n    } else if (type === 'progress') {\n      // Stay outside zone to allow users do what they want about change detection mechanism.\n      this.dragProgressSubject.next({gutterNum, sizes});\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.stopDragging();\n  }\n}\n"]}