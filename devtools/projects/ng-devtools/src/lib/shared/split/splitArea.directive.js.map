{"version":3,"file":"splitArea.directive.js","sourceRoot":"","sources":["splitArea.directive.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Directive, ElementRef, Input, OnDestroy, OnInit, Renderer2} from '@angular/core';\nimport {SplitComponent} from './split.component';\nimport {getInputBoolean, getInputPositiveNumber} from './utils';\n\n@Directive({\n  selector: 'as-split-area, [as-split-area]',\n  exportAs: 'asSplitArea',\n})\nexport class SplitAreaDirective implements OnInit, OnDestroy {\n  private _order: number | null = null;\n\n  @Input()\n  set order(v: number | string | null) {\n    this._order = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, true, false);\n  }\n\n  get order(): number | null {\n    return this._order;\n  }\n\n  ////\n\n  private _size: number | null = null;\n\n  @Input()\n  set size(v: number | string | null) {\n    this._size = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get size(): number | null {\n    return this._size;\n  }\n\n  ////\n\n  private _minSize: number | null = null;\n\n  @Input()\n  set minSize(v: number | string | null) {\n    this._minSize = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get minSize(): number | null {\n    return this._minSize;\n  }\n\n  ////\n\n  private _maxSize: number | null = null;\n\n  @Input()\n  set maxSize(v: number | string | null) {\n    this._maxSize = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get maxSize(): number | null {\n    return this._maxSize;\n  }\n\n  ////\n\n  private _lockSize: boolean = false;\n\n  @Input()\n  set lockSize(v: boolean) {\n    this._lockSize = getInputBoolean(v);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get lockSize(): boolean {\n    return this._lockSize;\n  }\n\n  ////\n\n  private _visible: boolean = true;\n\n  @Input()\n  set visible(v: boolean) {\n    this._visible = getInputBoolean(v);\n\n    if (this._visible) {\n      this.split.showArea(this);\n      this.renderer.removeClass(this.elRef.nativeElement, 'as-hidden');\n    } else {\n      this.split.hideArea(this);\n      this.renderer.addClass(this.elRef.nativeElement, 'as-hidden');\n    }\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  ////\n\n  private transitionListener!: Function;\n  private readonly lockListeners: Array<Function> = [];\n\n  constructor(\n    public elRef: ElementRef,\n    private renderer: Renderer2,\n    private split: SplitComponent,\n  ) {\n    this.renderer.addClass(this.elRef.nativeElement, 'as-split-area');\n  }\n\n  public ngOnInit(): void {\n    this.split.addArea(this);\n\n    this.transitionListener = this.renderer.listen(\n      this.elRef.nativeElement,\n      'transitionend',\n      (event: TransitionEvent) => {\n        // Limit only flex-basis transition to trigger the event\n        if (event.propertyName === 'flex-basis') {\n          this.split.notify('transitionEnd', -1);\n        }\n      },\n    );\n  }\n\n  public setStyleOrder(value: number): void {\n    this.renderer.setStyle(this.elRef.nativeElement, 'order', value);\n  }\n\n  public setStyleFlex(\n    grow: number,\n    shrink: number,\n    basis: string,\n    isMin: boolean,\n    isMax: boolean,\n  ): void {\n    // Need 3 separated properties to work on IE11\n    // (https://github.com/angular/flex-layout/issues/323)\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-grow', grow);\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-shrink', shrink);\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', basis);\n\n    if (isMin === true) this.renderer.addClass(this.elRef.nativeElement, 'as-min');\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-min');\n\n    if (isMax === true) this.renderer.addClass(this.elRef.nativeElement, 'as-max');\n    else this.renderer.removeClass(this.elRef.nativeElement, 'as-max');\n  }\n\n  public lockEvents(): void {\n    this.lockListeners.push(\n      this.renderer.listen(this.elRef.nativeElement, 'selectstart', (e: Event) => false),\n    );\n    this.lockListeners.push(\n      this.renderer.listen(this.elRef.nativeElement, 'dragstart', (e: Event) => false),\n    );\n  }\n\n  public unlockEvents(): void {\n    while (this.lockListeners.length > 0) {\n      const fct = this.lockListeners.pop();\n      if (fct) fct();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unlockEvents();\n\n    if (this.transitionListener) {\n      this.transitionListener();\n    }\n\n    this.split.removeArea(this);\n  }\n}\n"]}