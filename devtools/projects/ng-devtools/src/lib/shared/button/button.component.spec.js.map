{"version":3,"file":"button.component.spec.js","sourceRoot":"","sources":["button.component.spec.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAmB,OAAO,EAAC,MAAM,uBAAuB,CAAC;AAChE,OAAO,EAAC,eAAe,EAAC,MAAM,oBAAoB,CAAC;AAEnD,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,IAAI,SAA0B,CAAC;IAC/B,IAAI,OAA0C,CAAC;IAC/C,IAAI,OAAgB,CAAC;IAErB,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,OAAO,CAAC,sBAAsB,CAAC;YACnC,OAAO,EAAE,CAAC,eAAe,CAAC;SAC3B,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAEvB,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;QACnD,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC;QACtC,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,aAAa,CAAC;QAC7C,OAAO,CAAC,aAAa,EAAE,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC3C,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC/C,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC5C,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC7C,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;QAChC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACjD,OAAO,CAAC,aAAa,EAAE,CAAC;QAExB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAChE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ComponentFixture, TestBed} from '@angular/core/testing';\nimport {ButtonComponent} from './button.component';\n\ndescribe('ButtonComponent', () => {\n  let component: ButtonComponent;\n  let fixture: ComponentFixture<ButtonComponent>;\n  let element: Element;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [ButtonComponent],\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(ButtonComponent);\n    component = fixture.componentInstance;\n    element = fixture.debugElement.nativeElement;\n    fixture.detectChanges();\n  });\n\n  it('should be primary type by default', () => {\n    expect(component.btnType()).toEqual('primary');\n    expect(element.classList.contains('type-primary')).toBeTrue();\n  });\n\n  it('should be standard size by default', () => {\n    expect(component.size()).toEqual('standard');\n    expect(element.classList.contains('size-compact')).toBeFalse();\n  });\n\n  it('should be compact size', () => {\n    fixture.componentRef.setInput('size', 'compact');\n    fixture.detectChanges();\n\n    expect(element.classList.contains('size-compact')).toBeTrue();\n  });\n});\n"]}