{"version":3,"file":"esbuild-base.config.mjs","sourceRoot":"","sources":["esbuild-base.config.mts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,aAAa;AACb,OAAO,EAAC,kCAAkC,EAAC,MAAM,4CAA4C,CAAC;AAC9F,OAAO,EAAC,+BAA+B,EAAC,MAAM,uCAAuC,CAAC;AAEtF,iDAAiD;AACjD,SAAS,+BAA+B,CAAC,KAA2B;IAClE,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CACjC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE,EAAE;QAC5B,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QACjC,OAAO,MAAM,CAAC;IAChB,CAAC,EACD,EAA6B,CAC9B,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,YAAY,CAAC,EACzC,YAAY,EACZ,QAAQ,GAIT;IACC,OAAO;QACL,iBAAiB,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;QAClC,oFAAoF;QACpF,UAAU,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC;QAClD,yDAAyD;QACzD,UAAU,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;QAC1C,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,+BAA+B,CAAC,+BAA+B,CAAC,CAAC,CAAC,CAAC,SAAS;QAC/F,OAAO,EAAE;YACP,MAAM,kCAAkC,CAAC;gBACvC,QAAQ,EAAE;oBACR,gBAAgB,EAAE,SAAS;iBAC5B;gBACD,iCAAiC,EAAE,IAAI;gBACvC,YAAY,EAAE,YAAY;oBACxB,CAAC,CAAC;wBACE,0BAA0B,EAAE,KAAK;wBACjC,0FAA0F;wBAC1F,iFAAiF;wBACjF,WAAW,EAAE,mBAAmB;wBAChC,aAAa,EAAE;4BACb,mEAAmE;4BACnE,yEAAyE;4BACzE,uFAAuF;4BACvF,wFAAwF;4BACxF,wFAAwF;4BACxF,+BAA+B;4BAC/B,0EAA0E;4BAC1E,wEAAwE;4BACxE,8EAA8E;4BAC9E,yBAAyB;4BACzB,iCAAiC,EAAE,QAAQ;yBAC5C;qBACF;oBACH,CAAC,CAAC,SAAS;aACd,CAAC;SACH;KACF,CAAC;AACJ,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n// @ts-ignore\nimport {createEsbuildAngularOptimizePlugin} from '../angular-optimization/esbuild-plugin.mjs';\nimport {GLOBAL_DEFS_FOR_TERSER_WITH_AOT} from '@angular/compiler-cli/private/tooling';\n\n/** Converts an object to a string dictionary. */\nfunction convertObjectToStringDictionary(value: {[key: string]: any}) {\n  return Object.entries(value).reduce(\n    (result, [propName, value]) => {\n      result[propName] = String(value);\n      return result;\n    },\n    {} as {[key: string]: string},\n  );\n}\n\nexport default async function createConfig({\n  enableLinker,\n  optimize,\n}: {\n  enableLinker: boolean;\n  optimize: boolean;\n}) {\n  return {\n    resolveExtensions: ['.mjs', '.js'],\n    // This ensures that we prioritize ES2020. RxJS would otherwise use the ESM5 output.\n    mainFields: ['es2020', 'es2015', 'module', 'main'],\n    // `tslib` sets the `module` condition to resolve to ESM.\n    conditions: ['es2020', 'es2015', 'module'],\n    define: optimize ? convertObjectToStringDictionary(GLOBAL_DEFS_FOR_TERSER_WITH_AOT) : undefined,\n    plugins: [\n      await createEsbuildAngularOptimizePlugin({\n        optimize: {\n          isSideEffectFree: undefined,\n        },\n        downlevelAsyncGeneratorsIfPresent: true,\n        enableLinker: enableLinker\n          ? {\n              ensureNoPartialDeclaration: false,\n              // Only run the linker on fesm2020 and fesm2022 bundles. This should not have an effect on\n              // the bundle output, but helps speeding up ESBuild when it visits other modules.\n              filterPaths: /fesm2020|fesm2022/,\n              linkerOptions: {\n                // DevTools relies on angular framework packages that are consumed,\n                // locally via bazel. These packages have a version of 0.0.0-PLACEHOLDER.\n                // DevTools also relies on Angular CDK and Material packages that are consumed via npm.\n                // Because of this, we set unknownDeclarationVersionHandling to ignore so that we bypass\n                // selecting a linker for our CDK and Material dependencies based on our local framework\n                // version (0.0.0-PLACEHOLDER).\n                // Instead this option defaults to the latest linker version, which should\n                // be correct, except for the small time interval where we rollout a new\n                // declaration version and target a material release that hasn't been compiled\n                // with that version yet.\n                unknownDeclarationVersionHandling: 'ignore',\n              },\n            }\n          : undefined,\n      }),\n    ],\n  };\n}\n"]}